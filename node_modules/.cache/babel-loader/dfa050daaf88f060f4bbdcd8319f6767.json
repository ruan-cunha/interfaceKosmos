{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAnonymousMeta = getAnonymousMeta;\n\nvar _isDocker = _interopRequireDefault(require(\"next/dist/compiled/is-docker\"));\n\nvar _isWsl = _interopRequireDefault(require(\"next/dist/compiled/is-wsl\"));\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar ciEnvironment = _interopRequireWildcard(require(\"./ci-info\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nlet traits;\n\nfunction getAnonymousMeta() {\n  if (traits) {\n    return traits;\n  }\n\n  const cpus = _os.default.cpus() || [];\n  const {\n    NOW_REGION\n  } = process.env;\n  traits = {\n    // Software information\n    systemPlatform: _os.default.platform(),\n    systemRelease: _os.default.release(),\n    systemArchitecture: _os.default.arch(),\n    // Machine information\n    cpuCount: cpus.length,\n    cpuModel: cpus.length ? cpus[0].model : null,\n    cpuSpeed: cpus.length ? cpus[0].speed : null,\n    memoryInMb: Math.trunc(_os.default.totalmem() / Math.pow(1024, 2)),\n    // Environment information\n    isDocker: (0, _isDocker).default(),\n    isNowDev: NOW_REGION === 'dev1',\n    isWsl: _isWsl.default,\n    isCI: ciEnvironment.isCI,\n    ciName: ciEnvironment.isCI && ciEnvironment.name || null,\n    nextVersion: \"11.1.2\"\n  };\n  return traits;\n}","map":{"version":3,"sources":["../../telemetry/anonymous-meta.ts"],"names":[],"mappings":";;;;;QAwBgB,gB,GAAA,gB;;AAxBa,IAAA,SAA8B,GAAA,sBAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAA9B;;AACJ,IAAA,MAA2B,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAA3B;;AACV,IAAA,GAAI,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAJ;;AAEH,IAAA,aAAa,GAAA,uBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBZ,IAAI,MAAJ;;SAEgB,gB,GAAkC;AAChD,MAAI,MAAJ,EAAY;WACH,M;AACR;;AAED,QAAM,IAAI,GA3BG,GAAI,CAAA,OAAJ,CA2BG,IA3BH,MA2BO,EAApB;AACA,QAAK;AAAG,IAAA;AAAH,MAAkB,OAAO,CAAC,GAA/B;AACA,EAAA,MAAM,GAAA;AACJ;AACA,IAAA,cAAc,EA/BH,GAAI,CAAA,OAAJ,CA+BQ,QA/BR,EA6BP;AAGJ,IAAA,aAAa,EAhCF,GAAI,CAAA,OAAJ,CAgCO,OAhCP,EA6BP;AAIJ,IAAA,kBAAkB,EAjCP,GAAI,CAAA,OAAJ,CAiCY,IAjCZ,EA6BP;AAKJ;AACA,IAAA,QAAQ,EAAE,IAAI,CAAC,MANX;AAOJ,IAAA,QAAQ,EAAE,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAtB,GAA8B,IAPpC;AAQJ,IAAA,QAAQ,EAAE,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,CAAD,CAAJ,CAAQ,KAAtB,GAA8B,IARpC;AASJ,IAAA,UAAU,EAAE,IAAI,CAAC,KAAL,CAtCD,GAAI,CAAA,OAAJ,CAsCe,QAtCf,KAsC4B,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA3B,CATR;AAUJ;AACA,IAAA,QAAQ,EAAA,CAAA,GA1CiB,SA0CjB,EA1C+C,OA0C/C,EAXJ;AAYJ,IAAA,QAAQ,EAAE,UAAU,KAAA,MAZhB;AAaJ,IAAA,KAAK,EA3CgB,MAA2B,CAAA,OA8B5C;AAcJ,IAAA,IAAI,EAzCI,aAAa,CAyCD,IAdhB;AAeJ,IAAA,MAAM,EA1CE,aAAa,CA0CE,IA1Cf,IAAA,aAAa,CA0CwB,IA1CrC,IA0C8C,IAflD;AAgBJ,IAAA,WAAW,EAAE;AAhBT,GAAN;SAmBO,M;AACR","sourcesContent":["import isDockerFunction from 'next/dist/compiled/is-docker'\nimport isWslBoolean from 'next/dist/compiled/is-wsl'\nimport os from 'os'\n\nimport * as ciEnvironment from './ci-info'\n\ntype AnonymousMeta = {\n  systemPlatform: NodeJS.Platform\n  systemRelease: string\n  systemArchitecture: string\n  cpuCount: number\n  cpuModel: string | null\n  cpuSpeed: number | null\n  memoryInMb: number\n  isDocker: boolean\n  isNowDev: boolean\n  isWsl: boolean\n  isCI: boolean\n  ciName: string | null\n  nextVersion: string\n}\n\nlet traits: AnonymousMeta | undefined\n\nexport function getAnonymousMeta(): AnonymousMeta {\n  if (traits) {\n    return traits\n  }\n\n  const cpus = os.cpus() || []\n  const { NOW_REGION } = process.env\n  traits = {\n    // Software information\n    systemPlatform: os.platform(),\n    systemRelease: os.release(),\n    systemArchitecture: os.arch(),\n    // Machine information\n    cpuCount: cpus.length,\n    cpuModel: cpus.length ? cpus[0].model : null,\n    cpuSpeed: cpus.length ? cpus[0].speed : null,\n    memoryInMb: Math.trunc(os.totalmem() / Math.pow(1024, 2)),\n    // Environment information\n    isDocker: isDockerFunction(),\n    isNowDev: NOW_REGION === 'dev1',\n    isWsl: isWslBoolean,\n    isCI: ciEnvironment.isCI,\n    ciName: (ciEnvironment.isCI && ciEnvironment.name) || null,\n    nextVersion: process.env.__NEXT_VERSION as string,\n  }\n\n  return traits\n}\n"]},"metadata":{},"sourceType":"script"}