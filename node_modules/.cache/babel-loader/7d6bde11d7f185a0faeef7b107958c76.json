{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderToHTML = renderToHTML;\n\nvar _stream = require(\"stream\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar ReactDOMServer = _interopRequireWildcard(require(\"react-dom/server\"));\n\nvar _server = _interopRequireDefault(require(\"styled-jsx/server\"));\n\nvar _zenObservable = _interopRequireDefault(require(\"next/dist/compiled/zen-observable\"));\n\nvar _log = require(\"../build/output/log\");\n\nvar _constants = require(\"../lib/constants\");\n\nvar _isSerializableProps = require(\"../lib/is-serializable-props\");\n\nvar _amp = require(\"../shared/lib/amp\");\n\nvar _ampContext = require(\"../shared/lib/amp-context\");\n\nvar _constants1 = require(\"../shared/lib/constants\");\n\nvar _head = require(\"../shared/lib/head\");\n\nvar _headManagerContext = require(\"../shared/lib/head-manager-context\");\n\nvar _loadable = _interopRequireDefault(require(\"../shared/lib/loadable\"));\n\nvar _loadableContext = require(\"../shared/lib/loadable-context\");\n\nvar _postProcess = _interopRequireDefault(require(\"../shared/lib/post-process\"));\n\nvar _routerContext = require(\"../shared/lib/router-context\");\n\nvar _isDynamic = require(\"../shared/lib/router/utils/is-dynamic\");\n\nvar _utils = require(\"../shared/lib/utils\");\n\nvar _apiUtils = require(\"./api-utils\");\n\nvar _denormalizePagePath = require(\"./denormalize-page-path\");\n\nvar _fontUtils = require(\"./font-utils\");\n\nvar _normalizePagePath = require(\"./normalize-page-path\");\n\nvar _optimizeAmp = _interopRequireDefault(require(\"./optimize-amp\"));\n\nvar _loadCustomRoutes = require(\"../lib/load-custom-routes\");\n\nvar _utils1 = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction noRouter() {\n  const message = 'No router instance found. you should only use \"next/router\" inside the client side of your app. https://nextjs.org/docs/messages/no-router-instance';\n  throw new Error(message);\n}\n\nclass ServerRouter {\n  constructor(pathname, query, as, {\n    isFallback\n  }, isReady, basePath, locale, locales, defaultLocale, domainLocales, isPreview, isLocaleDomain) {\n    this.route = pathname.replace(/\\/$/, '') || '/';\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    this.isFallback = isFallback;\n    this.basePath = basePath;\n    this.locale = locale;\n    this.locales = locales;\n    this.defaultLocale = defaultLocale;\n    this.isReady = isReady;\n    this.domainLocales = domainLocales;\n    this.isPreview = !!isPreview;\n    this.isLocaleDomain = !!isLocaleDomain;\n  }\n\n  push() {\n    noRouter();\n  }\n\n  replace() {\n    noRouter();\n  }\n\n  reload() {\n    noRouter();\n  }\n\n  back() {\n    noRouter();\n  }\n\n  prefetch() {\n    noRouter();\n  }\n\n  beforePopState() {\n    noRouter();\n  }\n\n}\n\nfunction enhanceComponents(options, App, Component) {\n  // For backwards compatibility\n  if (typeof options === 'function') {\n    return {\n      App,\n      Component: options(Component)\n    };\n  }\n\n  return {\n    App: options.enhanceApp ? options.enhanceApp(App) : App,\n    Component: options.enhanceComponent ? options.enhanceComponent(Component) : Component\n  };\n}\n\nconst invalidKeysMsg = (methodName, invalidKeys) => {\n  return `Additional keys were returned from \\`${methodName}\\`. Properties intended for your component must be nested under the \\`props\\` key, e.g.:` + `\\n\\n\\treturn { props: { title: 'My Title', content: '...' } }` + `\\n\\nKeys that need to be moved: ${invalidKeys.join(', ')}.` + `\\nRead more: https://nextjs.org/docs/messages/invalid-getstaticprops-value`;\n};\n\nfunction checkRedirectValues(redirect, req, method) {\n  const {\n    destination,\n    permanent,\n    statusCode,\n    basePath: basePath1\n  } = redirect;\n  let errors = [];\n  const hasStatusCode = typeof statusCode !== 'undefined';\n  const hasPermanent = typeof permanent !== 'undefined';\n\n  if (hasPermanent && hasStatusCode) {\n    errors.push(`\\`permanent\\` and \\`statusCode\\` can not both be provided`);\n  } else if (hasPermanent && typeof permanent !== 'boolean') {\n    errors.push(`\\`permanent\\` must be \\`true\\` or \\`false\\``);\n  } else if (hasStatusCode && !_loadCustomRoutes.allowedStatusCodes.has(statusCode)) {\n    errors.push(`\\`statusCode\\` must undefined or one of ${[..._loadCustomRoutes.allowedStatusCodes].join(', ')}`);\n  }\n\n  const destinationType = typeof destination;\n\n  if (destinationType !== 'string') {\n    errors.push(`\\`destination\\` should be string but received ${destinationType}`);\n  }\n\n  const basePathType = typeof basePath1;\n\n  if (basePathType !== 'undefined' && basePathType !== 'boolean') {\n    errors.push(`\\`basePath\\` should be undefined or a false, received ${basePathType}`);\n  }\n\n  if (errors.length > 0) {\n    throw new Error(`Invalid redirect object returned from ${method} for ${req.url}\\n` + errors.join(' and ') + '\\n' + `See more info here: https://nextjs.org/docs/messages/invalid-redirect-gssp`);\n  }\n}\n\nasync function renderToHTML(req, res, pathname1, query1, renderOpts) {\n  // In dev we invalidate the cache by appending a timestamp to the resource URL.\n  // This is a workaround to fix https://github.com/vercel/next.js/issues/5860\n  // TODO: remove this workaround when https://bugs.webkit.org/show_bug.cgi?id=187726 is fixed.\n  renderOpts.devOnlyCacheBusterQueryString = renderOpts.dev ? renderOpts.devOnlyCacheBusterQueryString || `?ts=${Date.now()}` : ''; // don't modify original query object\n\n  query1 = Object.assign({}, query1);\n  const {\n    err,\n    dev = false,\n    ampPath = '',\n    App,\n    Document: Document1,\n    pageConfig = {},\n    Component,\n    buildManifest,\n    fontManifest,\n    reactLoadableManifest,\n    ErrorDebug,\n    getStaticProps,\n    getStaticPaths,\n    getServerSideProps,\n    isDataReq,\n    params,\n    previewProps,\n    basePath: basePath1,\n    devOnlyCacheBusterQueryString,\n    requireStaticHTML,\n    concurrentFeatures\n  } = renderOpts;\n\n  const getFontDefinition = url => {\n    if (fontManifest) {\n      return (0, _fontUtils).getFontDefinitionFromManifest(url, fontManifest);\n    }\n\n    return '';\n  };\n\n  const callMiddleware = async (method, args, props = false) => {\n    let results = props ? {} : [];\n\n    if (Document1[`${method}Middleware`]) {\n      let middlewareFunc = await Document1[`${method}Middleware`];\n      middlewareFunc = middlewareFunc.default || middlewareFunc;\n      const curResults = await middlewareFunc(...args);\n\n      if (props) {\n        for (const result of curResults) {\n          results = { ...results,\n            ...result\n          };\n        }\n      } else {\n        results = curResults;\n      }\n    }\n\n    return results;\n  };\n\n  const headTags = (...args) => callMiddleware('headTags', args);\n\n  const isFallback1 = !!query1.__nextFallback;\n  delete query1.__nextFallback;\n  delete query1.__nextLocale;\n  delete query1.__nextDefaultLocale;\n  const isSSG = !!getStaticProps;\n  const isBuildTimeSSG = isSSG && renderOpts.nextExport;\n  const defaultAppGetInitialProps = App.getInitialProps === App.origGetInitialProps;\n  const hasPageGetInitialProps = !!Component.getInitialProps;\n  const pageIsDynamic = (0, _isDynamic).isDynamicRoute(pathname1);\n  const isAutoExport = !hasPageGetInitialProps && defaultAppGetInitialProps && !isSSG && !getServerSideProps;\n\n  for (const methodName of ['getStaticProps', 'getServerSideProps', 'getStaticPaths']) {\n    if (Component[methodName]) {\n      throw new Error(`page ${pathname1} ${methodName} ${_constants.GSSP_COMPONENT_MEMBER_ERROR}`);\n    }\n  }\n\n  if (hasPageGetInitialProps && isSSG) {\n    throw new Error(_constants.SSG_GET_INITIAL_PROPS_CONFLICT + ` ${pathname1}`);\n  }\n\n  if (hasPageGetInitialProps && getServerSideProps) {\n    throw new Error(_constants.SERVER_PROPS_GET_INIT_PROPS_CONFLICT + ` ${pathname1}`);\n  }\n\n  if (getServerSideProps && isSSG) {\n    throw new Error(_constants.SERVER_PROPS_SSG_CONFLICT + ` ${pathname1}`);\n  }\n\n  if (getStaticPaths && !pageIsDynamic) {\n    throw new Error(`getStaticPaths is only allowed for dynamic SSG pages and was found on '${pathname1}'.` + `\\nRead more: https://nextjs.org/docs/messages/non-dynamic-getstaticpaths-usage`);\n  }\n\n  if (!!getStaticPaths && !isSSG) {\n    throw new Error(`getStaticPaths was added without a getStaticProps in ${pathname1}. Without getStaticProps, getStaticPaths does nothing`);\n  }\n\n  if (isSSG && pageIsDynamic && !getStaticPaths) {\n    throw new Error(`getStaticPaths is required for dynamic SSG pages and is missing for '${pathname1}'.` + `\\nRead more: https://nextjs.org/docs/messages/invalid-getstaticpaths-value`);\n  }\n\n  let asPath = renderOpts.resolvedAsPath || req.url;\n\n  if (dev) {\n    const {\n      isValidElementType\n    } = require('react-is');\n\n    if (!isValidElementType(Component)) {\n      throw new Error(`The default export is not a React Component in page: \"${pathname1}\"`);\n    }\n\n    if (!isValidElementType(App)) {\n      throw new Error(`The default export is not a React Component in page: \"/_app\"`);\n    }\n\n    if (!isValidElementType(Document1)) {\n      throw new Error(`The default export is not a React Component in page: \"/_document\"`);\n    }\n\n    if (isAutoExport || isFallback1) {\n      // remove query values except ones that will be set during export\n      query1 = { ...(query1.amp ? {\n          amp: query1.amp\n        } : {})\n      };\n      asPath = `${pathname1}${// ensure trailing slash is present for non-dynamic auto-export pages\n      req.url.endsWith('/') && pathname1 !== '/' && !pageIsDynamic ? '/' : ''}`;\n      req.url = pathname1;\n    }\n\n    if (pathname1 === '/404' && (hasPageGetInitialProps || getServerSideProps)) {\n      throw new Error(`\\`pages/404\\` ${_constants.STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`);\n    }\n\n    if (_constants1.STATIC_STATUS_PAGES.includes(pathname1) && (hasPageGetInitialProps || getServerSideProps)) {\n      throw new Error(`\\`pages${pathname1}\\` ${_constants.STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`);\n    }\n  }\n\n  await _loadable.default.preloadAll() // Make sure all dynamic imports are loaded\n  ;\n  let isPreview1;\n  let previewData;\n\n  if ((isSSG || getServerSideProps) && !isFallback1) {\n    // Reads of this are cached on the `req` object, so this should resolve\n    // instantly. There's no need to pass this data down from a previous\n    // invoke, where we'd have to consider server & serverless.\n    previewData = (0, _apiUtils).tryGetPreviewData(req, res, previewProps);\n    isPreview1 = previewData !== false;\n  } // url will always be set\n\n\n  const routerIsReady = !!(getServerSideProps || hasPageGetInitialProps || !defaultAppGetInitialProps && !isSSG);\n  const router = new ServerRouter(pathname1, query1, asPath, {\n    isFallback: isFallback1\n  }, routerIsReady, basePath1, renderOpts.locale, renderOpts.locales, renderOpts.defaultLocale, renderOpts.domainLocales, isPreview1, req.__nextIsLocaleDomain);\n  const ctx = {\n    err,\n    req: isAutoExport ? undefined : req,\n    res: isAutoExport ? undefined : res,\n    pathname: pathname1,\n    query: query1,\n    asPath,\n    locale: renderOpts.locale,\n    locales: renderOpts.locales,\n    defaultLocale: renderOpts.defaultLocale,\n    AppTree: props => {\n      return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, Object.assign({}, props, {\n        Component: Component,\n        router: router\n      })));\n    }\n  };\n  let props;\n  const ampState = {\n    ampFirst: pageConfig.amp === true,\n    hasQuery: Boolean(query1.amp),\n    hybrid: pageConfig.amp === 'hybrid'\n  };\n  const inAmpMode = (0, _amp).isInAmpMode(ampState);\n  const reactLoadableModules = [];\n  let head = (0, _head).defaultHead(inAmpMode);\n  let scriptLoader = {};\n  const nextExport = !isSSG && (renderOpts.nextExport || dev && (isAutoExport || isFallback1));\n\n  const AppContainer = ({\n    children\n  }) => /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: router\n  }, /*#__PURE__*/_react.default.createElement(_ampContext.AmpStateContext.Provider, {\n    value: ampState\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: {\n      updateHead: state => {\n        head = state;\n      },\n      updateScripts: scripts => {\n        scriptLoader = scripts;\n      },\n      scripts: {},\n      mountedInstances: new Set()\n    }\n  }, /*#__PURE__*/_react.default.createElement(_loadableContext.LoadableContext.Provider, {\n    value: moduleName => reactLoadableModules.push(moduleName)\n  }, children))));\n\n  try {\n    props = await (0, _utils).loadGetInitialProps(App, {\n      AppTree: ctx.AppTree,\n      Component,\n      router,\n      ctx\n    });\n\n    if ((isSSG || getServerSideProps) && isPreview1) {\n      props.__N_PREVIEW = true;\n    }\n\n    if (isSSG) {\n      props[_constants1.STATIC_PROPS_ID] = true;\n    }\n\n    if (isSSG && !isFallback1) {\n      let data;\n\n      try {\n        data = await getStaticProps({ ...(pageIsDynamic ? {\n            params: query1\n          } : undefined),\n          ...(isPreview1 ? {\n            preview: true,\n            previewData: previewData\n          } : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale\n        });\n      } catch (staticPropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (staticPropsError.code === 'ENOENT') {\n          delete staticPropsError.code;\n        }\n\n        throw staticPropsError;\n      }\n\n      if (data == null) {\n        throw new Error(_constants.GSP_NO_RETURNED_VALUE);\n      }\n\n      const invalidKeys = Object.keys(data).filter(key => key !== 'revalidate' && key !== 'props' && key !== 'redirect' && key !== 'notFound');\n\n      if (invalidKeys.includes('unstable_revalidate')) {\n        throw new Error(_constants.UNSTABLE_REVALIDATE_RENAME_ERROR);\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getStaticProps', invalidKeys));\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof data.notFound !== 'undefined' && typeof data.redirect !== 'undefined') {\n          throw new Error(`\\`redirect\\` and \\`notFound\\` can not both be returned from ${isSSG ? 'getStaticProps' : 'getServerSideProps'} at the same time. Page: ${pathname1}\\nSee more info here: https://nextjs.org/docs/messages/gssp-mixed-not-found-redirect`);\n        }\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname1 === '/404') {\n          throw new Error(`The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`);\n        }\n\n        renderOpts.isNotFound = true;\n      }\n\n      if ('redirect' in data && data.redirect && typeof data.redirect === 'object') {\n        checkRedirectValues(data.redirect, req, 'getStaticProps');\n\n        if (isBuildTimeSSG) {\n          throw new Error(`\\`redirect\\` can not be returned from getStaticProps during prerendering (${req.url})\\n` + `See more info here: https://nextjs.org/docs/messages/gsp-redirect-during-prerender`);\n        }\n\n        data.props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: (0, _loadCustomRoutes).getRedirectStatus(data.redirect)\n        };\n\n        if (typeof data.redirect.basePath !== 'undefined') {\n          data.props.__N_REDIRECT_BASE_PATH = data.redirect.basePath;\n        }\n\n        renderOpts.isRedirect = true;\n      }\n\n      if ((dev || isBuildTimeSSG) && !renderOpts.isNotFound && !(0, _isSerializableProps).isSerializableProps(pathname1, 'getStaticProps', data.props)) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error('invariant: getStaticProps did not return valid props. Please report this.');\n      }\n\n      if ('revalidate' in data) {\n        if (typeof data.revalidate === 'number') {\n          if (!Number.isInteger(data.revalidate)) {\n            throw new Error(`A page's revalidate option must be seconds expressed as a natural number for ${req.url}. Mixed numbers, such as '${data.revalidate}', cannot be used.` + `\\nTry changing the value to '${Math.ceil(data.revalidate)}' or using \\`Math.ceil()\\` if you're computing the value.`);\n          } else if (data.revalidate <= 0) {\n            throw new Error(`A page's revalidate option can not be less than or equal to zero for ${req.url}. A revalidate option of zero means to revalidate after _every_ request, and implies stale data cannot be tolerated.` + `\\n\\nTo never revalidate, you can set revalidate to \\`false\\` (only ran once at build-time).` + `\\nTo revalidate as soon as possible, you can set the value to \\`1\\`.`);\n          } else if (data.revalidate > 31536000) {\n            // if it's greater than a year for some reason error\n            console.warn(`Warning: A page's revalidate option was set to more than a year for ${req.url}. This may have been done in error.` + `\\nTo only run getStaticProps at build-time and not revalidate at runtime, you can set \\`revalidate\\` to \\`false\\`!`);\n          }\n        } else if (data.revalidate === true) {\n          // When enabled, revalidate after 1 second. This value is optimal for\n          // the most up-to-date page possible, but without a 1-to-1\n          // request-refresh ratio.\n          data.revalidate = 1;\n        } else if (data.revalidate === false || typeof data.revalidate === 'undefined') {\n          // By default, we never revalidate.\n          data.revalidate = false;\n        } else {\n          throw new Error(`A page's revalidate option must be seconds expressed as a natural number. Mixed numbers and strings cannot be used. Received '${JSON.stringify(data.revalidate)}' for ${req.url}`);\n        }\n      } else {\n        data.revalidate = false;\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, 'props' in data ? data.props : undefined);\n      renderOpts.revalidate = 'revalidate' in data ? data.revalidate : undefined;\n      renderOpts.pageData = props; // this must come after revalidate is added to renderOpts\n\n      if (renderOpts.isNotFound) {\n        return null;\n      }\n    }\n\n    if (getServerSideProps) {\n      props[_constants1.SERVER_PROPS_ID] = true;\n    }\n\n    if (getServerSideProps && !isFallback1) {\n      let data;\n\n      try {\n        data = await getServerSideProps({\n          req: req,\n          res,\n          query: query1,\n          resolvedUrl: renderOpts.resolvedUrl,\n          ...(pageIsDynamic ? {\n            params: params\n          } : undefined),\n          ...(previewData !== false ? {\n            preview: true,\n            previewData: previewData\n          } : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale\n        });\n      } catch (serverSidePropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (serverSidePropsError.code === 'ENOENT') {\n          delete serverSidePropsError.code;\n        }\n\n        throw serverSidePropsError;\n      }\n\n      if (data == null) {\n        throw new Error(_constants.GSSP_NO_RETURNED_VALUE);\n      }\n\n      const invalidKeys = Object.keys(data).filter(key => key !== 'props' && key !== 'redirect' && key !== 'notFound');\n\n      if (data.unstable_notFound) {\n        throw new Error(`unstable_notFound has been renamed to notFound, please update the field to continue. Page: ${pathname1}`);\n      }\n\n      if (data.unstable_redirect) {\n        throw new Error(`unstable_redirect has been renamed to redirect, please update the field to continue. Page: ${pathname1}`);\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getServerSideProps', invalidKeys));\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname1 === '/404') {\n          throw new Error(`The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`);\n        }\n\n        renderOpts.isNotFound = true;\n        return null;\n      }\n\n      if ('redirect' in data && typeof data.redirect === 'object') {\n        checkRedirectValues(data.redirect, req, 'getServerSideProps');\n        data.props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: (0, _loadCustomRoutes).getRedirectStatus(data.redirect)\n        };\n\n        if (typeof data.redirect.basePath !== 'undefined') {\n          data.props.__N_REDIRECT_BASE_PATH = data.redirect.basePath;\n        }\n\n        renderOpts.isRedirect = true;\n      }\n\n      if (data.props instanceof Promise) {\n        data.props = await data.props;\n      }\n\n      if ((dev || isBuildTimeSSG) && !(0, _isSerializableProps).isSerializableProps(pathname1, 'getServerSideProps', data.props)) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error('invariant: getServerSideProps did not return valid props. Please report this.');\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, data.props);\n      renderOpts.pageData = props;\n    }\n  } catch (dataFetchError) {\n    throw dataFetchError;\n  }\n\n  if (!isSSG && !getServerSideProps && process.env.NODE_ENV !== 'production' && Object.keys((props === null || props === void 0 ? void 0 : props.pageProps) || {}).includes('url')) {\n    console.warn(`The prop \\`url\\` is a reserved prop in Next.js for legacy reasons and will be overridden on page ${pathname1}\\n` + `See more info here: https://nextjs.org/docs/messages/reserved-page-prop`);\n  } // Avoid rendering page un-necessarily for getServerSideProps data request\n  // and getServerSideProps/getStaticProps redirects\n\n\n  if (isDataReq && !isSSG || renderOpts.isRedirect) {\n    return _zenObservable.default.of(JSON.stringify(props));\n  } // We don't call getStaticProps or getServerSideProps while generating\n  // the fallback so make sure to set pageProps to an empty object\n\n\n  if (isFallback1) {\n    props.pageProps = {};\n  } // the response might be finished on the getInitialProps call\n\n\n  if ((0, _utils).isResSent(res) && !isSSG) return null; // we preload the buildManifest for auto-export dynamic pages\n  // to speed up hydrating query values\n\n  let filteredBuildManifest = buildManifest;\n\n  if (isAutoExport && pageIsDynamic) {\n    const page = (0, _denormalizePagePath).denormalizePagePath((0, _normalizePagePath).normalizePagePath(pathname1)); // This code would be much cleaner using `immer` and directly pushing into\n    // the result from `getPageFiles`, we could maybe consider that in the\n    // future.\n\n    if (page in filteredBuildManifest.pages) {\n      filteredBuildManifest = { ...filteredBuildManifest,\n        pages: { ...filteredBuildManifest.pages,\n          [page]: [...filteredBuildManifest.pages[page], ...filteredBuildManifest.lowPriorityFiles.filter(f => f.includes('_buildManifest'))]\n        },\n        lowPriorityFiles: filteredBuildManifest.lowPriorityFiles.filter(f => !f.includes('_buildManifest'))\n      };\n    }\n  }\n\n  const generateStaticHTML = requireStaticHTML || inAmpMode;\n\n  const renderToStream = element => new Promise((resolve, reject) => {\n    const stream = new _stream.PassThrough();\n    let resolved = false;\n\n    const doResolve = () => {\n      if (!resolved) {\n        resolved = true;\n        resolve(new _zenObservable.default(observer => {\n          stream.on('data', chunk => {\n            observer.next(chunk.toString('utf-8'));\n          });\n          stream.once('end', () => {\n            observer.complete();\n          });\n          startWriting();\n          return () => {\n            abort();\n          };\n        }));\n      }\n    };\n\n    const {\n      abort,\n      startWriting\n    } = ReactDOMServer.pipeToNodeWritable(element, stream, {\n      onError(error) {\n        if (!resolved) {\n          resolved = true;\n          reject(error);\n        }\n\n        abort();\n      },\n\n      onReadyToStream() {\n        if (!generateStaticHTML) {\n          doResolve();\n        }\n      },\n\n      onCompleteAll() {\n        doResolve();\n      }\n\n    });\n  }).then(multiplexResult);\n\n  const renderDocument = async () => {\n    if (Document1.getInitialProps) {\n      const renderPage = (options = {}) => {\n        if (ctx.err && ErrorDebug) {\n          const html = ReactDOMServer.renderToString( /*#__PURE__*/_react.default.createElement(ErrorDebug, {\n            error: ctx.err\n          }));\n          return {\n            html,\n            head\n          };\n        }\n\n        if (dev && (props.router || props.Component)) {\n          throw new Error(`'router' and 'Component' can not be returned in getInitialProps from _app.js https://nextjs.org/docs/messages/cant-override-next-props`);\n        }\n\n        const {\n          App: EnhancedApp,\n          Component: EnhancedComponent\n        } = enhanceComponents(options, App, Component);\n        const html = ReactDOMServer.renderToString( /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(EnhancedApp, Object.assign({\n          Component: EnhancedComponent,\n          router: router\n        }, props))));\n        return {\n          html,\n          head\n        };\n      };\n\n      const documentCtx = { ...ctx,\n        renderPage\n      };\n      const docProps = await (0, _utils).loadGetInitialProps(Document1, documentCtx); // the response might be finished on the getInitialProps call\n\n      if ((0, _utils).isResSent(res) && !isSSG) return null;\n\n      if (!docProps || typeof docProps.html !== 'string') {\n        const message = `\"${(0, _utils).getDisplayName(Document1)}.getInitialProps()\" should resolve to an object with a \"html\" prop set with a valid html string`;\n        throw new Error(message);\n      }\n\n      return {\n        bodyResult: _zenObservable.default.of(docProps.html),\n        documentElement: htmlProps => /*#__PURE__*/_react.default.createElement(Document1, Object.assign({}, htmlProps, docProps)),\n        head: docProps.head,\n        headTags: await headTags(documentCtx),\n        styles: docProps.styles\n      };\n    } else {\n      const content = ctx.err && ErrorDebug ? /*#__PURE__*/_react.default.createElement(ErrorDebug, {\n        error: ctx.err\n      }) : /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, Object.assign({}, props, {\n        Component: Component,\n        router: router\n      })));\n      const bodyResult = concurrentFeatures ? await renderToStream(content) : _zenObservable.default.of(ReactDOMServer.renderToString(content));\n      return {\n        bodyResult,\n        documentElement: () => Document1(),\n        head,\n        headTags: [],\n        // TODO: Experimental styled-jsx 5 support\n        styles: [...(0, _server).default()]\n      };\n    }\n  };\n\n  const documentResult = await renderDocument();\n\n  if (!documentResult) {\n    return null;\n  }\n\n  const dynamicImportsIds = new Set();\n  const dynamicImports = new Set();\n\n  for (const mod of reactLoadableModules) {\n    const manifestItem = reactLoadableManifest[mod];\n\n    if (manifestItem) {\n      dynamicImportsIds.add(manifestItem.id);\n      manifestItem.files.forEach(item => {\n        dynamicImports.add(item);\n      });\n    }\n  }\n\n  const hybridAmp = ampState.hybrid;\n  const docComponentsRendered = {};\n  const {\n    assetPrefix,\n    buildId,\n    customServer,\n    defaultLocale: defaultLocale1,\n    disableOptimizedLoading,\n    domainLocales: domainLocales1,\n    locale: locale1,\n    locales: locales1,\n    runtimeConfig\n  } = renderOpts;\n  const htmlProps = {\n    __NEXT_DATA__: {\n      props,\n      page: pathname1,\n      query: query1,\n      buildId,\n      assetPrefix: assetPrefix === '' ? undefined : assetPrefix,\n      runtimeConfig,\n      nextExport: nextExport === true ? true : undefined,\n      autoExport: isAutoExport === true ? true : undefined,\n      isFallback: isFallback1,\n      dynamicIds: dynamicImportsIds.size === 0 ? undefined : Array.from(dynamicImportsIds),\n      err: renderOpts.err ? serializeError(dev, renderOpts.err) : undefined,\n      gsp: !!getStaticProps ? true : undefined,\n      gssp: !!getServerSideProps ? true : undefined,\n      customServer,\n      gip: hasPageGetInitialProps ? true : undefined,\n      appGip: !defaultAppGetInitialProps ? true : undefined,\n      locale: locale1,\n      locales: locales1,\n      defaultLocale: defaultLocale1,\n      domainLocales: domainLocales1,\n      isPreview: isPreview1 === true ? true : undefined\n    },\n    buildManifest: filteredBuildManifest,\n    docComponentsRendered,\n    dangerousAsPath: router.asPath,\n    canonicalBase: !renderOpts.ampPath && req.__nextStrippedLocale ? `${renderOpts.canonicalBase || ''}/${renderOpts.locale}` : renderOpts.canonicalBase,\n    ampPath,\n    inAmpMode,\n    isDevelopment: !!dev,\n    hybridAmp,\n    dynamicImports: Array.from(dynamicImports),\n    assetPrefix,\n    // Only enabled in production as development mode has features relying on HMR (style injection for example)\n    unstable_runtimeJS: process.env.NODE_ENV === 'production' ? pageConfig.unstable_runtimeJS : undefined,\n    unstable_JsPreload: pageConfig.unstable_JsPreload,\n    devOnlyCacheBusterQueryString,\n    scriptLoader,\n    locale: locale1,\n    disableOptimizedLoading,\n    head: documentResult.head,\n    headTags: documentResult === null || documentResult === void 0 ? void 0 : documentResult.headTags,\n    styles: documentResult.styles\n  };\n  const documentHTML = ReactDOMServer.renderToStaticMarkup( /*#__PURE__*/_react.default.createElement(_ampContext.AmpStateContext.Provider, {\n    value: ampState\n  }, /*#__PURE__*/_react.default.createElement(_utils.HtmlContext.Provider, {\n    value: htmlProps\n  }, documentResult.documentElement(htmlProps))));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const nonRenderedComponents = [];\n    const expectedDocComponents = ['Main', 'Head', 'NextScript', 'Html'];\n\n    for (const comp of expectedDocComponents) {\n      if (!docComponentsRendered[comp]) {\n        nonRenderedComponents.push(comp);\n      }\n    }\n\n    const plural = nonRenderedComponents.length !== 1 ? 's' : '';\n\n    if (nonRenderedComponents.length) {\n      const missingComponentList = nonRenderedComponents.map(e => `<${e} />`).join(', ');\n      (0, _log).warn(`Your custom Document (pages/_document) did not render all the required subcomponent${plural}.\\n` + `Missing component${plural}: ${missingComponentList}\\n` + 'Read how to fix here: https://nextjs.org/docs/messages/missing-document-component');\n    }\n  }\n\n  let results = [];\n  const renderTargetIdx = documentHTML.indexOf(_constants1.BODY_RENDER_TARGET);\n  results.push(_zenObservable.default.of('<!DOCTYPE html>' + documentHTML.substring(0, renderTargetIdx)));\n\n  if (inAmpMode) {\n    results.push(_zenObservable.default.of('<!-- __NEXT_DATA__ -->'));\n  }\n\n  results.push(documentResult.bodyResult);\n  results.push(_zenObservable.default.of(documentHTML.substring(renderTargetIdx + _constants1.BODY_RENDER_TARGET.length)));\n  const postProcessors = (generateStaticHTML ? [inAmpMode ? async html => {\n    html = await (0, _optimizeAmp).default(html, renderOpts.ampOptimizerConfig);\n\n    if (!renderOpts.ampSkipValidation && renderOpts.ampValidator) {\n      await renderOpts.ampValidator(html, pathname1);\n    }\n\n    return html;\n  } : null, process.env.__NEXT_OPTIMIZE_FONTS || process.env.__NEXT_OPTIMIZE_IMAGES ? async html => {\n    return await (0, _postProcess).default(html, {\n      getFontDefinition\n    }, {\n      optimizeFonts: renderOpts.optimizeFonts,\n      optimizeImages: renderOpts.optimizeImages\n    });\n  } : null, renderOpts.optimizeCss ? async html => {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    const Critters = require('critters');\n\n    const cssOptimizer = new Critters({\n      ssrMode: true,\n      reduceInlineStyles: false,\n      path: renderOpts.distDir,\n      publicPath: `${renderOpts.assetPrefix}/_next/`,\n      preload: 'media',\n      fonts: false,\n      ...renderOpts.optimizeCss\n    });\n    return await cssOptimizer.process(html);\n  } : null, inAmpMode || hybridAmp ? async html => {\n    return html.replace(/&amp;amp=1/g, '&amp=1');\n  } : null] : []).filter(Boolean);\n\n  if (postProcessors.length > 0) {\n    let html = await (0, _utils1).resultsToString(results);\n\n    for (const postProcessor of postProcessors) {\n      if (postProcessor) {\n        html = await postProcessor(html);\n      }\n    }\n\n    results = [_zenObservable.default.of(html)];\n  }\n\n  return (0, _utils1).mergeResults(results);\n}\n\nfunction multiplexResult(result) {\n  const chunks = [];\n  const subscribers = new Set();\n  let terminator = null;\n  result.subscribe({\n    next(chunk) {\n      chunks.push(chunk);\n      subscribers.forEach(subscriber => subscriber.next(chunk));\n    },\n\n    error(error) {\n      if (!terminator) {\n        terminator = subscriber => subscriber.error(error);\n\n        subscribers.forEach(terminator);\n        subscribers.clear();\n      }\n    },\n\n    complete() {\n      if (!terminator) {\n        terminator = subscriber => subscriber.complete();\n\n        subscribers.forEach(terminator);\n        subscribers.clear();\n      }\n    }\n\n  });\n  return new _zenObservable.default(observer => {\n    for (const chunk of chunks) {\n      if (observer.closed) {\n        return;\n      }\n\n      observer.next(chunk);\n    }\n\n    if (terminator) {\n      terminator(observer);\n      return;\n    }\n\n    subscribers.add(observer);\n    return () => {\n      subscribers.delete(observer);\n    };\n  });\n}\n\nfunction errorToJSON(err) {\n  const {\n    name,\n    message,\n    stack\n  } = err;\n  return {\n    name,\n    message,\n    stack\n  };\n}\n\nfunction serializeError(dev, err) {\n  if (dev) {\n    return errorToJSON(err);\n  }\n\n  return {\n    name: 'Internal Server Error.',\n    message: '500 - Internal Server Error.',\n    statusCode: 500\n  };\n}","map":{"version":3,"sources":["../../server/render.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport { ParsedUrlQuery } from 'querystring'\nimport { PassThrough } from 'stream'\nimport React from 'react'\nimport * as ReactDOMServer from 'react-dom/server'\nimport flush from 'styled-jsx/server'\nimport Observable from 'next/dist/compiled/zen-observable'\nimport { warn } from '../build/output/log'\nimport { UnwrapPromise } from '../lib/coalesced-function'\nimport {\n  GSP_NO_RETURNED_VALUE,\n  GSSP_COMPONENT_MEMBER_ERROR,\n  GSSP_NO_RETURNED_VALUE,\n  STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR,\n  SERVER_PROPS_GET_INIT_PROPS_CONFLICT,\n  SERVER_PROPS_SSG_CONFLICT,\n  SSG_GET_INITIAL_PROPS_CONFLICT,\n  UNSTABLE_REVALIDATE_RENAME_ERROR,\n} from '../lib/constants'\nimport { isSerializableProps } from '../lib/is-serializable-props'\nimport { GetServerSideProps, GetStaticProps, PreviewData } from '../types'\nimport { isInAmpMode } from '../shared/lib/amp'\nimport { AmpStateContext } from '../shared/lib/amp-context'\nimport {\n  BODY_RENDER_TARGET,\n  SERVER_PROPS_ID,\n  STATIC_PROPS_ID,\n  STATIC_STATUS_PAGES,\n} from '../shared/lib/constants'\nimport { defaultHead } from '../shared/lib/head'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context'\nimport Loadable from '../shared/lib/loadable'\nimport { LoadableContext } from '../shared/lib/loadable-context'\nimport postProcess from '../shared/lib/post-process'\nimport { RouterContext } from '../shared/lib/router-context'\nimport { NextRouter } from '../shared/lib/router/router'\nimport { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'\nimport {\n  AppType,\n  ComponentsEnhancer,\n  DocumentInitialProps,\n  DocumentProps,\n  HtmlContext,\n  HtmlProps,\n  getDisplayName,\n  isResSent,\n  loadGetInitialProps,\n  NextComponentType,\n  RenderPage,\n  RenderPageResult,\n} from '../shared/lib/utils'\nimport {\n  tryGetPreviewData,\n  NextApiRequestCookies,\n  __ApiPreviewProps,\n} from './api-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport { FontManifest, getFontDefinitionFromManifest } from './font-utils'\nimport { LoadComponentsReturnType, ManifestItem } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport optimizeAmp from './optimize-amp'\nimport {\n  allowedStatusCodes,\n  getRedirectStatus,\n  Redirect,\n} from '../lib/load-custom-routes'\nimport { DomainLocale } from './config'\nimport { mergeResults, RenderResult, resultsToString } from './utils'\n\nfunction noRouter() {\n  const message =\n    'No router instance found. you should only use \"next/router\" inside the client side of your app. https://nextjs.org/docs/messages/no-router-instance'\n  throw new Error(message)\n}\n\nclass ServerRouter implements NextRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  events: any\n  isFallback: boolean\n  locale?: string\n  isReady: boolean\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  isPreview: boolean\n  isLocaleDomain: boolean\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    { isFallback }: { isFallback: boolean },\n    isReady: boolean,\n    basePath: string,\n    locale?: string,\n    locales?: string[],\n    defaultLocale?: string,\n    domainLocales?: DomainLocale[],\n    isPreview?: boolean,\n    isLocaleDomain?: boolean\n  ) {\n    this.route = pathname.replace(/\\/$/, '') || '/'\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    this.isFallback = isFallback\n    this.basePath = basePath\n    this.locale = locale\n    this.locales = locales\n    this.defaultLocale = defaultLocale\n    this.isReady = isReady\n    this.domainLocales = domainLocales\n    this.isPreview = !!isPreview\n    this.isLocaleDomain = !!isLocaleDomain\n  }\n\n  push(): any {\n    noRouter()\n  }\n  replace(): any {\n    noRouter()\n  }\n  reload() {\n    noRouter()\n  }\n  back() {\n    noRouter()\n  }\n  prefetch(): any {\n    noRouter()\n  }\n  beforePopState() {\n    noRouter()\n  }\n}\n\nfunction enhanceComponents(\n  options: ComponentsEnhancer,\n  App: AppType,\n  Component: NextComponentType\n): {\n  App: AppType\n  Component: NextComponentType\n} {\n  // For backwards compatibility\n  if (typeof options === 'function') {\n    return {\n      App,\n      Component: options(Component),\n    }\n  }\n\n  return {\n    App: options.enhanceApp ? options.enhanceApp(App) : App,\n    Component: options.enhanceComponent\n      ? options.enhanceComponent(Component)\n      : Component,\n  }\n}\n\nexport type RenderOptsPartial = {\n  buildId: string\n  canonicalBase: string\n  runtimeConfig?: { [key: string]: any }\n  assetPrefix?: string\n  err?: Error | null\n  nextExport?: boolean\n  dev?: boolean\n  ampPath?: string\n  ErrorDebug?: React.ComponentType<{ error: Error }>\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n  ampSkipValidation?: boolean\n  ampOptimizerConfig?: { [key: string]: any }\n  isDataReq?: boolean\n  params?: ParsedUrlQuery\n  previewProps: __ApiPreviewProps\n  basePath: string\n  unstable_runtimeJS?: false\n  unstable_JsPreload?: false\n  optimizeFonts: boolean\n  fontManifest?: FontManifest\n  optimizeImages: boolean\n  optimizeCss: any\n  devOnlyCacheBusterQueryString?: string\n  resolvedUrl?: string\n  resolvedAsPath?: string\n  distDir?: string\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  disableOptimizedLoading?: boolean\n  requireStaticHTML?: boolean\n  concurrentFeatures?: boolean\n  customServer?: boolean\n}\n\nexport type RenderOpts = LoadComponentsReturnType & RenderOptsPartial\n\nconst invalidKeysMsg = (methodName: string, invalidKeys: string[]) => {\n  return (\n    `Additional keys were returned from \\`${methodName}\\`. Properties intended for your component must be nested under the \\`props\\` key, e.g.:` +\n    `\\n\\n\\treturn { props: { title: 'My Title', content: '...' } }` +\n    `\\n\\nKeys that need to be moved: ${invalidKeys.join(', ')}.` +\n    `\\nRead more: https://nextjs.org/docs/messages/invalid-getstaticprops-value`\n  )\n}\n\nfunction checkRedirectValues(\n  redirect: Redirect,\n  req: IncomingMessage,\n  method: 'getStaticProps' | 'getServerSideProps'\n) {\n  const { destination, permanent, statusCode, basePath } = redirect\n  let errors: string[] = []\n\n  const hasStatusCode = typeof statusCode !== 'undefined'\n  const hasPermanent = typeof permanent !== 'undefined'\n\n  if (hasPermanent && hasStatusCode) {\n    errors.push(`\\`permanent\\` and \\`statusCode\\` can not both be provided`)\n  } else if (hasPermanent && typeof permanent !== 'boolean') {\n    errors.push(`\\`permanent\\` must be \\`true\\` or \\`false\\``)\n  } else if (hasStatusCode && !allowedStatusCodes.has(statusCode!)) {\n    errors.push(\n      `\\`statusCode\\` must undefined or one of ${[...allowedStatusCodes].join(\n        ', '\n      )}`\n    )\n  }\n  const destinationType = typeof destination\n\n  if (destinationType !== 'string') {\n    errors.push(\n      `\\`destination\\` should be string but received ${destinationType}`\n    )\n  }\n\n  const basePathType = typeof basePath\n\n  if (basePathType !== 'undefined' && basePathType !== 'boolean') {\n    errors.push(\n      `\\`basePath\\` should be undefined or a false, received ${basePathType}`\n    )\n  }\n\n  if (errors.length > 0) {\n    throw new Error(\n      `Invalid redirect object returned from ${method} for ${req.url}\\n` +\n        errors.join(' and ') +\n        '\\n' +\n        `See more info here: https://nextjs.org/docs/messages/invalid-redirect-gssp`\n    )\n  }\n}\n\nexport async function renderToHTML(\n  req: IncomingMessage,\n  res: ServerResponse,\n  pathname: string,\n  query: ParsedUrlQuery,\n  renderOpts: RenderOpts\n): Promise<RenderResult | null> {\n  // In dev we invalidate the cache by appending a timestamp to the resource URL.\n  // This is a workaround to fix https://github.com/vercel/next.js/issues/5860\n  // TODO: remove this workaround when https://bugs.webkit.org/show_bug.cgi?id=187726 is fixed.\n  renderOpts.devOnlyCacheBusterQueryString = renderOpts.dev\n    ? renderOpts.devOnlyCacheBusterQueryString || `?ts=${Date.now()}`\n    : ''\n\n  // don't modify original query object\n  query = Object.assign({}, query)\n\n  const {\n    err,\n    dev = false,\n    ampPath = '',\n    App,\n    Document,\n    pageConfig = {},\n    Component,\n    buildManifest,\n    fontManifest,\n    reactLoadableManifest,\n    ErrorDebug,\n    getStaticProps,\n    getStaticPaths,\n    getServerSideProps,\n    isDataReq,\n    params,\n    previewProps,\n    basePath,\n    devOnlyCacheBusterQueryString,\n    requireStaticHTML,\n    concurrentFeatures,\n  } = renderOpts\n\n  const getFontDefinition = (url: string): string => {\n    if (fontManifest) {\n      return getFontDefinitionFromManifest(url, fontManifest)\n    }\n    return ''\n  }\n\n  const callMiddleware = async (method: string, args: any[], props = false) => {\n    let results: any = props ? {} : []\n\n    if ((Document as any)[`${method}Middleware`]) {\n      let middlewareFunc = await (Document as any)[`${method}Middleware`]\n      middlewareFunc = middlewareFunc.default || middlewareFunc\n\n      const curResults = await middlewareFunc(...args)\n      if (props) {\n        for (const result of curResults) {\n          results = {\n            ...results,\n            ...result,\n          }\n        }\n      } else {\n        results = curResults\n      }\n    }\n    return results\n  }\n\n  const headTags = (...args: any) => callMiddleware('headTags', args)\n\n  const isFallback = !!query.__nextFallback\n  delete query.__nextFallback\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n\n  const isSSG = !!getStaticProps\n  const isBuildTimeSSG = isSSG && renderOpts.nextExport\n  const defaultAppGetInitialProps =\n    App.getInitialProps === (App as any).origGetInitialProps\n\n  const hasPageGetInitialProps = !!(Component as any).getInitialProps\n\n  const pageIsDynamic = isDynamicRoute(pathname)\n\n  const isAutoExport =\n    !hasPageGetInitialProps &&\n    defaultAppGetInitialProps &&\n    !isSSG &&\n    !getServerSideProps\n\n  for (const methodName of [\n    'getStaticProps',\n    'getServerSideProps',\n    'getStaticPaths',\n  ]) {\n    if ((Component as any)[methodName]) {\n      throw new Error(\n        `page ${pathname} ${methodName} ${GSSP_COMPONENT_MEMBER_ERROR}`\n      )\n    }\n  }\n\n  if (hasPageGetInitialProps && isSSG) {\n    throw new Error(SSG_GET_INITIAL_PROPS_CONFLICT + ` ${pathname}`)\n  }\n\n  if (hasPageGetInitialProps && getServerSideProps) {\n    throw new Error(SERVER_PROPS_GET_INIT_PROPS_CONFLICT + ` ${pathname}`)\n  }\n\n  if (getServerSideProps && isSSG) {\n    throw new Error(SERVER_PROPS_SSG_CONFLICT + ` ${pathname}`)\n  }\n\n  if (getStaticPaths && !pageIsDynamic) {\n    throw new Error(\n      `getStaticPaths is only allowed for dynamic SSG pages and was found on '${pathname}'.` +\n        `\\nRead more: https://nextjs.org/docs/messages/non-dynamic-getstaticpaths-usage`\n    )\n  }\n\n  if (!!getStaticPaths && !isSSG) {\n    throw new Error(\n      `getStaticPaths was added without a getStaticProps in ${pathname}. Without getStaticProps, getStaticPaths does nothing`\n    )\n  }\n\n  if (isSSG && pageIsDynamic && !getStaticPaths) {\n    throw new Error(\n      `getStaticPaths is required for dynamic SSG pages and is missing for '${pathname}'.` +\n        `\\nRead more: https://nextjs.org/docs/messages/invalid-getstaticpaths-value`\n    )\n  }\n\n  let asPath: string = renderOpts.resolvedAsPath || (req.url as string)\n\n  if (dev) {\n    const { isValidElementType } = require('react-is')\n    if (!isValidElementType(Component)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"${pathname}\"`\n      )\n    }\n\n    if (!isValidElementType(App)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"/_app\"`\n      )\n    }\n\n    if (!isValidElementType(Document)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"/_document\"`\n      )\n    }\n\n    if (isAutoExport || isFallback) {\n      // remove query values except ones that will be set during export\n      query = {\n        ...(query.amp\n          ? {\n              amp: query.amp,\n            }\n          : {}),\n      }\n      asPath = `${pathname}${\n        // ensure trailing slash is present for non-dynamic auto-export pages\n        req.url!.endsWith('/') && pathname !== '/' && !pageIsDynamic ? '/' : ''\n      }`\n      req.url = pathname\n    }\n\n    if (pathname === '/404' && (hasPageGetInitialProps || getServerSideProps)) {\n      throw new Error(\n        `\\`pages/404\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n      )\n    }\n    if (\n      STATIC_STATUS_PAGES.includes(pathname) &&\n      (hasPageGetInitialProps || getServerSideProps)\n    ) {\n      throw new Error(\n        `\\`pages${pathname}\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n      )\n    }\n  }\n\n  await Loadable.preloadAll() // Make sure all dynamic imports are loaded\n\n  let isPreview\n  let previewData: PreviewData\n\n  if ((isSSG || getServerSideProps) && !isFallback) {\n    // Reads of this are cached on the `req` object, so this should resolve\n    // instantly. There's no need to pass this data down from a previous\n    // invoke, where we'd have to consider server & serverless.\n    previewData = tryGetPreviewData(req, res, previewProps)\n    isPreview = previewData !== false\n  }\n\n  // url will always be set\n  const routerIsReady = !!(\n    getServerSideProps ||\n    hasPageGetInitialProps ||\n    (!defaultAppGetInitialProps && !isSSG)\n  )\n  const router = new ServerRouter(\n    pathname,\n    query,\n    asPath,\n    {\n      isFallback: isFallback,\n    },\n    routerIsReady,\n    basePath,\n    renderOpts.locale,\n    renderOpts.locales,\n    renderOpts.defaultLocale,\n    renderOpts.domainLocales,\n    isPreview,\n    (req as any).__nextIsLocaleDomain\n  )\n  const ctx = {\n    err,\n    req: isAutoExport ? undefined : req,\n    res: isAutoExport ? undefined : res,\n    pathname,\n    query,\n    asPath,\n    locale: renderOpts.locale,\n    locales: renderOpts.locales,\n    defaultLocale: renderOpts.defaultLocale,\n    AppTree: (props: any) => {\n      return (\n        <AppContainer>\n          <App {...props} Component={Component} router={router} />\n        </AppContainer>\n      )\n    },\n  }\n  let props: any\n\n  const ampState = {\n    ampFirst: pageConfig.amp === true,\n    hasQuery: Boolean(query.amp),\n    hybrid: pageConfig.amp === 'hybrid',\n  }\n\n  const inAmpMode = isInAmpMode(ampState)\n\n  const reactLoadableModules: string[] = []\n\n  let head: JSX.Element[] = defaultHead(inAmpMode)\n\n  let scriptLoader: any = {}\n  const nextExport =\n    !isSSG && (renderOpts.nextExport || (dev && (isAutoExport || isFallback)))\n\n  const AppContainer = ({ children }: { children: JSX.Element }) => (\n    <RouterContext.Provider value={router}>\n      <AmpStateContext.Provider value={ampState}>\n        <HeadManagerContext.Provider\n          value={{\n            updateHead: (state) => {\n              head = state\n            },\n            updateScripts: (scripts) => {\n              scriptLoader = scripts\n            },\n            scripts: {},\n            mountedInstances: new Set(),\n          }}\n        >\n          <LoadableContext.Provider\n            value={(moduleName) => reactLoadableModules.push(moduleName)}\n          >\n            {children}\n          </LoadableContext.Provider>\n        </HeadManagerContext.Provider>\n      </AmpStateContext.Provider>\n    </RouterContext.Provider>\n  )\n\n  try {\n    props = await loadGetInitialProps(App, {\n      AppTree: ctx.AppTree,\n      Component,\n      router,\n      ctx,\n    })\n\n    if ((isSSG || getServerSideProps) && isPreview) {\n      props.__N_PREVIEW = true\n    }\n\n    if (isSSG) {\n      props[STATIC_PROPS_ID] = true\n    }\n\n    if (isSSG && !isFallback) {\n      let data: UnwrapPromise<ReturnType<GetStaticProps>>\n\n      try {\n        data = await getStaticProps!({\n          ...(pageIsDynamic ? { params: query as ParsedUrlQuery } : undefined),\n          ...(isPreview\n            ? { preview: true, previewData: previewData }\n            : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale,\n        })\n      } catch (staticPropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (staticPropsError.code === 'ENOENT') {\n          delete staticPropsError.code\n        }\n        throw staticPropsError\n      }\n\n      if (data == null) {\n        throw new Error(GSP_NO_RETURNED_VALUE)\n      }\n\n      const invalidKeys = Object.keys(data).filter(\n        (key) =>\n          key !== 'revalidate' &&\n          key !== 'props' &&\n          key !== 'redirect' &&\n          key !== 'notFound'\n      )\n\n      if (invalidKeys.includes('unstable_revalidate')) {\n        throw new Error(UNSTABLE_REVALIDATE_RENAME_ERROR)\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getStaticProps', invalidKeys))\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          typeof (data as any).notFound !== 'undefined' &&\n          typeof (data as any).redirect !== 'undefined'\n        ) {\n          throw new Error(\n            `\\`redirect\\` and \\`notFound\\` can not both be returned from ${\n              isSSG ? 'getStaticProps' : 'getServerSideProps'\n            } at the same time. Page: ${pathname}\\nSee more info here: https://nextjs.org/docs/messages/gssp-mixed-not-found-redirect`\n          )\n        }\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(\n            `The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`\n          )\n        }\n\n        ;(renderOpts as any).isNotFound = true\n      }\n\n      if (\n        'redirect' in data &&\n        data.redirect &&\n        typeof data.redirect === 'object'\n      ) {\n        checkRedirectValues(data.redirect as Redirect, req, 'getStaticProps')\n\n        if (isBuildTimeSSG) {\n          throw new Error(\n            `\\`redirect\\` can not be returned from getStaticProps during prerendering (${req.url})\\n` +\n              `See more info here: https://nextjs.org/docs/messages/gsp-redirect-during-prerender`\n          )\n        }\n\n        ;(data as any).props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: getRedirectStatus(data.redirect),\n        }\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;(data as any).props.__N_REDIRECT_BASE_PATH = data.redirect.basePath\n        }\n        ;(renderOpts as any).isRedirect = true\n      }\n\n      if (\n        (dev || isBuildTimeSSG) &&\n        !(renderOpts as any).isNotFound &&\n        !isSerializableProps(pathname, 'getStaticProps', (data as any).props)\n      ) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error(\n          'invariant: getStaticProps did not return valid props. Please report this.'\n        )\n      }\n\n      if ('revalidate' in data) {\n        if (typeof data.revalidate === 'number') {\n          if (!Number.isInteger(data.revalidate)) {\n            throw new Error(\n              `A page's revalidate option must be seconds expressed as a natural number for ${req.url}. Mixed numbers, such as '${data.revalidate}', cannot be used.` +\n                `\\nTry changing the value to '${Math.ceil(\n                  data.revalidate\n                )}' or using \\`Math.ceil()\\` if you're computing the value.`\n            )\n          } else if (data.revalidate <= 0) {\n            throw new Error(\n              `A page's revalidate option can not be less than or equal to zero for ${req.url}. A revalidate option of zero means to revalidate after _every_ request, and implies stale data cannot be tolerated.` +\n                `\\n\\nTo never revalidate, you can set revalidate to \\`false\\` (only ran once at build-time).` +\n                `\\nTo revalidate as soon as possible, you can set the value to \\`1\\`.`\n            )\n          } else if (data.revalidate > 31536000) {\n            // if it's greater than a year for some reason error\n            console.warn(\n              `Warning: A page's revalidate option was set to more than a year for ${req.url}. This may have been done in error.` +\n                `\\nTo only run getStaticProps at build-time and not revalidate at runtime, you can set \\`revalidate\\` to \\`false\\`!`\n            )\n          }\n        } else if (data.revalidate === true) {\n          // When enabled, revalidate after 1 second. This value is optimal for\n          // the most up-to-date page possible, but without a 1-to-1\n          // request-refresh ratio.\n          data.revalidate = 1\n        } else if (\n          data.revalidate === false ||\n          typeof data.revalidate === 'undefined'\n        ) {\n          // By default, we never revalidate.\n          data.revalidate = false\n        } else {\n          throw new Error(\n            `A page's revalidate option must be seconds expressed as a natural number. Mixed numbers and strings cannot be used. Received '${JSON.stringify(\n              data.revalidate\n            )}' for ${req.url}`\n          )\n        }\n      } else {\n        // By default, we never revalidate.\n        ;(data as any).revalidate = false\n      }\n\n      props.pageProps = Object.assign(\n        {},\n        props.pageProps,\n        'props' in data ? data.props : undefined\n      )\n\n      // pass up revalidate and props for export\n      // TODO: change this to a different passing mechanism\n      ;(renderOpts as any).revalidate =\n        'revalidate' in data ? data.revalidate : undefined\n      ;(renderOpts as any).pageData = props\n\n      // this must come after revalidate is added to renderOpts\n      if ((renderOpts as any).isNotFound) {\n        return null\n      }\n    }\n\n    if (getServerSideProps) {\n      props[SERVER_PROPS_ID] = true\n    }\n\n    if (getServerSideProps && !isFallback) {\n      let data: UnwrapPromise<ReturnType<GetServerSideProps>>\n\n      try {\n        data = await getServerSideProps({\n          req: req as IncomingMessage & {\n            cookies: NextApiRequestCookies\n          },\n          res,\n          query,\n          resolvedUrl: renderOpts.resolvedUrl as string,\n          ...(pageIsDynamic ? { params: params as ParsedUrlQuery } : undefined),\n          ...(previewData !== false\n            ? { preview: true, previewData: previewData }\n            : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale,\n        })\n      } catch (serverSidePropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (serverSidePropsError.code === 'ENOENT') {\n          delete serverSidePropsError.code\n        }\n        throw serverSidePropsError\n      }\n\n      if (data == null) {\n        throw new Error(GSSP_NO_RETURNED_VALUE)\n      }\n\n      const invalidKeys = Object.keys(data).filter(\n        (key) => key !== 'props' && key !== 'redirect' && key !== 'notFound'\n      )\n\n      if ((data as any).unstable_notFound) {\n        throw new Error(\n          `unstable_notFound has been renamed to notFound, please update the field to continue. Page: ${pathname}`\n        )\n      }\n      if ((data as any).unstable_redirect) {\n        throw new Error(\n          `unstable_redirect has been renamed to redirect, please update the field to continue. Page: ${pathname}`\n        )\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getServerSideProps', invalidKeys))\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(\n            `The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`\n          )\n        }\n\n        ;(renderOpts as any).isNotFound = true\n        return null\n      }\n\n      if ('redirect' in data && typeof data.redirect === 'object') {\n        checkRedirectValues(\n          data.redirect as Redirect,\n          req,\n          'getServerSideProps'\n        )\n        ;(data as any).props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: getRedirectStatus(data.redirect),\n        }\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;(data as any).props.__N_REDIRECT_BASE_PATH = data.redirect.basePath\n        }\n        ;(renderOpts as any).isRedirect = true\n      }\n\n      if ((data as any).props instanceof Promise) {\n        ;(data as any).props = await (data as any).props\n      }\n\n      if (\n        (dev || isBuildTimeSSG) &&\n        !isSerializableProps(\n          pathname,\n          'getServerSideProps',\n          (data as any).props\n        )\n      ) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error(\n          'invariant: getServerSideProps did not return valid props. Please report this.'\n        )\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, (data as any).props)\n      ;(renderOpts as any).pageData = props\n    }\n  } catch (dataFetchError) {\n    throw dataFetchError\n  }\n\n  if (\n    !isSSG && // we only show this warning for legacy pages\n    !getServerSideProps &&\n    process.env.NODE_ENV !== 'production' &&\n    Object.keys(props?.pageProps || {}).includes('url')\n  ) {\n    console.warn(\n      `The prop \\`url\\` is a reserved prop in Next.js for legacy reasons and will be overridden on page ${pathname}\\n` +\n        `See more info here: https://nextjs.org/docs/messages/reserved-page-prop`\n    )\n  }\n\n  // Avoid rendering page un-necessarily for getServerSideProps data request\n  // and getServerSideProps/getStaticProps redirects\n  if ((isDataReq && !isSSG) || (renderOpts as any).isRedirect) {\n    return Observable.of(JSON.stringify(props))\n  }\n\n  // We don't call getStaticProps or getServerSideProps while generating\n  // the fallback so make sure to set pageProps to an empty object\n  if (isFallback) {\n    props.pageProps = {}\n  }\n\n  // the response might be finished on the getInitialProps call\n  if (isResSent(res) && !isSSG) return null\n\n  // we preload the buildManifest for auto-export dynamic pages\n  // to speed up hydrating query values\n  let filteredBuildManifest = buildManifest\n  if (isAutoExport && pageIsDynamic) {\n    const page = denormalizePagePath(normalizePagePath(pathname))\n    // This code would be much cleaner using `immer` and directly pushing into\n    // the result from `getPageFiles`, we could maybe consider that in the\n    // future.\n    if (page in filteredBuildManifest.pages) {\n      filteredBuildManifest = {\n        ...filteredBuildManifest,\n        pages: {\n          ...filteredBuildManifest.pages,\n          [page]: [\n            ...filteredBuildManifest.pages[page],\n            ...filteredBuildManifest.lowPriorityFiles.filter((f) =>\n              f.includes('_buildManifest')\n            ),\n          ],\n        },\n        lowPriorityFiles: filteredBuildManifest.lowPriorityFiles.filter(\n          (f) => !f.includes('_buildManifest')\n        ),\n      }\n    }\n  }\n\n  const generateStaticHTML = requireStaticHTML || inAmpMode\n  const renderToStream = (element: React.ReactElement) =>\n    new Promise<RenderResult>((resolve, reject) => {\n      const stream = new PassThrough()\n      let resolved = false\n      const doResolve = () => {\n        if (!resolved) {\n          resolved = true\n\n          resolve(\n            new Observable((observer) => {\n              stream.on('data', (chunk) => {\n                observer.next(chunk.toString('utf-8'))\n              })\n              stream.once('end', () => {\n                observer.complete()\n              })\n\n              startWriting()\n              return () => {\n                abort()\n              }\n            })\n          )\n        }\n      }\n\n      const { abort, startWriting } = (\n        ReactDOMServer as any\n      ).pipeToNodeWritable(element, stream, {\n        onError(error: Error) {\n          if (!resolved) {\n            resolved = true\n            reject(error)\n          }\n          abort()\n        },\n        onReadyToStream() {\n          if (!generateStaticHTML) {\n            doResolve()\n          }\n        },\n        onCompleteAll() {\n          doResolve()\n        },\n      })\n    }).then(multiplexResult)\n\n  const renderDocument = async () => {\n    if (Document.getInitialProps) {\n      const renderPage: RenderPage = (\n        options: ComponentsEnhancer = {}\n      ): RenderPageResult | Promise<RenderPageResult> => {\n        if (ctx.err && ErrorDebug) {\n          const html = ReactDOMServer.renderToString(\n            <ErrorDebug error={ctx.err} />\n          )\n          return { html, head }\n        }\n\n        if (dev && (props.router || props.Component)) {\n          throw new Error(\n            `'router' and 'Component' can not be returned in getInitialProps from _app.js https://nextjs.org/docs/messages/cant-override-next-props`\n          )\n        }\n\n        const { App: EnhancedApp, Component: EnhancedComponent } =\n          enhanceComponents(options, App, Component)\n\n        const html = ReactDOMServer.renderToString(\n          <AppContainer>\n            <EnhancedApp\n              Component={EnhancedComponent}\n              router={router}\n              {...props}\n            />\n          </AppContainer>\n        )\n        return { html, head }\n      }\n      const documentCtx = { ...ctx, renderPage }\n      const docProps: DocumentInitialProps = await loadGetInitialProps(\n        Document,\n        documentCtx\n      )\n      // the response might be finished on the getInitialProps call\n      if (isResSent(res) && !isSSG) return null\n\n      if (!docProps || typeof docProps.html !== 'string') {\n        const message = `\"${getDisplayName(\n          Document\n        )}.getInitialProps()\" should resolve to an object with a \"html\" prop set with a valid html string`\n        throw new Error(message)\n      }\n\n      return {\n        bodyResult: Observable.of(docProps.html),\n        documentElement: (htmlProps: HtmlProps) => (\n          <Document {...htmlProps} {...docProps} />\n        ),\n        head: docProps.head,\n        headTags: await headTags(documentCtx),\n        styles: docProps.styles,\n      }\n    } else {\n      const content =\n        ctx.err && ErrorDebug ? (\n          <ErrorDebug error={ctx.err} />\n        ) : (\n          <AppContainer>\n            <App {...props} Component={Component} router={router} />\n          </AppContainer>\n        )\n      const bodyResult = concurrentFeatures\n        ? await renderToStream(content)\n        : Observable.of(ReactDOMServer.renderToString(content))\n\n      return {\n        bodyResult,\n        documentElement: () => (Document as any)(),\n        head,\n        headTags: [],\n        // TODO: Experimental styled-jsx 5 support\n        styles: [...flush()],\n      }\n    }\n  }\n\n  const documentResult = await renderDocument()\n  if (!documentResult) {\n    return null\n  }\n\n  const dynamicImportsIds = new Set<string | number>()\n  const dynamicImports = new Set<string>()\n\n  for (const mod of reactLoadableModules) {\n    const manifestItem: ManifestItem = reactLoadableManifest[mod]\n\n    if (manifestItem) {\n      dynamicImportsIds.add(manifestItem.id)\n      manifestItem.files.forEach((item) => {\n        dynamicImports.add(item)\n      })\n    }\n  }\n\n  const hybridAmp = ampState.hybrid\n\n  const docComponentsRendered: DocumentProps['docComponentsRendered'] = {}\n  const {\n    assetPrefix,\n    buildId,\n    customServer,\n    defaultLocale,\n    disableOptimizedLoading,\n    domainLocales,\n    locale,\n    locales,\n    runtimeConfig,\n  } = renderOpts\n  const htmlProps: any = {\n    __NEXT_DATA__: {\n      props, // The result of getInitialProps\n      page: pathname, // The rendered page\n      query, // querystring parsed / passed by the user\n      buildId, // buildId is used to facilitate caching of page bundles, we send it to the client so that pageloader knows where to load bundles\n      assetPrefix: assetPrefix === '' ? undefined : assetPrefix, // send assetPrefix to the client side when configured, otherwise don't sent in the resulting HTML\n      runtimeConfig, // runtimeConfig if provided, otherwise don't sent in the resulting HTML\n      nextExport: nextExport === true ? true : undefined, // If this is a page exported by `next export`\n      autoExport: isAutoExport === true ? true : undefined, // If this is an auto exported page\n      isFallback,\n      dynamicIds:\n        dynamicImportsIds.size === 0\n          ? undefined\n          : Array.from(dynamicImportsIds),\n      err: renderOpts.err ? serializeError(dev, renderOpts.err) : undefined, // Error if one happened, otherwise don't sent in the resulting HTML\n      gsp: !!getStaticProps ? true : undefined, // whether the page is getStaticProps\n      gssp: !!getServerSideProps ? true : undefined, // whether the page is getServerSideProps\n      customServer, // whether the user is using a custom server\n      gip: hasPageGetInitialProps ? true : undefined, // whether the page has getInitialProps\n      appGip: !defaultAppGetInitialProps ? true : undefined, // whether the _app has getInitialProps\n      locale,\n      locales,\n      defaultLocale,\n      domainLocales,\n      isPreview: isPreview === true ? true : undefined,\n    },\n    buildManifest: filteredBuildManifest,\n    docComponentsRendered,\n    dangerousAsPath: router.asPath,\n    canonicalBase:\n      !renderOpts.ampPath && (req as any).__nextStrippedLocale\n        ? `${renderOpts.canonicalBase || ''}/${renderOpts.locale}`\n        : renderOpts.canonicalBase,\n    ampPath,\n    inAmpMode,\n    isDevelopment: !!dev,\n    hybridAmp,\n    dynamicImports: Array.from(dynamicImports),\n    assetPrefix,\n    // Only enabled in production as development mode has features relying on HMR (style injection for example)\n    unstable_runtimeJS:\n      process.env.NODE_ENV === 'production'\n        ? pageConfig.unstable_runtimeJS\n        : undefined,\n    unstable_JsPreload: pageConfig.unstable_JsPreload,\n    devOnlyCacheBusterQueryString,\n    scriptLoader,\n    locale,\n    disableOptimizedLoading,\n    head: documentResult.head,\n    headTags: documentResult?.headTags,\n    styles: documentResult.styles,\n  }\n  const documentHTML = ReactDOMServer.renderToStaticMarkup(\n    <AmpStateContext.Provider value={ampState}>\n      <HtmlContext.Provider value={htmlProps}>\n        {documentResult.documentElement(htmlProps)}\n      </HtmlContext.Provider>\n    </AmpStateContext.Provider>\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    const nonRenderedComponents = []\n    const expectedDocComponents = ['Main', 'Head', 'NextScript', 'Html']\n\n    for (const comp of expectedDocComponents) {\n      if (!(docComponentsRendered as any)[comp]) {\n        nonRenderedComponents.push(comp)\n      }\n    }\n    const plural = nonRenderedComponents.length !== 1 ? 's' : ''\n\n    if (nonRenderedComponents.length) {\n      const missingComponentList = nonRenderedComponents\n        .map((e) => `<${e} />`)\n        .join(', ')\n      warn(\n        `Your custom Document (pages/_document) did not render all the required subcomponent${plural}.\\n` +\n          `Missing component${plural}: ${missingComponentList}\\n` +\n          'Read how to fix here: https://nextjs.org/docs/messages/missing-document-component'\n      )\n    }\n  }\n\n  let results: Array<RenderResult> = []\n  const renderTargetIdx = documentHTML.indexOf(BODY_RENDER_TARGET)\n  results.push(\n    Observable.of(\n      '<!DOCTYPE html>' + documentHTML.substring(0, renderTargetIdx)\n    )\n  )\n  if (inAmpMode) {\n    results.push(Observable.of('<!-- __NEXT_DATA__ -->'))\n  }\n  results.push(documentResult.bodyResult)\n  results.push(\n    Observable.of(\n      documentHTML.substring(renderTargetIdx + BODY_RENDER_TARGET.length)\n    )\n  )\n\n  const postProcessors: Array<((html: string) => Promise<string>) | null> = (\n    generateStaticHTML\n      ? [\n          inAmpMode\n            ? async (html: string) => {\n                html = await optimizeAmp(html, renderOpts.ampOptimizerConfig)\n                if (!renderOpts.ampSkipValidation && renderOpts.ampValidator) {\n                  await renderOpts.ampValidator(html, pathname)\n                }\n                return html\n              }\n            : null,\n          process.env.__NEXT_OPTIMIZE_FONTS ||\n          process.env.__NEXT_OPTIMIZE_IMAGES\n            ? async (html: string) => {\n                return await postProcess(\n                  html,\n                  { getFontDefinition },\n                  {\n                    optimizeFonts: renderOpts.optimizeFonts,\n                    optimizeImages: renderOpts.optimizeImages,\n                  }\n                )\n              }\n            : null,\n          renderOpts.optimizeCss\n            ? async (html: string) => {\n                // eslint-disable-next-line import/no-extraneous-dependencies\n                const Critters = require('critters')\n                const cssOptimizer = new Critters({\n                  ssrMode: true,\n                  reduceInlineStyles: false,\n                  path: renderOpts.distDir,\n                  publicPath: `${renderOpts.assetPrefix}/_next/`,\n                  preload: 'media',\n                  fonts: false,\n                  ...renderOpts.optimizeCss,\n                })\n                return await cssOptimizer.process(html)\n              }\n            : null,\n          inAmpMode || hybridAmp\n            ? async (html: string) => {\n                return html.replace(/&amp;amp=1/g, '&amp=1')\n              }\n            : null,\n        ]\n      : []\n  ).filter(Boolean)\n\n  if (postProcessors.length > 0) {\n    let html = await resultsToString(results)\n    for (const postProcessor of postProcessors) {\n      if (postProcessor) {\n        html = await postProcessor(html)\n      }\n    }\n    results = [Observable.of(html)]\n  }\n\n  return mergeResults(results)\n}\n\nfunction multiplexResult(result: RenderResult): RenderResult {\n  const chunks: Array<string> = []\n  const subscribers: Set<ZenObservable.SubscriptionObserver<string>> = new Set()\n  let terminator:\n    | ((subscriber: ZenObservable.SubscriptionObserver<string>) => void)\n    | null = null\n\n  result.subscribe({\n    next(chunk) {\n      chunks.push(chunk)\n      subscribers.forEach((subscriber) => subscriber.next(chunk))\n    },\n    error(error) {\n      if (!terminator) {\n        terminator = (subscriber) => subscriber.error(error)\n        subscribers.forEach(terminator)\n        subscribers.clear()\n      }\n    },\n    complete() {\n      if (!terminator) {\n        terminator = (subscriber) => subscriber.complete()\n        subscribers.forEach(terminator)\n        subscribers.clear()\n      }\n    },\n  })\n\n  return new Observable((observer) => {\n    for (const chunk of chunks) {\n      if (observer.closed) {\n        return\n      }\n      observer.next(chunk)\n    }\n\n    if (terminator) {\n      terminator(observer)\n      return\n    }\n\n    subscribers.add(observer)\n    return () => {\n      subscribers.delete(observer)\n    }\n  })\n}\n\nfunction errorToJSON(err: Error): Error {\n  const { name, message, stack } = err\n  return { name, message, stack }\n}\n\nfunction serializeError(\n  dev: boolean | undefined,\n  err: Error\n): Error & { statusCode?: number } {\n  if (dev) {\n    return errorToJSON(err)\n  }\n\n  return {\n    name: 'Internal Server Error.',\n    message: '500 - Internal Server Error.',\n    statusCode: 500,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}