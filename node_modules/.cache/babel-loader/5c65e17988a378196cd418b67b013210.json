{"ast":null,"code":"\"use strict\";\n\nlet mappingsWasm = null;\n\nmodule.exports = function readWasm() {\n  if (typeof mappingsWasm === \"string\") {\n    return fetch(mappingsWasm).then(response => response.arrayBuffer());\n  }\n\n  if (mappingsWasm instanceof ArrayBuffer) {\n    return Promise.resolve(mappingsWasm);\n  }\n\n  throw new Error(\"You must provide the string URL or ArrayBuffer contents \" + \"of lib/mappings.wasm by calling \" + \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" + \"before using SourceMapConsumer\");\n};\n\nmodule.exports.initialize = input => {\n  mappingsWasm = input;\n};","map":{"version":3,"sources":["C:/xampp/public_html/vamo/interface2/node_modules/@next/react-dev-overlay/node_modules/source-map/lib/read-wasm-browser.js"],"names":["mappingsWasm","module","exports","readWasm","fetch","then","response","arrayBuffer","ArrayBuffer","Promise","resolve","Error","initialize","input"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAG,IAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,GAAoB;AACnC,MAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;AACpC,WAAOI,KAAK,CAACJ,YAAD,CAAL,CACJK,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,EADb,CAAP;AAED;;AACD,MAAIP,YAAY,YAAYQ,WAA5B,EAAyC;AACvC,WAAOC,OAAO,CAACC,OAAR,CAAgBV,YAAhB,CAAP;AACD;;AAED,QAAM,IAAIW,KAAJ,CAAU,6DACA,kCADA,GAEA,6DAFA,GAGA,gCAHV,CAAN;AAID,CAbD;;AAeAV,MAAM,CAACC,OAAP,CAAeU,UAAf,GAA4BC,KAAK,IAAI;AACnCb,EAAAA,YAAY,GAAGa,KAAf;AACD,CAFD","sourcesContent":["\"use strict\";\n\nlet mappingsWasm = null;\n\nmodule.exports = function readWasm() {\n  if (typeof mappingsWasm === \"string\") {\n    return fetch(mappingsWasm)\n      .then(response => response.arrayBuffer());\n  }\n  if (mappingsWasm instanceof ArrayBuffer) {\n    return Promise.resolve(mappingsWasm);\n  }\n\n  throw new Error(\"You must provide the string URL or ArrayBuffer contents \" +\n                  \"of lib/mappings.wasm by calling \" +\n                  \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                  \"before using SourceMapConsumer\");\n};\n\nmodule.exports.initialize = input => {\n  mappingsWasm = input;\n};\n"]},"metadata":{},"sourceType":"script"}