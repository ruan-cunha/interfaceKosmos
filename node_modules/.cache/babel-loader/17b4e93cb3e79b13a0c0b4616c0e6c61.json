{"ast":null,"code":"module.exports =\n/******/\nfunction () {\n  // webpackBootstrap\n\n  /******/\n  \"use strict\";\n  /******/\n\n  var __webpack_modules__ = {\n    /***/\n    149: function (module, exports, __nccwpck_require__) {\n      /* module decorator */\n      module = __nccwpck_require__.nmd(module);\n\n      const {\n        minify: terserMinify\n      } = __nccwpck_require__(775);\n      /** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n      /** @typedef {import(\"./index.js\").ExtractCommentsOptions} ExtractCommentsOptions */\n\n      /** @typedef {import(\"./index.js\").CustomMinifyFunction} CustomMinifyFunction */\n\n      /** @typedef {import(\"terser\").MinifyOptions} TerserMinifyOptions */\n\n      /** @typedef {import(\"terser\").MinifyOutput} MinifyOutput */\n\n      /** @typedef {import(\"terser\").FormatOptions} FormatOptions */\n\n      /** @typedef {import(\"terser\").MangleOptions} MangleOptions */\n\n      /** @typedef {import(\"./index.js\").ExtractCommentsFunction} ExtractCommentsFunction */\n\n      /** @typedef {import(\"./index.js\").ExtractCommentsCondition} ExtractCommentsCondition */\n\n      /**\n       * @typedef {Object.<any, any>} CustomMinifyOptions\n       */\n\n      /**\n       * @typedef {Object} InternalMinifyOptions\n       * @property {string} name\n       * @property {string} input\n       * @property {RawSourceMap} [inputSourceMap]\n       * @property {ExtractCommentsOptions} extractComments\n       * @property {CustomMinifyFunction} [minify]\n       * @property {TerserMinifyOptions | CustomMinifyOptions} minifyOptions\n       */\n\n      /**\n       * @typedef {Array<string>} ExtractedComments\n       */\n\n      /**\n       * @typedef {Promise<MinifyOutput & { extractedComments?: ExtractedComments}>} InternalMinifyResult\n       */\n\n      /**\n       * @typedef {TerserMinifyOptions & { sourceMap: undefined } & ({ output: FormatOptions & { beautify: boolean } } | { format: FormatOptions & { beautify: boolean } })} NormalizedTerserMinifyOptions\n       */\n\n      /**\n       * @param {TerserMinifyOptions} [terserOptions={}]\n       * @returns {NormalizedTerserMinifyOptions}\n       */\n\n\n      function buildTerserOptions(terserOptions = {}) {\n        // Need deep copy objects to avoid https://github.com/terser/terser/issues/366\n        return { ...terserOptions,\n          compress: typeof terserOptions.compress === \"boolean\" ? terserOptions.compress : { ...terserOptions.compress\n          },\n          // ecma: terserOptions.ecma,\n          // ie8: terserOptions.ie8,\n          // keep_classnames: terserOptions.keep_classnames,\n          // keep_fnames: terserOptions.keep_fnames,\n          mangle: terserOptions.mangle == null ? true : typeof terserOptions.mangle === \"boolean\" ? terserOptions.mangle : { ...terserOptions.mangle\n          },\n          // module: terserOptions.module,\n          // nameCache: { ...terserOptions.toplevel },\n          // the `output` option is deprecated\n          ...(terserOptions.format ? {\n            format: {\n              beautify: false,\n              ...terserOptions.format\n            }\n          } : {\n            output: {\n              beautify: false,\n              ...terserOptions.output\n            }\n          }),\n          parse: { ...terserOptions.parse\n          },\n          // safari10: terserOptions.safari10,\n          // Ignoring sourceMap from options\n          // eslint-disable-next-line no-undefined\n          sourceMap: undefined // toplevel: terserOptions.toplevel\n\n        };\n      }\n      /**\n       * @param {any} value\n       * @returns {boolean}\n       */\n\n\n      function isObject(value) {\n        const type = typeof value;\n        return value != null && (type === \"object\" || type === \"function\");\n      }\n      /**\n       * @param {ExtractCommentsOptions} extractComments\n       * @param {NormalizedTerserMinifyOptions} terserOptions\n       * @param {ExtractedComments} extractedComments\n       * @returns {ExtractCommentsFunction}\n       */\n\n\n      function buildComments(extractComments, terserOptions, extractedComments) {\n        /** @type {{ [index: string]: ExtractCommentsCondition }} */\n        const condition = {};\n        let comments;\n\n        if (terserOptions.format) {\n          ({\n            comments\n          } = terserOptions.format);\n        } else if (terserOptions.output) {\n          ({\n            comments\n          } = terserOptions.output);\n        }\n\n        condition.preserve = typeof comments !== \"undefined\" ? comments : false;\n\n        if (typeof extractComments === \"boolean\" && extractComments) {\n          condition.extract = \"some\";\n        } else if (typeof extractComments === \"string\" || extractComments instanceof RegExp) {\n          condition.extract = extractComments;\n        } else if (typeof extractComments === \"function\") {\n          condition.extract = extractComments;\n        } else if (extractComments && isObject(extractComments)) {\n          condition.extract = typeof extractComments.condition === \"boolean\" && extractComments.condition ? \"some\" : typeof extractComments.condition !== \"undefined\" ? extractComments.condition : \"some\";\n        } else {\n          // No extract\n          // Preserve using \"commentsOpts\" or \"some\"\n          condition.preserve = typeof comments !== \"undefined\" ? comments : \"some\";\n          condition.extract = false;\n        } // Ensure that both conditions are functions\n\n\n        [\"preserve\", \"extract\"].forEach(key => {\n          /** @type {undefined | string} */\n          let regexStr;\n          /** @type {undefined | RegExp} */\n\n          let regex;\n\n          switch (typeof condition[key]) {\n            case \"boolean\":\n              condition[key] = condition[key] ? () => true : () => false;\n              break;\n\n            case \"function\":\n              break;\n\n            case \"string\":\n              if (condition[key] === \"all\") {\n                condition[key] = () => true;\n\n                break;\n              }\n\n              if (condition[key] === \"some\") {\n                condition[key] =\n                /** @type {ExtractCommentsFunction} */\n                (astNode, comment) => (comment.type === \"comment2\" || comment.type === \"comment1\") && /@preserve|@lic|@cc_on|^\\**!/i.test(comment.value);\n\n                break;\n              }\n\n              regexStr =\n              /** @type {string} */\n              condition[key];\n\n              condition[key] =\n              /** @type {ExtractCommentsFunction} */\n              (astNode, comment) => new RegExp(\n              /** @type {string} */\n              regexStr).test(comment.value);\n\n              break;\n\n            default:\n              regex =\n              /** @type {RegExp} */\n              condition[key];\n\n              condition[key] =\n              /** @type {ExtractCommentsFunction} */\n              (astNode, comment) =>\n              /** @type {RegExp} */\n              regex.test(comment.value);\n\n          }\n        }); // Redefine the comments function to extract and preserve\n        // comments according to the two conditions\n\n        return (astNode, comment) => {\n          if (\n          /** @type {{ extract: ExtractCommentsFunction }} */\n          condition.extract(astNode, comment)) {\n            const commentText = comment.type === \"comment2\" ? `/*${comment.value}*/` : `//${comment.value}`; // Don't include duplicate comments\n\n            if (!extractedComments.includes(commentText)) {\n              extractedComments.push(commentText);\n            }\n          }\n\n          return (\n            /** @type {{ preserve: ExtractCommentsFunction }} */\n            condition.preserve(astNode, comment)\n          );\n        };\n      }\n      /**\n       * @param {InternalMinifyOptions} options\n       * @returns {InternalMinifyResult}\n       */\n\n\n      async function minify(options) {\n        const {\n          name,\n          input,\n          inputSourceMap,\n          minify: minifyFn,\n          minifyOptions\n        } = options;\n\n        if (minifyFn) {\n          return minifyFn({\n            [name]: input\n          }, inputSourceMap, minifyOptions);\n        } // Copy terser options\n\n\n        const terserOptions = buildTerserOptions(minifyOptions); // Let terser generate a SourceMap\n\n        if (inputSourceMap) {\n          // @ts-ignore\n          terserOptions.sourceMap = {\n            asObject: true\n          };\n        }\n        /** @type {ExtractedComments} */\n\n\n        const extractedComments = [];\n        const {\n          extractComments\n        } = options;\n\n        if (terserOptions.output) {\n          terserOptions.output.comments = buildComments(extractComments, terserOptions, extractedComments);\n        } else if (terserOptions.format) {\n          terserOptions.format.comments = buildComments(extractComments, terserOptions, extractedComments);\n        }\n\n        const result = await terserMinify({\n          [name]: input\n        }, terserOptions);\n        return { ...result,\n          extractedComments\n        };\n      }\n      /**\n       * @param {string} options\n       * @returns {InternalMinifyResult}\n       */\n\n\n      function transform(options) {\n        // 'use strict' => this === undefined (Clean Scope)\n        // Safer for possible security issues, albeit not critical at all here\n        // eslint-disable-next-line no-param-reassign\n        const evaluatedOptions =\n        /** @type {InternalMinifyOptions} */\n        // eslint-disable-next-line no-new-func\n        new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n        return minify(evaluatedOptions);\n      }\n\n      module.exports.minify = minify;\n      module.exports.transform = transform;\n      /***/\n    },\n\n    /***/\n    775: function (module) {\n      module.exports = require(\"next/dist/compiled/terser\");\n      ;\n      /***/\n    }\n    /******/\n\n  };\n  /************************************************************************/\n\n  /******/\n  // The module cache\n\n  /******/\n\n  var __webpack_module_cache__ = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __nccwpck_require__(moduleId) {\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (__webpack_module_cache__[moduleId]) {\n      /******/\n      return __webpack_module_cache__[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = __webpack_module_cache__[moduleId] = {\n      /******/\n      id: moduleId,\n\n      /******/\n      loaded: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    var threw = true;\n    /******/\n\n    try {\n      /******/\n      __webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);\n      /******/\n\n\n      threw = false;\n      /******/\n    } finally {\n      /******/\n      if (threw) delete __webpack_module_cache__[moduleId];\n      /******/\n    }\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n\n    module.loaded = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /************************************************************************/\n\n  /******/\n\n  /* webpack/runtime/node module decorator */\n\n  /******/\n\n\n  !function () {\n    /******/\n    __nccwpck_require__.nmd = function (module) {\n      /******/\n      module.paths = [];\n      /******/\n\n      if (!module.children) module.children = [];\n      /******/\n\n      return module;\n      /******/\n    };\n    /******/\n\n  }();\n  /******/\n\n  /******/\n\n  /* webpack/runtime/compat */\n\n  /******/\n\n  /******/\n\n  __nccwpck_require__.ab = __dirname + \"/\";\n  /************************************************************************/\n\n  /******/\n  // module exports must be returned from runtime so entry inlining is disabled\n\n  /******/\n  // startup\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __nccwpck_require__(149);\n  /******/\n}();","map":{"version":3,"sources":["C:/xampp/public_html/vamo/interface2/node_modules/next/dist/compiled/webpack/minify.js"],"names":["module","exports","__webpack_modules__","__nccwpck_require__","nmd","minify","terserMinify","buildTerserOptions","terserOptions","compress","mangle","format","beautify","output","parse","sourceMap","undefined","isObject","value","type","buildComments","extractComments","extractedComments","condition","comments","preserve","extract","RegExp","forEach","key","regexStr","regex","astNode","comment","test","commentText","includes","push","options","name","input","inputSourceMap","minifyFn","minifyOptions","asObject","result","transform","evaluatedOptions","Function","require","__filename","__dirname","__webpack_module_cache__","moduleId","id","loaded","threw","paths","children","ab"],"mappings":"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","sourcesContent":["module.exports =\n/******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 149:\n/***/ (function(module, exports, __nccwpck_require__) {\n\n/* module decorator */ module = __nccwpck_require__.nmd(module);\n\n\nconst {\n  minify: terserMinify\n} = __nccwpck_require__(775);\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"./index.js\").ExtractCommentsOptions} ExtractCommentsOptions */\n\n/** @typedef {import(\"./index.js\").CustomMinifyFunction} CustomMinifyFunction */\n\n/** @typedef {import(\"terser\").MinifyOptions} TerserMinifyOptions */\n\n/** @typedef {import(\"terser\").MinifyOutput} MinifyOutput */\n\n/** @typedef {import(\"terser\").FormatOptions} FormatOptions */\n\n/** @typedef {import(\"terser\").MangleOptions} MangleOptions */\n\n/** @typedef {import(\"./index.js\").ExtractCommentsFunction} ExtractCommentsFunction */\n\n/** @typedef {import(\"./index.js\").ExtractCommentsCondition} ExtractCommentsCondition */\n\n/**\n * @typedef {Object.<any, any>} CustomMinifyOptions\n */\n\n/**\n * @typedef {Object} InternalMinifyOptions\n * @property {string} name\n * @property {string} input\n * @property {RawSourceMap} [inputSourceMap]\n * @property {ExtractCommentsOptions} extractComments\n * @property {CustomMinifyFunction} [minify]\n * @property {TerserMinifyOptions | CustomMinifyOptions} minifyOptions\n */\n\n/**\n * @typedef {Array<string>} ExtractedComments\n */\n\n/**\n * @typedef {Promise<MinifyOutput & { extractedComments?: ExtractedComments}>} InternalMinifyResult\n */\n\n/**\n * @typedef {TerserMinifyOptions & { sourceMap: undefined } & ({ output: FormatOptions & { beautify: boolean } } | { format: FormatOptions & { beautify: boolean } })} NormalizedTerserMinifyOptions\n */\n\n/**\n * @param {TerserMinifyOptions} [terserOptions={}]\n * @returns {NormalizedTerserMinifyOptions}\n */\n\n\nfunction buildTerserOptions(terserOptions = {}) {\n  // Need deep copy objects to avoid https://github.com/terser/terser/issues/366\n  return { ...terserOptions,\n    compress: typeof terserOptions.compress === \"boolean\" ? terserOptions.compress : { ...terserOptions.compress\n    },\n    // ecma: terserOptions.ecma,\n    // ie8: terserOptions.ie8,\n    // keep_classnames: terserOptions.keep_classnames,\n    // keep_fnames: terserOptions.keep_fnames,\n    mangle: terserOptions.mangle == null ? true : typeof terserOptions.mangle === \"boolean\" ? terserOptions.mangle : { ...terserOptions.mangle\n    },\n    // module: terserOptions.module,\n    // nameCache: { ...terserOptions.toplevel },\n    // the `output` option is deprecated\n    ...(terserOptions.format ? {\n      format: {\n        beautify: false,\n        ...terserOptions.format\n      }\n    } : {\n      output: {\n        beautify: false,\n        ...terserOptions.output\n      }\n    }),\n    parse: { ...terserOptions.parse\n    },\n    // safari10: terserOptions.safari10,\n    // Ignoring sourceMap from options\n    // eslint-disable-next-line no-undefined\n    sourceMap: undefined // toplevel: terserOptions.toplevel\n\n  };\n}\n/**\n * @param {any} value\n * @returns {boolean}\n */\n\n\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\");\n}\n/**\n * @param {ExtractCommentsOptions} extractComments\n * @param {NormalizedTerserMinifyOptions} terserOptions\n * @param {ExtractedComments} extractedComments\n * @returns {ExtractCommentsFunction}\n */\n\n\nfunction buildComments(extractComments, terserOptions, extractedComments) {\n  /** @type {{ [index: string]: ExtractCommentsCondition }} */\n  const condition = {};\n  let comments;\n\n  if (terserOptions.format) {\n    ({\n      comments\n    } = terserOptions.format);\n  } else if (terserOptions.output) {\n    ({\n      comments\n    } = terserOptions.output);\n  }\n\n  condition.preserve = typeof comments !== \"undefined\" ? comments : false;\n\n  if (typeof extractComments === \"boolean\" && extractComments) {\n    condition.extract = \"some\";\n  } else if (typeof extractComments === \"string\" || extractComments instanceof RegExp) {\n    condition.extract = extractComments;\n  } else if (typeof extractComments === \"function\") {\n    condition.extract = extractComments;\n  } else if (extractComments && isObject(extractComments)) {\n    condition.extract = typeof extractComments.condition === \"boolean\" && extractComments.condition ? \"some\" : typeof extractComments.condition !== \"undefined\" ? extractComments.condition : \"some\";\n  } else {\n    // No extract\n    // Preserve using \"commentsOpts\" or \"some\"\n    condition.preserve = typeof comments !== \"undefined\" ? comments : \"some\";\n    condition.extract = false;\n  } // Ensure that both conditions are functions\n\n\n  [\"preserve\", \"extract\"].forEach(key => {\n    /** @type {undefined | string} */\n    let regexStr;\n    /** @type {undefined | RegExp} */\n\n    let regex;\n\n    switch (typeof condition[key]) {\n      case \"boolean\":\n        condition[key] = condition[key] ? () => true : () => false;\n        break;\n\n      case \"function\":\n        break;\n\n      case \"string\":\n        if (condition[key] === \"all\") {\n          condition[key] = () => true;\n\n          break;\n        }\n\n        if (condition[key] === \"some\") {\n          condition[key] =\n          /** @type {ExtractCommentsFunction} */\n          (astNode, comment) => (comment.type === \"comment2\" || comment.type === \"comment1\") && /@preserve|@lic|@cc_on|^\\**!/i.test(comment.value);\n\n          break;\n        }\n\n        regexStr =\n        /** @type {string} */\n        condition[key];\n\n        condition[key] =\n        /** @type {ExtractCommentsFunction} */\n        (astNode, comment) => new RegExp(\n        /** @type {string} */\n        regexStr).test(comment.value);\n\n        break;\n\n      default:\n        regex =\n        /** @type {RegExp} */\n        condition[key];\n\n        condition[key] =\n        /** @type {ExtractCommentsFunction} */\n        (astNode, comment) =>\n        /** @type {RegExp} */\n        regex.test(comment.value);\n\n    }\n  }); // Redefine the comments function to extract and preserve\n  // comments according to the two conditions\n\n  return (astNode, comment) => {\n    if (\n    /** @type {{ extract: ExtractCommentsFunction }} */\n    condition.extract(astNode, comment)) {\n      const commentText = comment.type === \"comment2\" ? `/*${comment.value}*/` : `//${comment.value}`; // Don't include duplicate comments\n\n      if (!extractedComments.includes(commentText)) {\n        extractedComments.push(commentText);\n      }\n    }\n\n    return (\n      /** @type {{ preserve: ExtractCommentsFunction }} */\n      condition.preserve(astNode, comment)\n    );\n  };\n}\n/**\n * @param {InternalMinifyOptions} options\n * @returns {InternalMinifyResult}\n */\n\n\nasync function minify(options) {\n  const {\n    name,\n    input,\n    inputSourceMap,\n    minify: minifyFn,\n    minifyOptions\n  } = options;\n\n  if (minifyFn) {\n    return minifyFn({\n      [name]: input\n    }, inputSourceMap, minifyOptions);\n  } // Copy terser options\n\n\n  const terserOptions = buildTerserOptions(minifyOptions); // Let terser generate a SourceMap\n\n  if (inputSourceMap) {\n    // @ts-ignore\n    terserOptions.sourceMap = {\n      asObject: true\n    };\n  }\n  /** @type {ExtractedComments} */\n\n\n  const extractedComments = [];\n  const {\n    extractComments\n  } = options;\n\n  if (terserOptions.output) {\n    terserOptions.output.comments = buildComments(extractComments, terserOptions, extractedComments);\n  } else if (terserOptions.format) {\n    terserOptions.format.comments = buildComments(extractComments, terserOptions, extractedComments);\n  }\n\n  const result = await terserMinify({\n    [name]: input\n  }, terserOptions);\n  return { ...result,\n    extractedComments\n  };\n}\n/**\n * @param {string} options\n * @returns {InternalMinifyResult}\n */\n\n\nfunction transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-param-reassign\n  const evaluatedOptions =\n  /** @type {InternalMinifyOptions} */\n  // eslint-disable-next-line no-new-func\n  new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\n\nmodule.exports.minify = minify;\nmodule.exports.transform = transform;\n\n/***/ }),\n\n/***/ 775:\n/***/ (function(module) {\n\nmodule.exports = require(\"next/dist/compiled/terser\");;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nccwpck_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\tvar threw = true;\n/******/ \t\ttry {\n/******/ \t\t\t__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);\n/******/ \t\t\tthrew = false;\n/******/ \t\t} finally {\n/******/ \t\t\tif(threw) delete __webpack_module_cache__[moduleId];\n/******/ \t\t}\n/******/ \t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/node module decorator */\n/******/ \t!function() {\n/******/ \t\t__nccwpck_require__.nmd = function(module) {\n/******/ \t\t\tmodule.paths = [];\n/******/ \t\t\tif (!module.children) module.children = [];\n/******/ \t\t\treturn module;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/compat */\n/******/ \t\n/******/ \t__nccwpck_require__.ab = __dirname + \"/\";/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nccwpck_require__(149);\n/******/ })()\n;"]},"metadata":{},"sourceType":"script"}