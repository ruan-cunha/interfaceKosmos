{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPagesMapping = createPagesMapping;\nexports.createEntrypoints = createEntrypoints;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _path = require(\"path\");\n\nvar _querystring = require(\"querystring\");\n\nvar _constants = require(\"../lib/constants\");\n\nvar _config = require(\"../server/config\");\n\nvar _normalizePagePath = require(\"../server/normalize-page-path\");\n\nvar _log = require(\"./output/log\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createPagesMapping(pagePaths, extensions, isWebpack5, isDev) {\n  const previousPages = {};\n  const pages = pagePaths.reduce((result, pagePath) => {\n    let page = `${pagePath.replace(new RegExp(`\\\\.+(${extensions.join('|')})$`), '').replace(/\\\\/g, '/')}`.replace(/\\/index$/, '');\n    const pageKey = page === '' ? '/' : page;\n\n    if (pageKey in result) {\n      (0, _log).warn(`Duplicate page detected. ${_chalk.default.cyan((0, _path).join('pages', previousPages[pageKey]))} and ${_chalk.default.cyan((0, _path).join('pages', pagePath))} both resolve to ${_chalk.default.cyan(pageKey)}.`);\n    } else {\n      previousPages[pageKey] = pagePath;\n    }\n\n    result[pageKey] = (0, _path).join(_constants.PAGES_DIR_ALIAS, pagePath).replace(/\\\\/g, '/');\n    return result;\n  }, {}); // we alias these in development and allow webpack to\n  // allow falling back to the correct source file so\n  // that HMR can work properly when a file is added/removed\n\n  if (isWebpack5 && isDev) {\n    pages['/_app'] = `${_constants.PAGES_DIR_ALIAS}/_app`;\n    pages['/_error'] = `${_constants.PAGES_DIR_ALIAS}/_error`;\n    pages['/_document'] = `${_constants.PAGES_DIR_ALIAS}/_document`;\n  } else {\n    pages['/_app'] = pages['/_app'] || 'next/dist/pages/_app';\n    pages['/_error'] = pages['/_error'] || 'next/dist/pages/_error';\n    pages['/_document'] = pages['/_document'] || 'next/dist/pages/_document';\n  }\n\n  return pages;\n}\n\nfunction createEntrypoints(pages, target, buildId, previewMode, config, loadedEnvFiles) {\n  const client = {};\n  const server = {};\n  const hasRuntimeConfig = Object.keys(config.publicRuntimeConfig).length > 0 || Object.keys(config.serverRuntimeConfig).length > 0;\n  const defaultServerlessOptions = {\n    absoluteAppPath: pages['/_app'],\n    absoluteDocumentPath: pages['/_document'],\n    absoluteErrorPath: pages['/_error'],\n    absolute404Path: pages['/404'] || '',\n    distDir: _constants.DOT_NEXT_ALIAS,\n    buildId,\n    assetPrefix: config.assetPrefix,\n    generateEtags: config.generateEtags ? 'true' : '',\n    poweredByHeader: config.poweredByHeader ? 'true' : '',\n    canonicalBase: config.amp.canonicalBase || '',\n    basePath: config.basePath,\n    runtimeConfig: hasRuntimeConfig ? JSON.stringify({\n      publicRuntimeConfig: config.publicRuntimeConfig,\n      serverRuntimeConfig: config.serverRuntimeConfig\n    }) : '',\n    previewProps: JSON.stringify(previewMode),\n    // base64 encode to make sure contents don't break webpack URL loading\n    loadedEnvFiles: Buffer.from(JSON.stringify(loadedEnvFiles)).toString('base64'),\n    i18n: config.i18n ? JSON.stringify(config.i18n) : ''\n  };\n  Object.keys(pages).forEach(page => {\n    const absolutePagePath = pages[page];\n    const bundleFile = (0, _normalizePagePath).normalizePagePath(page);\n    const isApiRoute = page.match(_constants.API_ROUTE);\n\n    const clientBundlePath = _path.posix.join('pages', bundleFile);\n\n    const serverBundlePath = _path.posix.join('pages', bundleFile);\n\n    const isLikeServerless = (0, _config).isTargetLikeServerless(target);\n\n    if (isApiRoute && isLikeServerless) {\n      const serverlessLoaderOptions = {\n        page,\n        absolutePagePath,\n        ...defaultServerlessOptions\n      };\n      server[serverBundlePath] = `next-serverless-loader?${(0, _querystring).stringify(serverlessLoaderOptions)}!`;\n    } else if (isApiRoute || target === 'server') {\n      server[serverBundlePath] = [absolutePagePath];\n    } else if (isLikeServerless && page !== '/_app' && page !== '/_document') {\n      const serverlessLoaderOptions = {\n        page,\n        absolutePagePath,\n        ...defaultServerlessOptions\n      };\n      server[serverBundlePath] = `next-serverless-loader?${(0, _querystring).stringify(serverlessLoaderOptions)}!`;\n    }\n\n    if (page === '/_document') {\n      return;\n    }\n\n    if (!isApiRoute) {\n      const pageLoaderOpts = {\n        page,\n        absolutePagePath\n      };\n      const pageLoader = `next-client-pages-loader?${(0, _querystring).stringify(pageLoaderOpts)}!`; // Make sure next/router is a dependency of _app or else chunk splitting\n      // might cause the router to not be able to load causing hydration\n      // to fail\n\n      client[clientBundlePath] = page === '/_app' ? [pageLoader, require.resolve('../client/router')] : pageLoader;\n    }\n  });\n  return {\n    client,\n    server\n  };\n}","map":{"version":3,"sources":["../../build/entries.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport { posix, join } from 'path'\nimport { stringify } from 'querystring'\nimport { API_ROUTE, DOT_NEXT_ALIAS, PAGES_DIR_ALIAS } from '../lib/constants'\nimport { __ApiPreviewProps } from '../server/api-utils'\nimport { isTargetLikeServerless } from '../server/config'\nimport { normalizePagePath } from '../server/normalize-page-path'\nimport { warn } from './output/log'\nimport { ClientPagesLoaderOptions } from './webpack/loaders/next-client-pages-loader'\nimport { ServerlessLoaderQuery } from './webpack/loaders/next-serverless-loader'\nimport { LoadedEnvFiles } from '@next/env'\nimport { NextConfigComplete } from '../server/config-shared'\n\ntype PagesMapping = {\n  [page: string]: string\n}\n\nexport function createPagesMapping(\n  pagePaths: string[],\n  extensions: string[],\n  isWebpack5: boolean,\n  isDev: boolean\n): PagesMapping {\n  const previousPages: PagesMapping = {}\n  const pages: PagesMapping = pagePaths.reduce(\n    (result: PagesMapping, pagePath): PagesMapping => {\n      let page = `${pagePath\n        .replace(new RegExp(`\\\\.+(${extensions.join('|')})$`), '')\n        .replace(/\\\\/g, '/')}`.replace(/\\/index$/, '')\n\n      const pageKey = page === '' ? '/' : page\n\n      if (pageKey in result) {\n        warn(\n          `Duplicate page detected. ${chalk.cyan(\n            join('pages', previousPages[pageKey])\n          )} and ${chalk.cyan(\n            join('pages', pagePath)\n          )} both resolve to ${chalk.cyan(pageKey)}.`\n        )\n      } else {\n        previousPages[pageKey] = pagePath\n      }\n      result[pageKey] = join(PAGES_DIR_ALIAS, pagePath).replace(/\\\\/g, '/')\n      return result\n    },\n    {}\n  )\n\n  // we alias these in development and allow webpack to\n  // allow falling back to the correct source file so\n  // that HMR can work properly when a file is added/removed\n  if (isWebpack5 && isDev) {\n    pages['/_app'] = `${PAGES_DIR_ALIAS}/_app`\n    pages['/_error'] = `${PAGES_DIR_ALIAS}/_error`\n    pages['/_document'] = `${PAGES_DIR_ALIAS}/_document`\n  } else {\n    pages['/_app'] = pages['/_app'] || 'next/dist/pages/_app'\n    pages['/_error'] = pages['/_error'] || 'next/dist/pages/_error'\n    pages['/_document'] = pages['/_document'] || 'next/dist/pages/_document'\n  }\n  return pages\n}\n\nexport type WebpackEntrypoints = {\n  [bundle: string]:\n    | string\n    | string[]\n    | {\n        import: string | string[]\n        dependOn?: string | string[]\n      }\n}\n\ntype Entrypoints = {\n  client: WebpackEntrypoints\n  server: WebpackEntrypoints\n}\n\nexport function createEntrypoints(\n  pages: PagesMapping,\n  target: 'server' | 'serverless' | 'experimental-serverless-trace',\n  buildId: string,\n  previewMode: __ApiPreviewProps,\n  config: NextConfigComplete,\n  loadedEnvFiles: LoadedEnvFiles\n): Entrypoints {\n  const client: WebpackEntrypoints = {}\n  const server: WebpackEntrypoints = {}\n\n  const hasRuntimeConfig =\n    Object.keys(config.publicRuntimeConfig).length > 0 ||\n    Object.keys(config.serverRuntimeConfig).length > 0\n\n  const defaultServerlessOptions = {\n    absoluteAppPath: pages['/_app'],\n    absoluteDocumentPath: pages['/_document'],\n    absoluteErrorPath: pages['/_error'],\n    absolute404Path: pages['/404'] || '',\n    distDir: DOT_NEXT_ALIAS,\n    buildId,\n    assetPrefix: config.assetPrefix,\n    generateEtags: config.generateEtags ? 'true' : '',\n    poweredByHeader: config.poweredByHeader ? 'true' : '',\n    canonicalBase: config.amp.canonicalBase || '',\n    basePath: config.basePath,\n    runtimeConfig: hasRuntimeConfig\n      ? JSON.stringify({\n          publicRuntimeConfig: config.publicRuntimeConfig,\n          serverRuntimeConfig: config.serverRuntimeConfig,\n        })\n      : '',\n    previewProps: JSON.stringify(previewMode),\n    // base64 encode to make sure contents don't break webpack URL loading\n    loadedEnvFiles: Buffer.from(JSON.stringify(loadedEnvFiles)).toString(\n      'base64'\n    ),\n    i18n: config.i18n ? JSON.stringify(config.i18n) : '',\n  }\n\n  Object.keys(pages).forEach((page) => {\n    const absolutePagePath = pages[page]\n    const bundleFile = normalizePagePath(page)\n    const isApiRoute = page.match(API_ROUTE)\n\n    const clientBundlePath = posix.join('pages', bundleFile)\n    const serverBundlePath = posix.join('pages', bundleFile)\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    if (isApiRoute && isLikeServerless) {\n      const serverlessLoaderOptions: ServerlessLoaderQuery = {\n        page,\n        absolutePagePath,\n        ...defaultServerlessOptions,\n      }\n      server[serverBundlePath] = `next-serverless-loader?${stringify(\n        serverlessLoaderOptions\n      )}!`\n    } else if (isApiRoute || target === 'server') {\n      server[serverBundlePath] = [absolutePagePath]\n    } else if (isLikeServerless && page !== '/_app' && page !== '/_document') {\n      const serverlessLoaderOptions: ServerlessLoaderQuery = {\n        page,\n        absolutePagePath,\n        ...defaultServerlessOptions,\n      }\n      server[serverBundlePath] = `next-serverless-loader?${stringify(\n        serverlessLoaderOptions\n      )}!`\n    }\n\n    if (page === '/_document') {\n      return\n    }\n\n    if (!isApiRoute) {\n      const pageLoaderOpts: ClientPagesLoaderOptions = {\n        page,\n        absolutePagePath,\n      }\n      const pageLoader = `next-client-pages-loader?${stringify(\n        pageLoaderOpts\n      )}!`\n\n      // Make sure next/router is a dependency of _app or else chunk splitting\n      // might cause the router to not be able to load causing hydration\n      // to fail\n\n      client[clientBundlePath] =\n        page === '/_app'\n          ? [pageLoader, require.resolve('../client/router')]\n          : pageLoader\n    }\n  })\n\n  return {\n    client,\n    server,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}