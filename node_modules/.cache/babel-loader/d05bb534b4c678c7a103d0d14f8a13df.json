{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\public_html\\\\vamo\\\\interface2\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { firebase } from \"./initFirebase\";\nimport { useRouter } from \"next/router\";\nimport { GetServerSideProps } from \"next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = firebase.database();\nexport function Home() {\n  _s();\n\n  const [time, setTime] = useState(\"Time\");\n  const [temp, setTemp] = useState(\"Temp\");\n  const [altitude, setAltitude] = useState(\"Altitude\");\n  const [yaw, setYaw] = useState(\"Yaw\");\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        const launchRef = db.ref(`launch`);\n        const newLaunchRef = launchRef.push();\n        newLaunchRef.set({\n          time,\n          temp,\n          altitude,\n          yaw\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"X's and O's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"Time\",\n        value: time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"Temp\",\n        value: temp,\n        onChange: e => setTemp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"Altitude\",\n        value: altitude,\n        onChange: e => setAltitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"Yaw\",\n        value: yaw,\n        onChange: e => setYaw(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"8XNHTm4bhduPKVetEKzqQSa/FnA=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport const App = () => {\n  _s2();\n\n  const [temperatureData, setTemperatureData] = useState({});\n  const [altitudeData, setAltitudeData] = useState({});\n  const [yawData, setYawData] = useState({});\n  useEffect(() => {\n    const loadData = async () => {\n      const tempo = [3, 10, 50, 2];\n      const temperatura = [4, 3, 2, 5];\n      const altitude = [52, 51, 5];\n      const yaw = [6, 12, 9];\n      setTemperatureData({\n        datasets: [{\n          label: 'Temperatura',\n          data: temperatura,\n          backgroundColor: 'rgba(255, 99, 132, 1)',\n          hoverBackgroundColor: \"rgba(255, 99, 132, 1)\",\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n      setAltitudeData({\n        datasets: [{\n          label: 'Altitude',\n          data: altitude,\n          backgroundColor: 'rgba(19, 240, 14, 1)',\n          hoverBackgroundColor: 'rgba(19, 240, 14, 1)',\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(19, 240, 14, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n      setYawData({\n        datasets: [{\n          label: 'Yaw',\n          data: yaw,\n          backgroundColor: 'rgba(139, 0, 249, 1)',\n          hoverBackgroundColor: 'rgba(139, 0, 249, 1)',\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(139, 0, 249, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n    };\n\n    loadData();\n  }, []);\n  const temperatureOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"Â°C\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  const altitudeOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"m\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  const yawOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: temperatureData,\n      options: temperatureOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: altitudeData,\n      options: altitudeOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: yawData,\n      options: yawOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"botao\",\n      children: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"botao\",\n      children: \"Finalizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(App, \"/TJ6Ds3DvFB+lolr0FXo95dI6Bw=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/xampp/public_html/vamo/interface2/src/App.js"],"names":["React","useState","useEffect","Line","firebase","useRouter","GetServerSideProps","db","database","Home","time","setTime","temp","setTemp","altitude","setAltitude","yaw","setYaw","router","e","preventDefault","launchRef","ref","newLaunchRef","push","set","target","value","App","temperatureData","setTemperatureData","altitudeData","setAltitudeData","yawData","setYawData","loadData","tempo","temperatura","datasets","label","data","backgroundColor","hoverBackgroundColor","hoverBorderColor","borderColor","borderWidth","labels","temperatureOptions","elements","point","radius","scales","y","ticks","callback","index","values","responsive","altitudeOptions","yawOptions"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport { firebase } from \"./initFirebase\";\nimport { useRouter, } from \"next/router\";\nimport { GetServerSideProps } from \"next\";\n\nconst db = firebase.database();\n\nexport function Home() {\n  const [time, setTime] = useState(\"Time\");\n  const [temp, setTemp] = useState(\"Temp\");\n  const [altitude, setAltitude] = useState(\"Altitude\");\n  const [yaw, setYaw] = useState(\"Yaw\");\n  \n  const router = useRouter();\n\n  return (\n    <main>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const launchRef = db.ref(`launch`);\n          const newLaunchRef = launchRef.push();\n          newLaunchRef.set({\n            time,\n            temp,\n            altitude,\n            yaw,\n          });\n        }}\n      >\n        <h1>X's and O's</h1>\n\n        <input\n          name=\"Time\"\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n        />\n\n        <input\n          name=\"Temp\"\n          value={temp}\n          onChange={(e) => setTemp(e.target.value)}\n        />\n\n        <input\n          name=\"Altitude\"\n          value={altitude}\n          onChange={(e) => setAltitude(e.target.value)}\n        />\n\n        <input\n          name=\"Yaw\"\n          value={yaw}\n          onChange={(e) => setYaw(e.target.value)}\n        />\n\n        <button type=\"submit\">Enviar</button>\n      </form>\n    </main>\n  );\n}\n\nexport const App = () => {\n  const [temperatureData, setTemperatureData] = useState({});\n  const [altitudeData, setAltitudeData] = useState({});\n  const [yawData, setYawData] = useState({});\n  useEffect(() => {\n    const loadData = async () => {\n\n      const tempo = [3,10,50,2];\n      const temperatura = [4,3,2,5];\n      const altitude = [52,51,5];\n      const yaw = [6,12,9];\n\n      setTemperatureData({\n        datasets: [\n          {\n            label: 'Temperatura',\n            data: temperatura,\n            backgroundColor: 'rgba(255, 99, 132, 1)',\n            hoverBackgroundColor: \"rgba(255, 99, 132, 1)\",\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });\n      setAltitudeData({\n        datasets: [\n          {\n            label: 'Altitude',\n            data: altitude,\n            backgroundColor: 'rgba(19, 240, 14, 1)',\n            hoverBackgroundColor: 'rgba(19, 240, 14, 1)',\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(19, 240, 14, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });\n      setYawData({\n        datasets: [\n          {\n            label: 'Yaw',\n            data: yaw,\n            backgroundColor: 'rgba(139, 0, 249, 1)',\n            hoverBackgroundColor: 'rgba(139, 0, 249, 1)',\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(139, 0, 249, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });     \n    }\n    \n    loadData();\n    \n  }, [])\n  \n  const temperatureOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"Â°C\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  const altitudeOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"m\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  const yawOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  \n  return <>\n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={temperatureData} options={temperatureOptions}/> \n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={altitudeData} options={altitudeOptions}/> \n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={yawData} options={yawOptions}/> \n    <button id=\"botao\">Iniciar</button>\n    <button id=\"botao\">Finalizar</button>\n  </>\n}"]},"metadata":{},"sourceType":"module"}