{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startedDevelopmentServer = startedDevelopmentServer;\nexports.formatAmpMessages = formatAmpMessages;\nexports.ampValidation = ampValidation;\nexports.watchCompilers = watchCompilers;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _stripAnsi = _interopRequireDefault(require(\"next/dist/compiled/strip-ansi\"));\n\nvar _textTable = _interopRequireDefault(require(\"next/dist/compiled/text-table\"));\n\nvar _unistore = _interopRequireDefault(require(\"next/dist/compiled/unistore\"));\n\nvar _formatWebpackMessages = _interopRequireDefault(require(\"../../client/dev/error-overlay/format-webpack-messages\"));\n\nvar _store = require(\"./store\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction startedDevelopmentServer(appUrl, bindAddr) {\n  _store.store.setState({\n    appUrl,\n    bindAddr\n  });\n}\n\nlet previousClient = null;\nlet previousServer = null;\nvar // eslint typescript has a bug with TS enums\n\n/* eslint-disable no-shadow */\nWebpackStatusPhase;\n\n(function (WebpackStatusPhase1) {\n  WebpackStatusPhase1[WebpackStatusPhase1[\"COMPILING\"] = 1] = \"COMPILING\";\n  WebpackStatusPhase1[WebpackStatusPhase1[\"COMPILED_WITH_ERRORS\"] = 2] = \"COMPILED_WITH_ERRORS\";\n  WebpackStatusPhase1[WebpackStatusPhase1[\"COMPILED_WITH_WARNINGS\"] = 4] = \"COMPILED_WITH_WARNINGS\";\n  WebpackStatusPhase1[WebpackStatusPhase1[\"COMPILED\"] = 5] = \"COMPILED\";\n})(WebpackStatusPhase || (WebpackStatusPhase = {}));\n\nfunction getWebpackStatusPhase(status) {\n  if (status.loading) {\n    return WebpackStatusPhase.COMPILING;\n  }\n\n  if (status.errors) {\n    return WebpackStatusPhase.COMPILED_WITH_ERRORS;\n  }\n\n  if (status.warnings) {\n    return WebpackStatusPhase.COMPILED_WITH_WARNINGS;\n  }\n\n  return WebpackStatusPhase.COMPILED;\n}\n\nfunction formatAmpMessages(amp) {\n  let output = _chalk.default.bold('Amp Validation') + '\\n\\n';\n  let messages = [];\n\n  const chalkError = _chalk.default.red('error');\n\n  function ampError(page, error) {\n    messages.push([page, chalkError, error.message, error.specUrl || '']);\n  }\n\n  const chalkWarn = _chalk.default.yellow('warn');\n\n  function ampWarn(page, warn) {\n    messages.push([page, chalkWarn, warn.message, warn.specUrl || '']);\n  }\n\n  for (const page in amp) {\n    let {\n      errors,\n      warnings\n    } = amp[page];\n\n    const devOnlyFilter = err => err.code !== 'DEV_MODE_ONLY';\n\n    errors = errors.filter(devOnlyFilter);\n    warnings = warnings.filter(devOnlyFilter);\n\n    if (!(errors.length || warnings.length)) {\n      continue;\n    }\n\n    if (errors.length) {\n      ampError(page, errors[0]);\n\n      for (let index = 1; index < errors.length; ++index) {\n        ampError('', errors[index]);\n      }\n    }\n\n    if (warnings.length) {\n      ampWarn(errors.length ? '' : page, warnings[0]);\n\n      for (let index = 1; index < warnings.length; ++index) {\n        ampWarn('', warnings[index]);\n      }\n    }\n\n    messages.push(['', '', '', '']);\n  }\n\n  if (!messages.length) {\n    return '';\n  }\n\n  output += (0, _textTable).default(messages, {\n    align: ['l', 'l', 'l', 'l'],\n\n    stringLength(str) {\n      return (0, _stripAnsi).default(str).length;\n    }\n\n  });\n  return output;\n}\n\nconst buildStore = (0, _unistore).default();\nbuildStore.subscribe(state => {\n  const {\n    amp,\n    client,\n    server\n  } = state;\n  const [{\n    status\n  }] = [{\n    status: client,\n    phase: getWebpackStatusPhase(client)\n  }, {\n    status: server,\n    phase: getWebpackStatusPhase(server)\n  }].sort((a, b) => a.phase.valueOf() - b.phase.valueOf());\n\n  const {\n    bootstrap: bootstrapping,\n    appUrl\n  } = _store.store.getState();\n\n  if (bootstrapping && status.loading) {\n    return;\n  }\n\n  let partialState = {\n    bootstrap: false,\n    appUrl: appUrl\n  };\n\n  if (status.loading) {\n    _store.store.setState({ ...partialState,\n      loading: true\n    }, true);\n  } else {\n    let {\n      errors,\n      warnings\n    } = status;\n\n    if (errors == null) {\n      if (Object.keys(amp).length > 0) {\n        warnings = (warnings || []).concat(formatAmpMessages(amp) || []);\n        if (!warnings.length) warnings = null;\n      }\n    }\n\n    _store.store.setState({ ...partialState,\n      loading: false,\n      typeChecking: false,\n      errors,\n      warnings\n    }, true);\n  }\n});\n\nfunction ampValidation(page, errors, warnings) {\n  const {\n    amp\n  } = buildStore.getState();\n\n  if (!(errors.length || warnings.length)) {\n    buildStore.setState({\n      amp: Object.keys(amp).filter(k => k !== page).sort() // eslint-disable-next-line no-sequences\n      .reduce((a, c) => (a[c] = amp[c], a), {})\n    });\n    return;\n  }\n\n  const newAmp = { ...amp,\n    [page]: {\n      errors,\n      warnings\n    }\n  };\n  buildStore.setState({\n    amp: Object.keys(newAmp).sort() // eslint-disable-next-line no-sequences\n    .reduce((a, c) => (a[c] = newAmp[c], a), {})\n  });\n}\n\nfunction watchCompilers(client, server) {\n  if (previousClient === client && previousServer === server) {\n    return;\n  }\n\n  buildStore.setState({\n    client: {\n      loading: true\n    },\n    server: {\n      loading: true\n    }\n  });\n\n  function tapCompiler(key, compiler, onEvent) {\n    compiler.hooks.invalid.tap(`NextJsInvalid-${key}`, () => {\n      onEvent({\n        loading: true\n      });\n    });\n    compiler.hooks.done.tap(`NextJsDone-${key}`, stats => {\n      buildStore.setState({\n        amp: {}\n      });\n      const {\n        errors,\n        warnings\n      } = (0, _formatWebpackMessages).default(stats.toJson({\n        all: false,\n        warnings: true,\n        errors: true\n      }));\n      const hasErrors = !!(errors === null || errors === void 0 ? void 0 : errors.length);\n      const hasWarnings = !!(warnings === null || warnings === void 0 ? void 0 : warnings.length);\n      onEvent({\n        loading: false,\n        errors: hasErrors ? errors : null,\n        warnings: hasWarnings ? warnings : null\n      });\n    });\n  }\n\n  tapCompiler('client', client, status => buildStore.setState({\n    client: status\n  }));\n  tapCompiler('server', server, status => buildStore.setState({\n    server: status\n  }));\n  previousClient = client;\n  previousServer = server;\n}","map":{"version":3,"sources":["../../../build/output/index.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport textTable from 'next/dist/compiled/text-table'\nimport createStore from 'next/dist/compiled/unistore'\nimport formatWebpackMessages from '../../client/dev/error-overlay/format-webpack-messages'\nimport { OutputState, store as consoleStore } from './store'\n\nexport function startedDevelopmentServer(appUrl: string, bindAddr: string) {\n  consoleStore.setState({ appUrl, bindAddr })\n}\n\nlet previousClient: import('webpack').Compiler | null = null\nlet previousServer: import('webpack').Compiler | null = null\n\ntype CompilerDiagnostics = {\n  errors: string[] | null\n  warnings: string[] | null\n}\n\ntype WebpackStatus =\n  | { loading: true }\n  | ({ loading: false } & CompilerDiagnostics)\n\ntype AmpStatus = {\n  message: string\n  line: number\n  col: number\n  specUrl: string | null\n  code: string\n}\n\nexport type AmpPageStatus = {\n  [page: string]: { errors: AmpStatus[]; warnings: AmpStatus[] }\n}\n\ntype BuildStatusStore = {\n  client: WebpackStatus\n  server: WebpackStatus\n  amp: AmpPageStatus\n}\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\nenum WebpackStatusPhase {\n  COMPILING = 1,\n  COMPILED_WITH_ERRORS = 2,\n  COMPILED_WITH_WARNINGS = 4,\n  COMPILED = 5,\n}\n\nfunction getWebpackStatusPhase(status: WebpackStatus): WebpackStatusPhase {\n  if (status.loading) {\n    return WebpackStatusPhase.COMPILING\n  }\n  if (status.errors) {\n    return WebpackStatusPhase.COMPILED_WITH_ERRORS\n  }\n  if (status.warnings) {\n    return WebpackStatusPhase.COMPILED_WITH_WARNINGS\n  }\n  return WebpackStatusPhase.COMPILED\n}\n\nexport function formatAmpMessages(amp: AmpPageStatus) {\n  let output = chalk.bold('Amp Validation') + '\\n\\n'\n  let messages: string[][] = []\n\n  const chalkError = chalk.red('error')\n  function ampError(page: string, error: AmpStatus) {\n    messages.push([page, chalkError, error.message, error.specUrl || ''])\n  }\n\n  const chalkWarn = chalk.yellow('warn')\n  function ampWarn(page: string, warn: AmpStatus) {\n    messages.push([page, chalkWarn, warn.message, warn.specUrl || ''])\n  }\n\n  for (const page in amp) {\n    let { errors, warnings } = amp[page]\n\n    const devOnlyFilter = (err: AmpStatus) => err.code !== 'DEV_MODE_ONLY'\n    errors = errors.filter(devOnlyFilter)\n    warnings = warnings.filter(devOnlyFilter)\n    if (!(errors.length || warnings.length)) {\n      // Skip page with no non-dev warnings\n      continue\n    }\n\n    if (errors.length) {\n      ampError(page, errors[0])\n      for (let index = 1; index < errors.length; ++index) {\n        ampError('', errors[index])\n      }\n    }\n    if (warnings.length) {\n      ampWarn(errors.length ? '' : page, warnings[0])\n      for (let index = 1; index < warnings.length; ++index) {\n        ampWarn('', warnings[index])\n      }\n    }\n    messages.push(['', '', '', ''])\n  }\n\n  if (!messages.length) {\n    return ''\n  }\n\n  output += textTable(messages, {\n    align: ['l', 'l', 'l', 'l'],\n    stringLength(str: string) {\n      return stripAnsi(str).length\n    },\n  })\n\n  return output\n}\n\nconst buildStore = createStore<BuildStatusStore>()\n\nbuildStore.subscribe((state) => {\n  const { amp, client, server } = state\n\n  const [{ status }] = [\n    { status: client, phase: getWebpackStatusPhase(client) },\n    { status: server, phase: getWebpackStatusPhase(server) },\n  ].sort((a, b) => a.phase.valueOf() - b.phase.valueOf())\n\n  const { bootstrap: bootstrapping, appUrl } = consoleStore.getState()\n  if (bootstrapping && status.loading) {\n    return\n  }\n\n  let partialState: Partial<OutputState> = {\n    bootstrap: false,\n    appUrl: appUrl!,\n  }\n\n  if (status.loading) {\n    consoleStore.setState(\n      { ...partialState, loading: true } as OutputState,\n      true\n    )\n  } else {\n    let { errors, warnings } = status\n\n    if (errors == null) {\n      if (Object.keys(amp).length > 0) {\n        warnings = (warnings || []).concat(formatAmpMessages(amp) || [])\n        if (!warnings.length) warnings = null\n      }\n    }\n\n    consoleStore.setState(\n      {\n        ...partialState,\n        loading: false,\n        typeChecking: false,\n        errors,\n        warnings,\n      } as OutputState,\n      true\n    )\n  }\n})\n\nexport function ampValidation(\n  page: string,\n  errors: AmpStatus[],\n  warnings: AmpStatus[]\n) {\n  const { amp } = buildStore.getState()\n  if (!(errors.length || warnings.length)) {\n    buildStore.setState({\n      amp: Object.keys(amp)\n        .filter((k) => k !== page)\n        .sort()\n        // eslint-disable-next-line no-sequences\n        .reduce((a, c) => ((a[c] = amp[c]), a), {} as AmpPageStatus),\n    })\n    return\n  }\n\n  const newAmp: AmpPageStatus = { ...amp, [page]: { errors, warnings } }\n  buildStore.setState({\n    amp: Object.keys(newAmp)\n      .sort()\n      // eslint-disable-next-line no-sequences\n      .reduce((a, c) => ((a[c] = newAmp[c]), a), {} as AmpPageStatus),\n  })\n}\n\nexport function watchCompilers(\n  client: import('webpack').Compiler,\n  server: import('webpack').Compiler\n) {\n  if (previousClient === client && previousServer === server) {\n    return\n  }\n\n  buildStore.setState({\n    client: { loading: true },\n    server: { loading: true },\n  })\n\n  function tapCompiler(\n    key: string,\n    compiler: any,\n    onEvent: (status: WebpackStatus) => void\n  ) {\n    compiler.hooks.invalid.tap(`NextJsInvalid-${key}`, () => {\n      onEvent({ loading: true })\n    })\n\n    compiler.hooks.done.tap(\n      `NextJsDone-${key}`,\n      (stats: import('webpack').Stats) => {\n        buildStore.setState({ amp: {} })\n\n        const { errors, warnings } = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        )\n\n        const hasErrors = !!errors?.length\n        const hasWarnings = !!warnings?.length\n\n        onEvent({\n          loading: false,\n          errors: hasErrors ? errors : null,\n          warnings: hasWarnings ? warnings : null,\n        })\n      }\n    )\n  }\n\n  tapCompiler('client', client, (status) =>\n    buildStore.setState({ client: status })\n  )\n  tapCompiler('server', server, (status) =>\n    buildStore.setState({ server: status })\n  )\n\n  previousClient = client\n  previousServer = server\n}\n"]},"metadata":{},"sourceType":"script"}