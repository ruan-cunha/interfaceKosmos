{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"normalizePathSep\", {\n  enumerable: true,\n  get: function () {\n    return _denormalizePagePath.normalizePathSep;\n  }\n});\nObject.defineProperty(exports, \"denormalizePagePath\", {\n  enumerable: true,\n  get: function () {\n    return _denormalizePagePath.denormalizePagePath;\n  }\n});\nexports.normalizePagePath = normalizePagePath;\n\nvar _path = require(\"path\");\n\nvar _denormalizePagePath = require(\"./denormalize-page-path\");\n\nfunction normalizePagePath(page) {\n  // If the page is `/` we need to append `/index`, otherwise the returned directory root will be bundles instead of pages\n  if (page === '/') {\n    page = '/index';\n  } else if (/^\\/index(\\/|$)/.test(page)) {\n    page = `/index${page}`;\n  } // Resolve on anything that doesn't start with `/`\n\n\n  if (!page.startsWith('/')) {\n    page = `/${page}`;\n  } // Throw when using ../ etc in the pathname\n\n\n  const resolvedPage = _path.posix.normalize(page);\n\n  if (page !== resolvedPage) {\n    throw new Error(`Requested and resolved page mismatch: ${page} ${resolvedPage}`);\n  }\n\n  return page;\n}","map":{"version":3,"sources":["../../server/normalize-page-path.ts"],"names":[],"mappings":";;;;;+BAES,kB,EAAgB;kBAAA;;gCAAhB,gB;;AAAgB,C;+BAAE,qB,EAAmB;kBAAA;;gCAAnB,mB;;AAAmB,C;QAE9B,iB,GAAA,iB;;AAJM,IAAA,KAAM,GAAA,OAAA,CAAA,MAAA,CAAN;;;;SAIN,iB,CAAkB,I,EAAsB;AACtD;AACA,MAAI,IAAI,KAAA,GAAR,EAAkB;AAChB,IAAA,IAAI,GAAA,QAAJ;AACD,GAFD,MAEO,IAAE,iBAAmB,IAAnB,CAAwB,IAAxB,CAAF,EAAiC;AACtC,IAAA,IAAI,GAAI,SAAQ,IAAI,EAApB;AACD,GANqD,CAOtD;;;AACA,MAAE,CAAG,IAAI,CAAC,UAAL,CAAe,GAAf,CAAL,EAA2B;AACzB,IAAA,IAAI,GAAI,IAAG,IAAI,EAAf;AACD,GAVqD,CAWtD;;;AACA,QAAM,YAAY,GAhBE,KAAM,CAAA,KAAN,CAgBO,SAhBP,CAgBiB,IAhBjB,CAgBpB;;AACA,MAAI,IAAI,KAAK,YAAb,EAA2B;AACzB,UAAM,IAAI,KAAJ,CACH,yCAAwC,IAAK,IAAG,YAAY,EADzD,CAAN;AAGD;;SACM,I;AACR","sourcesContent":["import { posix } from 'path'\n\nexport { normalizePathSep, denormalizePagePath } from './denormalize-page-path'\n\nexport function normalizePagePath(page: string): string {\n  // If the page is `/` we need to append `/index`, otherwise the returned directory root will be bundles instead of pages\n  if (page === '/') {\n    page = '/index'\n  } else if (/^\\/index(\\/|$)/.test(page)) {\n    page = `/index${page}`\n  }\n  // Resolve on anything that doesn't start with `/`\n  if (!page.startsWith('/')) {\n    page = `/${page}`\n  }\n  // Throw when using ../ etc in the pathname\n  const resolvedPage = posix.normalize(page)\n  if (page !== resolvedPage) {\n    throw new Error(\n      `Requested and resolved page mismatch: ${page} ${resolvedPage}`\n    )\n  }\n  return page\n}\n"]},"metadata":{},"sourceType":"script"}