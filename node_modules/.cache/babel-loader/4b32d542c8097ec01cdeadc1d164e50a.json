{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPagesDir = findPagesDir;\nexports.existsSync = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst existsSync = f => {\n  try {\n    _fs.default.accessSync(f, _fs.default.constants.F_OK);\n\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n\nexports.existsSync = existsSync;\n\nfunction findPagesDir(dir) {\n  // prioritize ./pages over ./src/pages\n  let curDir = _path.default.join(dir, 'pages');\n\n  if (existsSync(curDir)) return curDir;\n  curDir = _path.default.join(dir, 'src/pages');\n  if (existsSync(curDir)) return curDir; // Check one level up the tree to see if the pages directory might be there\n\n  if (existsSync(_path.default.join(dir, '..', 'pages'))) {\n    throw new Error('> No `pages` directory found. Did you mean to run `next` in the parent (`../`) directory?');\n  }\n\n  throw new Error(\"> Couldn't find a `pages` directory. Please create one under the project root\");\n}","map":{"version":3,"sources":["../../lib/find-pages-dir.ts"],"names":[],"mappings":";;;;;QAYgB,Y,GAAA,Y;;;AAZD,IAAA,GAAI,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAJ;;AACE,IAAA,KAAM,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAN;;;;;;;;AAEV,MAAM,UAAU,GAAI,CAAJ,IAA2B;MAC5C;AAJS,IAAA,GAAI,CAAA,OAAJ,CAKR,UALQ,CAKG,CALH,EAAA,GAAI,CAAA,OAAJ,CAKS,SALT,CAKmB,IALnB;;WAMJ,I;AACR,G,CAAA,OAAQ,CAAR,EAAW;WACH,K;AACR;AACF,CAPM;;QAAM,U,GAAA,U;;SASG,Y,CAAa,G,EAAqB;AAChD;AACA,MAAI,MAAM,GAbK,KAAM,CAAA,OAAN,CAaG,IAbH,CAaQ,GAbR,EAaW,OAbX,CAaf;;AACA,MAAI,UAAU,CAAC,MAAD,CAAd,EAAqB,OAAU,MAAV;AAErB,EAAA,MAAM,GAhBS,KAAM,CAAA,OAAN,CAgBD,IAhBC,CAgBI,GAhBJ,EAgBO,WAhBP,CAgBf;AACA,MAAI,UAAU,CAAC,MAAD,CAAd,EAAqB,OAAU,MAAV,CAN2B,CAQhD;;AACA,MAAI,UAAU,CApBC,KAAM,CAAA,OAAN,CAoBK,IApBL,CAoBU,GApBV,EAoBa,IApBb,EAoBmB,OApBnB,CAoBD,CAAd,EAA+C;AAC7C,UAAM,IAAI,KAAJ,CAAS,2FAAT,CAAN;AAGD;;AAED,QAAM,IAAI,KAAJ,CAAS,+EAAT,CAAN;AAGD","sourcesContent":["import fs from 'fs'\nimport path from 'path'\n\nexport const existsSync = (f: string): boolean => {\n  try {\n    fs.accessSync(f, fs.constants.F_OK)\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nexport function findPagesDir(dir: string): string {\n  // prioritize ./pages over ./src/pages\n  let curDir = path.join(dir, 'pages')\n  if (existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src/pages')\n  if (existsSync(curDir)) return curDir\n\n  // Check one level up the tree to see if the pages directory might be there\n  if (existsSync(path.join(dir, '..', 'pages'))) {\n    throw new Error(\n      '> No `pages` directory found. Did you mean to run `next` in the parent (`../`) directory?'\n    )\n  }\n\n  throw new Error(\n    \"> Couldn't find a `pages` directory. Please create one under the project root\"\n  )\n}\n"]},"metadata":{},"sourceType":"script"}