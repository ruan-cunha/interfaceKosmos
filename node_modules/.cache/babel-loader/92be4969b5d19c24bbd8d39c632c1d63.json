{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventCliSession = eventCliSession;\n\nvar _findUp = _interopRequireDefault(require(\"next/dist/compiled/find-up\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"../../shared/lib/constants\");\n\nvar _config = require(\"../../server/config\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst EVENT_VERSION = 'NEXT_CLI_SESSION_STARTED';\n\nfunction hasBabelConfig(dir) {\n  try {\n    var ref, ref1, ref2, ref3;\n\n    const noopFile = _path.default.join(dir, 'noop.js');\n\n    const res = require('next/dist/compiled/babel/core').loadPartialConfig({\n      cwd: dir,\n      filename: noopFile,\n      sourceFileName: noopFile\n    });\n\n    const isForTooling = ((ref = res.options) === null || ref === void 0 ? void 0 : (ref1 = ref.presets) === null || ref1 === void 0 ? void 0 : ref1.every(e => {\n      var ref4;\n      return (e === null || e === void 0 ? void 0 : (ref4 = e.file) === null || ref4 === void 0 ? void 0 : ref4.request) === 'next/babel';\n    })) && ((ref2 = res.options) === null || ref2 === void 0 ? void 0 : (ref3 = ref2.plugins) === null || ref3 === void 0 ? void 0 : ref3.length) === 0;\n    return res.hasFilesystemConfig() && !isForTooling;\n  } catch {\n    return false;\n  }\n}\n\nfunction getNextConfig(phase, dir) {\n  try {\n    const configurationPath = _findUp.default.sync(_constants.CONFIG_FILE, {\n      cwd: dir\n    });\n\n    if (configurationPath) {\n      // This should've already been loaded, and thus should be cached / won't\n      // be re-evaluated.\n      const configurationModule = require(configurationPath); // Re-normalize the configuration.\n\n\n      return (0, _config).normalizeConfig(phase, configurationModule.default || configurationModule);\n    }\n  } catch {// ignored\n  }\n\n  return null;\n}\n\nfunction eventCliSession(phase, dir, event) {\n  // This should be an invariant, if it fails our build tooling is broken.\n  if (typeof \"11.1.2\" !== 'string') {\n    return [];\n  }\n\n  const userConfiguration = getNextConfig(phase, dir);\n  const {\n    images,\n    i18n\n  } = userConfiguration || {};\n  var ref1;\n  const payload = {\n    nextVersion: \"11.1.2\",\n    nodeVersion: process.version,\n    cliCommand: event.cliCommand,\n    isSrcDir: event.isSrcDir,\n    hasNowJson: event.hasNowJson,\n    isCustomServer: event.isCustomServer,\n    hasNextConfig: !!userConfiguration,\n    buildTarget: (ref1 = userConfiguration === null || userConfiguration === void 0 ? void 0 : userConfiguration.target) !== null && ref1 !== void 0 ? ref1 : 'default',\n    hasWebpackConfig: typeof (userConfiguration === null || userConfiguration === void 0 ? void 0 : userConfiguration.webpack) === 'function',\n    hasBabelConfig: hasBabelConfig(dir),\n    imageEnabled: !!images,\n    basePathEnabled: !!(userConfiguration === null || userConfiguration === void 0 ? void 0 : userConfiguration.basePath),\n    i18nEnabled: !!i18n,\n    locales: (i18n === null || i18n === void 0 ? void 0 : i18n.locales) ? i18n.locales.join(',') : null,\n    localeDomainsCount: (i18n === null || i18n === void 0 ? void 0 : i18n.domains) ? i18n.domains.length : null,\n    localeDetectionEnabled: !i18n ? null : i18n.localeDetection !== false,\n    imageDomainsCount: (images === null || images === void 0 ? void 0 : images.domains) ? images.domains.length : null,\n    imageSizes: (images === null || images === void 0 ? void 0 : images.sizes) ? images.sizes.join(',') : null,\n    imageLoader: images === null || images === void 0 ? void 0 : images.loader,\n    trailingSlashEnabled: !!(userConfiguration === null || userConfiguration === void 0 ? void 0 : userConfiguration.trailingSlash),\n    reactStrictMode: !!(userConfiguration === null || userConfiguration === void 0 ? void 0 : userConfiguration.reactStrictMode),\n    webpackVersion: event.webpackVersion || null\n  };\n  return [{\n    eventName: EVENT_VERSION,\n    payload\n  }];\n}","map":{"version":3,"sources":["../../../telemetry/events/version.ts"],"names":[],"mappings":"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","sourcesContent":["import findUp from 'next/dist/compiled/find-up'\nimport path from 'path'\nimport {\n  CONFIG_FILE,\n  PHASE_DEVELOPMENT_SERVER,\n  PHASE_EXPORT,\n  PHASE_PRODUCTION_BUILD,\n} from '../../shared/lib/constants'\nimport { normalizeConfig } from '../../server/config'\n\nconst EVENT_VERSION = 'NEXT_CLI_SESSION_STARTED'\n\ntype EventCliSessionStarted = {\n  nextVersion: string\n  nodeVersion: string\n  cliCommand: string\n  isSrcDir: boolean | null\n  hasNowJson: boolean\n  isCustomServer: boolean | null\n  hasNextConfig: boolean\n  buildTarget: string\n  hasWebpackConfig: boolean\n  hasBabelConfig: boolean\n  basePathEnabled: boolean\n  i18nEnabled: boolean\n  imageEnabled: boolean\n  locales: string | null\n  localeDomainsCount: number | null\n  localeDetectionEnabled: boolean | null\n  imageDomainsCount: number | null\n  imageSizes: string | null\n  imageLoader: string | null\n  trailingSlashEnabled: boolean\n  reactStrictMode: boolean\n  webpackVersion: number | null\n}\n\nfunction hasBabelConfig(dir: string): boolean {\n  try {\n    const noopFile = path.join(dir, 'noop.js')\n    const res = require('next/dist/compiled/babel/core').loadPartialConfig({\n      cwd: dir,\n      filename: noopFile,\n      sourceFileName: noopFile,\n    }) as any\n    const isForTooling =\n      res.options?.presets?.every(\n        (e: any) => e?.file?.request === 'next/babel'\n      ) && res.options?.plugins?.length === 0\n    return res.hasFilesystemConfig() && !isForTooling\n  } catch {\n    return false\n  }\n}\n\ntype NextConfigurationPhase =\n  | typeof PHASE_DEVELOPMENT_SERVER\n  | typeof PHASE_PRODUCTION_BUILD\n  | typeof PHASE_EXPORT\n\nfunction getNextConfig(\n  phase: NextConfigurationPhase,\n  dir: string\n): { [key: string]: any } | null {\n  try {\n    const configurationPath = findUp.sync(CONFIG_FILE, {\n      cwd: dir,\n    })\n\n    if (configurationPath) {\n      // This should've already been loaded, and thus should be cached / won't\n      // be re-evaluated.\n      const configurationModule = require(configurationPath)\n\n      // Re-normalize the configuration.\n      return normalizeConfig(\n        phase,\n        configurationModule.default || configurationModule\n      )\n    }\n  } catch {\n    // ignored\n  }\n  return null\n}\n\nexport function eventCliSession(\n  phase: NextConfigurationPhase,\n  dir: string,\n  event: Omit<\n    EventCliSessionStarted,\n    | 'nextVersion'\n    | 'nodeVersion'\n    | 'hasNextConfig'\n    | 'buildTarget'\n    | 'hasWebpackConfig'\n    | 'hasBabelConfig'\n    | 'basePathEnabled'\n    | 'i18nEnabled'\n    | 'imageEnabled'\n    | 'locales'\n    | 'localeDomainsCount'\n    | 'localeDetectionEnabled'\n    | 'imageDomainsCount'\n    | 'imageSizes'\n    | 'imageLoader'\n    | 'trailingSlashEnabled'\n    | 'reactStrictMode'\n  >\n): { eventName: string; payload: EventCliSessionStarted }[] {\n  // This should be an invariant, if it fails our build tooling is broken.\n  if (typeof process.env.__NEXT_VERSION !== 'string') {\n    return []\n  }\n\n  const userConfiguration = getNextConfig(phase, dir)\n\n  const { images, i18n } = userConfiguration || {}\n\n  const payload: EventCliSessionStarted = {\n    nextVersion: process.env.__NEXT_VERSION,\n    nodeVersion: process.version,\n    cliCommand: event.cliCommand,\n    isSrcDir: event.isSrcDir,\n    hasNowJson: event.hasNowJson,\n    isCustomServer: event.isCustomServer,\n    hasNextConfig: !!userConfiguration,\n    buildTarget: userConfiguration?.target ?? 'default',\n    hasWebpackConfig: typeof userConfiguration?.webpack === 'function',\n    hasBabelConfig: hasBabelConfig(dir),\n    imageEnabled: !!images,\n    basePathEnabled: !!userConfiguration?.basePath,\n    i18nEnabled: !!i18n,\n    locales: i18n?.locales ? i18n.locales.join(',') : null,\n    localeDomainsCount: i18n?.domains ? i18n.domains.length : null,\n    localeDetectionEnabled: !i18n ? null : i18n.localeDetection !== false,\n    imageDomainsCount: images?.domains ? images.domains.length : null,\n    imageSizes: images?.sizes ? images.sizes.join(',') : null,\n    imageLoader: images?.loader,\n    trailingSlashEnabled: !!userConfiguration?.trailingSlash,\n    reactStrictMode: !!userConfiguration?.reactStrictMode,\n    webpackVersion: event.webpackVersion || null,\n  }\n  return [{ eventName: EVENT_VERSION, payload }]\n}\n"]},"metadata":{},"sourceType":"script"}