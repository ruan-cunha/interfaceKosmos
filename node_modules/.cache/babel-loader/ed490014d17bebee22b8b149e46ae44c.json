{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\public_html\\\\vamo\\\\interface2\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { firebase } from \"./initFirebase\";\nimport { useRouter } from \"next/router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst db = firebase.database();\n\nfunction Home() {\n  _s();\n\n  const [time, setTime] = useState(\"Time\");\n  const [temp, setTemp] = useState(\"Temp\");\n  const [altitude, setAltitude] = useState(\"Altitude\");\n  const [yaw, setYaw] = useState(\"Yaw\");\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        const launchRef = db.ref(\"launch\");\n        const newLaunchRef = launchRef.push();\n        newLaunchRef.set({\n          time,\n          temp,\n          altitude,\n          yaw\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inserir dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Tempo\",\n        type: \"number\",\n        value: time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Temperatura\",\n        type: \"number\",\n        value: temp,\n        onChange: e => setTemp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Altitude\",\n        type: \"number\",\n        value: altitude,\n        onChange: e => setAltitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Yaw\",\n        type: \"number\",\n        value: yaw,\n        onChange: e => setYaw(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n/**ref.on(\"value\", function(snapshot) {\n  console.log(snapshot.val());\n}, function (error) {\n  console.log(\"Error: \" + error.code);\n});**/\n\n\n_s(Home, \"8XNHTm4bhduPKVetEKzqQSa/FnA=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\n\nconst App = () => {\n  _s2();\n\n  const launchRef = db.ref(\"launch\");\n  /**launchRef.once('value',   function(snapshot) {\n    snapshot.forEach(function(childSnapshot) {\n      var childKey = childSnapshot.key;\n      var childData = childSnapshot.val();\n      console.log(childData);\n    });\n  });**/\n\n  var ref = firebase.database().ref(\"launch\");\n  const [temperatureData, setTemperatureData] = useState({});\n  const [altitudeData, setAltitudeData] = useState({});\n  const [yawData, setYawData] = useState({});\n  useEffect(() => {\n    const loadData = async () => {\n      var tempo = [];\n      var temperatura = [];\n      var altitude = [];\n      var yaw = [];\n      firebase.database().ref().child(\"launch\").on(\"value\", function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          tempo = childSnapshot.val().time;\n          temperatura = childSnapshot.val().temp;\n          altitude = childSnapshot.val().altitude;\n          const propertyValues = Object.values(tempo);\n          console.log(typeof propertyValues[0]);\n        });\n      });\n      setTemperatureData({\n        datasets: [{\n          label: 'Temperatura',\n          data: temperatura,\n          backgroundColor: 'rgba(255, 99, 132, 1)',\n          hoverBackgroundColor: \"rgba(255, 99, 132, 1)\",\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n      setAltitudeData({\n        datasets: [{\n          label: 'Altitude',\n          data: altitude,\n          backgroundColor: 'rgba(19, 240, 14, 1)',\n          hoverBackgroundColor: 'rgba(19, 240, 14, 1)',\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(19, 240, 14, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n      setYawData({\n        datasets: [{\n          label: 'Yaw',\n          data: yaw,\n          backgroundColor: 'rgba(139, 0, 249, 1)',\n          hoverBackgroundColor: 'rgba(139, 0, 249, 1)',\n          hoverBorderColor: \"black\",\n          borderColor: 'rgba(139, 0, 249, 1)',\n          borderWidth: 2\n        }],\n        labels: tempo\n      });\n    };\n\n    loadData();\n  }, []);\n  const temperatureOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"Â°C\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  const altitudeOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"m\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  const yawOptions = {\n    elements: {\n      point: {\n        radius: 1\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          callback: function (value, index, values) {\n            return value + \"\";\n          }\n        }\n      }\n    },\n    responsive: false\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: temperatureData,\n      options: temperatureOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: altitudeData,\n      options: altitudeOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      id: \"chart\",\n      width: \"1500\",\n      height: \"320\",\n      data: yawData,\n      options: yawOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(App, \"/TJ6Ds3DvFB+lolr0FXo95dI6Bw=\");\n\n_c2 = App;\n\nfunction Id() {\n  const router = useRouter;\n  console.log(router.query);\n}\n\n_c3 = Id;\nexport { Home, App };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"Id\");","map":{"version":3,"sources":["C:/xampp/public_html/vamo/interface2/src/App.js"],"names":["React","useState","useEffect","Line","firebase","useRouter","db","database","Home","time","setTime","temp","setTemp","altitude","setAltitude","yaw","setYaw","router","e","preventDefault","launchRef","ref","newLaunchRef","push","set","target","value","App","temperatureData","setTemperatureData","altitudeData","setAltitudeData","yawData","setYawData","loadData","tempo","temperatura","child","on","snapshot","forEach","childSnapshot","val","propertyValues","Object","values","console","log","datasets","label","data","backgroundColor","hoverBackgroundColor","hoverBorderColor","borderColor","borderWidth","labels","temperatureOptions","elements","point","radius","scales","y","ticks","callback","index","responsive","altitudeOptions","yawOptions","Id","query"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport { firebase } from \"./initFirebase\";\nimport { useRouter, } from \"next/router\";\n\nconst db = firebase.database();\n\nfunction Home() {\n  const [time, setTime] = useState(\"Time\");\n  const [temp, setTemp] = useState(\"Temp\");\n  const [altitude, setAltitude] = useState(\"Altitude\");\n  const [yaw, setYaw] = useState(\"Yaw\");\n  const router = useRouter();\n\n  return (\n    <main>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const launchRef = db.ref(\"launch\");\n          const newLaunchRef = launchRef.push();\n          newLaunchRef.set({\n            time,\n            temp,\n            altitude,\n            yaw,\n          });\n          \n        }}\n      >\n        <h1>Inserir dados</h1>\n        \n        <input\n          placeholder=\"Tempo\"\n          type=\"number\"\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n        />\n\n        <input\n          placeholder=\"Temperatura\"\n          type=\"number\"\n          value={temp}\n          onChange={(e) => setTemp(e.target.value)}\n        />\n\n        <input\n          placeholder=\"Altitude\"\n          type=\"number\"\n          value={altitude}\n          onChange={(e) => setAltitude(e.target.value)}\n        />\n\n        <input\n          placeholder=\"Yaw\"\n          type=\"number\"\n          value={yaw}\n          onChange={(e) => setYaw(e.target.value)}\n        />\n\n        <button type=\"submit\">Confirmar</button>\n      </form>\n    </main>\n  );\n  \n}\n\n/**ref.on(\"value\", function(snapshot) {\n  console.log(snapshot.val());\n}, function (error) {\n  console.log(\"Error: \" + error.code);\n});**/\n\nconst App = () => {\n  const launchRef = db.ref(\"launch\");\n  /**launchRef.once('value',   function(snapshot) {\n    snapshot.forEach(function(childSnapshot) {\n      var childKey = childSnapshot.key;\n      var childData = childSnapshot.val();\n      console.log(childData);\n    });\n  });**/\n  var ref = firebase.database().ref(\"launch\");\n\n\n  const [temperatureData, setTemperatureData] = useState({});\n  const [altitudeData, setAltitudeData] = useState({});\n  const [yawData, setYawData] = useState({});\n  useEffect(() => {\n    const loadData = async () => {\n\n      var tempo = [];\n      var temperatura = [];\n      var altitude = [];\n      var yaw = [];\n\n      firebase.database().ref().child(\"launch\").on(\"value\", function (snapshot) {\n        snapshot.forEach(function(childSnapshot) {\n         tempo = childSnapshot.val().time;\n         temperatura =childSnapshot.val().temp;\n         altitude =childSnapshot.val().altitude;\n         const propertyValues = Object.values(tempo);\n\n        console.log(typeof(propertyValues[0]));\n         \n        });\n      });\n      \n\n      setTemperatureData({\n        datasets: [\n          {\n            label: 'Temperatura',\n            data: temperatura,\n            backgroundColor: 'rgba(255, 99, 132, 1)',\n            hoverBackgroundColor: \"rgba(255, 99, 132, 1)\",\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });\n      setAltitudeData({\n        datasets: [\n          {\n            label: 'Altitude',\n            data: altitude,\n            backgroundColor: 'rgba(19, 240, 14, 1)',\n            hoverBackgroundColor: 'rgba(19, 240, 14, 1)',\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(19, 240, 14, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });\n      setYawData({\n        datasets: [\n          {\n            label: 'Yaw',\n            data: yaw,\n            backgroundColor: 'rgba(139, 0, 249, 1)',\n            hoverBackgroundColor: 'rgba(139, 0, 249, 1)',\n            hoverBorderColor: \"black\",\n            borderColor: 'rgba(139, 0, 249, 1)',\n            borderWidth: 2\n          }\n        ], \n        labels: tempo\n      });     \n    }\n    \n    loadData();\n    \n  }, [])\n  \n  const temperatureOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"Â°C\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  const altitudeOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"m\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  const yawOptions = {\n    elements: {\n        point:{\n            radius: 1\n        }\n    },\n    scales: {\n      y: {\n          ticks: {\n              callback: function(value, index, values) {\n                  return value + \"\";\n              }\n          },\n      }\n    },\n    responsive:false\n  }\n  \n  return <>\n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={temperatureData} options={temperatureOptions}/> \n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={altitudeData} options={altitudeOptions}/> \n    <Line id=\"chart\" width=\"1500\" height=\"320\" data={yawData} options={yawOptions}/> \n  </>\n}\n\nfunction Id(){\n  const router = useRouter;\n  console.log(router.query);\n}\n\nexport {Home, App};"]},"metadata":{},"sourceType":"module"}