{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.execOnce = execOnce;\nexports.getLocationOrigin = getLocationOrigin;\nexports.getURL = getURL;\nexports.getDisplayName = getDisplayName;\nexports.isResSent = isResSent;\nexports.normalizeRepeatedSlashes = normalizeRepeatedSlashes;\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.formatWithValidation = formatWithValidation;\nexports.ST = exports.SP = exports.HtmlContext = exports.urlObjectKeys = void 0;\n\nvar _formatUrl = require(\"./router/utils/format-url\");\n\nvar _react = require(\"react\");\n\nfunction execOnce(fn) {\n  let used = false;\n  let result;\n  return (...args) => {\n    if (!used) {\n      used = true;\n      result = fn(...args);\n    }\n\n    return result;\n  };\n}\n\nfunction getLocationOrigin() {\n  const {\n    protocol,\n    hostname,\n    port\n  } = window.location;\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\n\nfunction getURL() {\n  const {\n    href\n  } = window.location;\n  const origin = getLocationOrigin();\n  return href.substring(origin.length);\n}\n\nfunction getDisplayName(Component) {\n  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\n\nfunction isResSent(res) {\n  return res.finished || res.headersSent;\n}\n\nfunction normalizeRepeatedSlashes(url) {\n  const urlParts = url.split('?');\n  const urlNoQuery = urlParts[0];\n  return urlNoQuery // first we replace any non-encoded backslashes with forward\n  // then normalize repeated forward slashes\n  .replace(/\\\\/g, '/').replace(/\\/\\/+/g, '/') + (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '');\n}\n\nasync function loadGetInitialProps(App, ctx) {\n  if (process.env.NODE_ENV !== 'production') {\n    var ref;\n\n    if ((ref = App.prototype) === null || ref === void 0 ? void 0 : ref.getInitialProps) {\n      const message = `\"${getDisplayName(App)}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`;\n      throw new Error(message);\n    }\n  } // when called from _app `ctx` is nested in `ctx`\n\n\n  const res = ctx.res || ctx.ctx && ctx.ctx.res;\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n      };\n    }\n\n    return {};\n  }\n\n  const props = await App.getInitialProps(ctx);\n\n  if (res && isResSent(res)) {\n    return props;\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(App)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n    throw new Error(message);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(`${getDisplayName(App)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`);\n    }\n  }\n\n  return props;\n}\n\nconst urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];\nexports.urlObjectKeys = urlObjectKeys;\n\nfunction formatWithValidation(url) {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach(key => {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n        }\n      });\n    }\n  }\n\n  return (0, _formatUrl).formatUrl(url);\n}\n\nconst SP = typeof performance !== 'undefined';\nexports.SP = SP;\nconst ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';\nexports.ST = ST;\n\nclass DecodeError extends Error {}\n\nexports.DecodeError = DecodeError;\nconst HtmlContext = (0, _react).createContext(null);\nexports.HtmlContext = HtmlContext;\n\nif (process.env.NODE_ENV !== 'production') {\n  HtmlContext.displayName = 'HtmlContext';\n}","map":{"version":3,"sources":["../../../shared/lib/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { formatUrl } from './router/utils/format-url'\nimport type { BuildManifest } from '../../server/get-page-files'\nimport type { ComponentType } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from 'next/types'\nimport type { UrlObject } from 'url'\nimport { createContext } from 'react'\n\nexport type NextComponentType<\n  C extends BaseContext = NextPageContext,\n  IP = {},\n  P = {}\n> = ComponentType<P> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param ctx Context of `page`\n   */\n  getInitialProps?(context: C): IP | Promise<IP>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType = NextComponentType<\n  AppContextType,\n  AppInitialProps,\n  AppPropsType\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n} & (\n  | {\n      label: 'web-vital'\n      name: 'FCP' | 'LCP' | 'CLS' | 'FID' | 'TTFB'\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => RenderPageResult | Promise<RenderPageResult>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & { statusCode?: number }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<R extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: R\n}\n\nexport type AppInitialProps = {\n  pageProps: any\n}\n\nexport type AppPropsType<\n  R extends NextRouter = NextRouter,\n  P = {}\n> = AppInitialProps & {\n  Component: NextComponentType<NextPageContext, any, P>\n  router: R\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | React.ReactFragment\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\nexport type HtmlProps = {\n  __NEXT_DATA__: NEXT_DATA\n  dangerousAsPath: string\n  docComponentsRendered: {\n    Html?: boolean\n    Main?: boolean\n    Head?: boolean\n    NextScript?: boolean\n  }\n  buildManifest: BuildManifest\n  ampPath: string\n  inAmpMode: boolean\n  hybridAmp: boolean\n  isDevelopment: boolean\n  dynamicImports: string[]\n  assetPrefix?: string\n  canonicalBase: string\n  headTags: any[]\n  unstable_runtimeJS?: false\n  unstable_JsPreload?: false\n  devOnlyCacheBusterQueryString: string\n  scriptLoader: { afterInteractive?: string[]; beforeInteractive?: any[] }\n  locale?: string\n  disableOptimizedLoading?: boolean\n  styles?: React.ReactElement[] | React.ReactFragment\n  head?: Array<JSX.Element | null>\n}\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: {\n    [key: string]: string | string[]\n  }\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: {\n    [key: string]: string\n  }\n\n  body: any\n\n  env: Env\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<T = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<T>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<T>\n  status: (statusCode: number) => NextApiResponse<T>\n  redirect(url: string): NextApiResponse<T>\n  redirect(status: number, url: string): NextApiResponse<T>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n    }\n  ) => NextApiResponse<T>\n  clearPreviewData: () => NextApiResponse<T>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => void | Promise<void>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {}\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  typeof performance.mark === 'function' &&\n  typeof performance.measure === 'function'\n\nexport class DecodeError extends Error {}\n\nexport const HtmlContext = createContext<HtmlProps>(null as any)\nif (process.env.NODE_ENV !== 'production') {\n  HtmlContext.displayName = 'HtmlContext'\n}\n"]},"metadata":{},"sourceType":"script"}