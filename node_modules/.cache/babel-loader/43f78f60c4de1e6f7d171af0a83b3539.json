{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serveStatic = serveStatic;\nexports.getContentType = getContentType;\nexports.getExtension = getExtension;\n\nvar _send = _interopRequireDefault(require(\"next/dist/compiled/send\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction serveStatic(req, res, path) {\n  return new Promise((resolve, reject) => {\n    (0, _send).default(req, path).on('directory', () => {\n      // We don't allow directories to be read.\n      const err = new Error('No directory access');\n      err.code = 'ENOENT';\n      reject(err);\n    }).on('error', reject).pipe(res).on('finish', resolve);\n  });\n}\n\nfunction getContentType(extWithoutDot) {\n  const {\n    mime\n  } = _send.default;\n\n  if ('getType' in mime) {\n    // 2.0\n    return mime.getType(extWithoutDot);\n  } // 1.0\n\n\n  return mime.lookup(extWithoutDot);\n}\n\nfunction getExtension(contentType) {\n  const {\n    mime\n  } = _send.default;\n\n  if ('getExtension' in mime) {\n    // 2.0\n    return mime.getExtension(contentType);\n  } // 1.0\n\n\n  return mime.extension(contentType);\n}","map":{"version":3,"sources":["../../server/serve-static.ts"],"names":[],"mappings":";;;;;QAGgB,W,GAAA,W;QAmBA,c,GAAA,c;QAUA,Y,GAAA,Y;;AA/BC,IAAA,KAAyB,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAzB;;;;;;;;SAED,W,CACd,G,EACA,G,EACA,I,EACe;SACR,IAAI,OAAJ,CAAW,CAAE,OAAF,EAAW,MAAX,KAAsB;QAPzB,K,EAAyB,O,CAQjC,G,EAAK,I,EACP,E,CAAE,W,EAAY,MAAQ;AACrB;AACA,YAAM,GAAG,GAAQ,IAAI,KAAJ,CAAS,qBAAT,CAAjB;AACA,MAAA,GAAG,CAAC,IAAJ,GAAQ,QAAR;AACA,MAAA,MAAM,CAAC,GAAD,CAAN;AACD,K,EACA,E,CAAE,O,EAAU,M,EACZ,I,CAAK,G,EACL,E,CAAE,Q,EAAW,O;AACjB,GAXM,C;AAYR;;SAEe,c,CAAe,a,EAAsC;AACnE,QAAK;AAAG,IAAA;AAAH,MAtBU,KAAyB,CAAA,OAsBxC;;AACA,MAAE,aAAe,IAAjB,EAAuB;AACrB;WACO,IAAI,CAAC,OAAL,CAAa,aAAb,C;AACR,GALkE,CAMnE;;;SACQ,IAAI,CAAS,MAAb,CAAoB,aAApB,C;AACT;;SAEe,Y,CAAa,W,EAAoC;AAC/D,QAAK;AAAG,IAAA;AAAH,MAhCU,KAAyB,CAAA,OAgCxC;;AACA,MAAE,kBAAoB,IAAtB,EAA4B;AAC1B;WACO,IAAI,CAAC,YAAL,CAAkB,WAAlB,C;AACR,GAL8D,CAM/D;;;SACQ,IAAI,CAAS,SAAb,CAAuB,WAAvB,C;AACT","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport send from 'next/dist/compiled/send'\n\nexport function serveStatic(\n  req: IncomingMessage,\n  res: ServerResponse,\n  path: string\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    send(req, path)\n      .on('directory', () => {\n        // We don't allow directories to be read.\n        const err: any = new Error('No directory access')\n        err.code = 'ENOENT'\n        reject(err)\n      })\n      .on('error', reject)\n      .pipe(res)\n      .on('finish', resolve)\n  })\n}\n\nexport function getContentType(extWithoutDot: string): string | null {\n  const { mime } = send\n  if ('getType' in mime) {\n    // 2.0\n    return mime.getType(extWithoutDot)\n  }\n  // 1.0\n  return (mime as any).lookup(extWithoutDot)\n}\n\nexport function getExtension(contentType: string): string | null {\n  const { mime } = send\n  if ('getExtension' in mime) {\n    // 2.0\n    return mime.getExtension(contentType)\n  }\n  // 1.0\n  return (mime as any).extension(contentType)\n}\n"]},"metadata":{},"sourceType":"script"}