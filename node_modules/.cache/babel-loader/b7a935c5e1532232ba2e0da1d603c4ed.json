{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.install = install;\nexports.shouldLoadWithWebpack5 = shouldLoadWithWebpack5;\n\nvar _env = require(\"@next/env\");\n\nvar _findUp = _interopRequireDefault(require(\"next/dist/compiled/find-up\"));\n\nvar _webpack = require(\"next/dist/compiled/webpack/webpack\");\n\nvar _constants = require(\"../shared/lib/constants\");\n\nvar _configShared = require(\"./config-shared\");\n\nvar Log = _interopRequireWildcard(require(\"../build/output/log\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nlet installed = false;\n\nfunction install(useWebpack5) {\n  if (installed) {\n    return;\n  }\n\n  installed = true;\n  (0, _webpack).init(useWebpack5); // hook the Node.js require so that webpack requires are\n  // routed to the bundled and now initialized webpack version\n\n  require('../build/webpack/require-hook');\n}\n\nasync function shouldLoadWithWebpack5(phase, dir) {\n  var ref;\n  await (0, _env).loadEnvConfig(dir, phase === _constants.PHASE_DEVELOPMENT_SERVER, Log);\n  const path = await (0, _findUp).default(_constants.CONFIG_FILE, {\n    cwd: dir\n  });\n\n  if (Number(process.env.NEXT_PRIVATE_TEST_WEBPACK4_MODE) > 0) {\n    return {\n      enabled: false,\n      reason: 'test-mode'\n    };\n  } // Use webpack 5 by default in apps that do not have next.config.js\n\n\n  if (!(path === null || path === void 0 ? void 0 : path.length)) {\n    return {\n      enabled: true,\n      reason: 'default'\n    };\n  } // Default to webpack 4 for backwards compatibility on boot:\n\n\n  install(false);\n\n  const userConfigModule = require(path);\n\n  const userConfig = (0, _configShared).normalizeConfig(phase, userConfigModule.default || userConfigModule);\n\n  if ((ref = userConfig.future) === null || ref === void 0 ? void 0 : ref.webpack5) {\n    return {\n      enabled: false,\n      reason: 'future-flag'\n    };\n  }\n\n  if (userConfig.webpack5 === false) {\n    return {\n      enabled: false,\n      reason: 'flag-disabled'\n    };\n  }\n\n  return {\n    enabled: true,\n    reason: 'default'\n  };\n}","map":{"version":3,"sources":["../../server/config-utils-worker.ts"],"names":[],"mappings":";;;;;QASgB,O,GAAA,O;QAwBM,sB,GAAA,sB;;AAjCQ,IAAA,IAAW,GAAA,OAAA,CAAA,WAAA,CAAX;;AACX,IAAA,OAA4B,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAA5B;;AACiB,IAAA,QAAoC,GAAA,OAAA,CAAA,oCAAA,CAApC;;AACkB,IAAA,UAAyB,GAAA,OAAA,CAAA,yBAAA,CAAzB;;AACV,IAAA,aAAiB,GAAA,OAAA,CAAA,iBAAA,CAAjB;;AAChC,IAAA,GAAG,GAAA,uBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAI,SAAS,GAAY,KAAzB;;SAEgB,O,CAAQ,W,EAAsB;AAC5C,MAAI,SAAJ,EAAe;;AAEd;;AACD,EAAA,SAAS,GAAG,IAAZ;MAXkC,Q,EAAoC,I,CAa1D,W,EANgC,CAQ5C;AACA;;AACA,EAAA,OAAO,CAAA,+BAAA,CAAP;AACD;;eAaqB,sB,CACpB,K,EACA,G,EACsB;MA+BlB,G;YAnEwB,I,EAAW,a,CAqCnB,G,EAAK,KAAK,KAlCsB,UAAyB,CAAA,wB,EAEnE,G;AAkCV,QAAM,IAAI,GAAA,MAAA,CAAA,GAtCO,OAsCP,EAtCmC,OAsCnC,CApC0C,UAAyB,CAAA,WAoCnE,EApCmE;AAqC3E,IAAA,GAAG,EAAE;AArCsE,GAoCnE,CAAV;;AAIA,MAAI,MAAM,CAAC,OAAO,CAAC,GAAR,CAAY,+BAAb,CAAN,GAAsD,CAA1D,EAA6D;;AAEzD,MAAA,OAAO,EAAE,K;AACT,MAAA,MAAM,EAAA;;AAET,GAZqB,CActB;;;AACA,MAAE,EAAG,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAJ,CAAA,GAAY,KAAZ,CAAA,GAAA,IAAI,CAAE,MAAT,CAAF,EAAmB;;AAEf,MAAA,OAAO,EAAE,I;AACT,MAAA,MAAM,EAAA;;AAET,GApBqB,CAsBtB;;;AACA,EAAA,OAAO,CAAC,KAAD,CAAP;;AAEA,QAAM,gBAAgB,GAAG,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAM,UAAU,GAAA,CAAA,GA1D0B,aA0D1B,EA1D2C,eA0D3C,CACd,KADc,EAEd,gBAAgB,CAAC,OAAjB,IAA4B,gBAFd,CAAhB;;AAKA,MAAE,CAAE,GAAiB,GAAjB,UAAU,CAAC,MAAb,MAAmB,IAAnB,IAAE,GAAiB,KAAA,KAAjB,CAAF,GAA6B,KAA3B,CAAF,GAAE,GAAiB,CAAE,QAAvB,EAAiC;;AAE7B,MAAA,OAAO,EAAE,K;AACT,MAAA,MAAM,EAAA;;AAET;;AACD,MAAI,UAAU,CAAC,QAAX,KAAwB,KAA5B,EAAmC;;AAE/B,MAAA,OAAO,EAAE,K;AACT,MAAA,MAAM,EAAA;;AAET;;;AAGC,IAAA,OAAO,EAAE,I;AACT,IAAA,MAAM,EAAA;;AAET","sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport findUp from 'next/dist/compiled/find-up'\nimport { init as initWebpack } from 'next/dist/compiled/webpack/webpack'\nimport { CONFIG_FILE, PHASE_DEVELOPMENT_SERVER } from '../shared/lib/constants'\nimport { NextConfig, normalizeConfig } from './config-shared'\nimport * as Log from '../build/output/log'\n\nlet installed: boolean = false\n\nexport function install(useWebpack5: boolean) {\n  if (installed) {\n    return\n  }\n  installed = true\n\n  initWebpack(useWebpack5)\n\n  // hook the Node.js require so that webpack requires are\n  // routed to the bundled and now initialized webpack version\n  require('../build/webpack/require-hook')\n}\n\nexport type CheckReasons =\n  | 'test-mode'\n  | 'default'\n  | 'flag-disabled'\n  | 'future-flag'\n\nexport type CheckResult = {\n  enabled: boolean\n  reason: CheckReasons\n}\n\nexport async function shouldLoadWithWebpack5(\n  phase: string,\n  dir: string\n): Promise<CheckResult> {\n  await loadEnvConfig(dir, phase === PHASE_DEVELOPMENT_SERVER, Log)\n\n  const path = await findUp(CONFIG_FILE, {\n    cwd: dir,\n  })\n\n  if (Number(process.env.NEXT_PRIVATE_TEST_WEBPACK4_MODE) > 0) {\n    return {\n      enabled: false,\n      reason: 'test-mode',\n    }\n  }\n\n  // Use webpack 5 by default in apps that do not have next.config.js\n  if (!path?.length) {\n    return {\n      enabled: true,\n      reason: 'default',\n    }\n  }\n\n  // Default to webpack 4 for backwards compatibility on boot:\n  install(false)\n\n  const userConfigModule = require(path)\n  const userConfig: Partial<NextConfig> = normalizeConfig(\n    phase,\n    userConfigModule.default || userConfigModule\n  )\n\n  if (userConfig.future?.webpack5) {\n    return {\n      enabled: false,\n      reason: 'future-flag',\n    }\n  }\n  if (userConfig.webpack5 === false) {\n    return {\n      enabled: false,\n      reason: 'flag-disabled',\n    }\n  }\n\n  return {\n    enabled: true,\n    reason: 'default',\n  }\n}\n"]},"metadata":{},"sourceType":"script"}