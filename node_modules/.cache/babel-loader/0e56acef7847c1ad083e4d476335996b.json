{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _shared = require(\"../shared\");\n\nconst TRACE_EVENT_ACCESSLIST = new Map(Object.entries({\n  'webpack-invalidated': 'WEBPACK_INVALIDATED'\n}));\n\nconst reportToTelemetry = (spanName, duration) => {\n  const eventName = TRACE_EVENT_ACCESSLIST.get(spanName);\n\n  if (!eventName) {\n    return;\n  }\n\n  const telemetry = _shared.traceGlobals.get('telemetry');\n\n  if (!telemetry) {\n    return;\n  }\n\n  telemetry.record({\n    eventName,\n    payload: {\n      durationInMicroseconds: duration\n    }\n  });\n};\n\nvar _default = {\n  flushAll: () => {},\n  report: reportToTelemetry\n};\nexports.default = _default;","map":{"version":3,"sources":["../../../../telemetry/trace/report/to-telemetry.ts"],"names":[],"mappings":";;;;;;;AAA6B,IAAA,OAAW,GAAA,OAAA,CAAA,WAAA,CAAX;;AAE7B,MAAM,sBAAsB,GAAG,IAAI,GAAJ,CAC7B,MAAM,CAAC,OAAP,CAAc;AACZ,yBAAqB;AADT,CAAd,CAD6B,CAA/B;;AAMA,MAAM,iBAAiB,GAAA,CAAI,QAAJ,EAAsB,QAAtB,KAA2C;AAChE,QAAM,SAAS,GAAG,sBAAsB,CAAC,GAAvB,CAA2B,QAA3B,CAAlB;;AACA,MAAE,CAAG,SAAL,EAAgB;;AAEf;;AACD,QAAM,SAAS,GAbY,OAAW,CAAA,YAAX,CAaI,GAbJ,CAaO,WAbP,CAa3B;;AACA,MAAE,CAAG,SAAL,EAAgB;;AAEf;;AAED,EAAA,SAAS,CAAC,MAAV,CAAgB;AACd,IAAA,SADc;AAEd,IAAA,OAAO,EAAA;AACL,MAAA,sBAAsB,EAAE;AADnB;AAFO,GAAhB;AAMD,CAhBD;;;AAmBE,EAAA,QAAQ,EAAA,MAAQ,CAAE,C;AAClB,EAAA,MAAM,EAAE","sourcesContent":["import { traceGlobals } from '../shared'\n\nconst TRACE_EVENT_ACCESSLIST = new Map(\n  Object.entries({\n    'webpack-invalidated': 'WEBPACK_INVALIDATED',\n  })\n)\n\nconst reportToTelemetry = (spanName: string, duration: number) => {\n  const eventName = TRACE_EVENT_ACCESSLIST.get(spanName)\n  if (!eventName) {\n    return\n  }\n  const telemetry = traceGlobals.get('telemetry')\n  if (!telemetry) {\n    return\n  }\n\n  telemetry.record({\n    eventName,\n    payload: {\n      durationInMicroseconds: duration,\n    },\n  })\n}\n\nexport default {\n  flushAll: () => {},\n  report: reportToTelemetry,\n}\n"]},"metadata":{},"sourceType":"script"}