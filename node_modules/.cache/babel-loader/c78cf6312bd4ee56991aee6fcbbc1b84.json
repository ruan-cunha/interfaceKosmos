{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.parseStack = void 0;\n\nvar stacktrace_parser_1 = require(\"stacktrace-parser\");\n\nvar regexNextStatic = /\\/_next(\\/static\\/.+)/g;\n\nfunction parseStack(stack) {\n  var frames = stacktrace_parser_1.parse(stack);\n  return frames.map(function (frame) {\n    var _a, _b;\n\n    try {\n      var url = new URL(frame.file);\n      var res = regexNextStatic.exec(url.pathname);\n\n      if (res) {\n        var distDir = (_b = (_a = process.env.__NEXT_DIST_DIR) === null || _a === void 0 ? void 0 : _a.replace(/\\\\/g, '/')) === null || _b === void 0 ? void 0 : _b.replace(/\\/$/, '');\n\n        if (distDir) {\n          frame.file = 'file://' + distDir.concat(res.pop());\n        }\n      }\n    } catch (_c) {}\n\n    return frame;\n  });\n}\n\nexports.parseStack = parseStack;","map":{"version":3,"sources":["../../../src/internal/helpers/parseStack.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAM,eAAe,GAAG,wBAAxB;;AAEA,SAAgB,UAAhB,CAA2B,KAA3B,EAAwC;AACtC,MAAM,MAAM,GAAG,mBAAA,CAAA,KAAA,CAAM,KAAN,CAAf;AACA,SAAO,MAAM,CAAC,GAAP,CAAW,UAAC,KAAD,EAAM;;;AACtB,QAAI;AACF,UAAM,GAAG,GAAG,IAAI,GAAJ,CAAQ,KAAK,CAAC,IAAd,CAAZ;AACA,UAAM,GAAG,GAAG,eAAe,CAAC,IAAhB,CAAqB,GAAG,CAAC,QAAzB,CAAZ;;AACA,UAAI,GAAJ,EAAS;AACP,YAAM,OAAO,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,MAA2B,IAA3B,IAA2B,EAAA,KAAA,KAAA,CAA3B,GAA2B,KAAA,CAA3B,GAA2B,EAAA,CACvC,OADuC,CAC/B,KAD+B,EACxB,GADwB,CAA3B,MACO,IADP,IACO,EAAA,KAAA,KAAA,CADP,GACO,KAAA,CADP,GACO,EAAA,CACnB,OADmB,CACX,KADW,EACJ,EADI,CADvB;;AAGA,YAAI,OAAJ,EAAa;AACX,UAAA,KAAK,CAAC,IAAN,GAAa,YAAY,OAAO,CAAC,MAAR,CAAe,GAAG,CAAC,GAAJ,EAAf,CAAzB;AACD;AACF;AACF,KAXD,CAWE,OAAA,EAAA,EAAM,CAAE;;AACV,WAAO,KAAP;AACD,GAdM,CAAP;AAeD;;AAjBD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.parseStack = void 0;\nvar stacktrace_parser_1 = require(\"stacktrace-parser\");\nvar regexNextStatic = /\\/_next(\\/static\\/.+)/g;\nfunction parseStack(stack) {\n    var frames = stacktrace_parser_1.parse(stack);\n    return frames.map(function (frame) {\n        var _a, _b;\n        try {\n            var url = new URL(frame.file);\n            var res = regexNextStatic.exec(url.pathname);\n            if (res) {\n                var distDir = (_b = (_a = process.env.__NEXT_DIST_DIR) === null || _a === void 0 ? void 0 : _a.replace(/\\\\/g, '/')) === null || _b === void 0 ? void 0 : _b.replace(/\\/$/, '');\n                if (distDir) {\n                    frame.file = 'file://' + distDir.concat(res.pop());\n                }\n            }\n        }\n        catch (_c) { }\n        return frame;\n    });\n}\nexports.parseStack = parseStack;\n//# sourceMappingURL=parseStack.js.map"]},"metadata":{},"sourceType":"script"}