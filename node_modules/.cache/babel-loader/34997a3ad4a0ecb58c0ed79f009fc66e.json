{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectLocaleCookie = detectLocaleCookie;\n\nfunction detectLocaleCookie(req, locales) {\n  const {\n    NEXT_LOCALE\n  } = req.cookies || {};\n  return NEXT_LOCALE ? locales.find(locale => NEXT_LOCALE.toLowerCase() === locale.toLowerCase()) : undefined;\n}","map":{"version":3,"sources":["../../../../shared/lib/i18n/detect-locale-cookie.ts"],"names":[],"mappings":";;;;;QAEgB,kB,GAAA,kB;;SAAA,kB,CAAmB,G,EAAsB,O,EAAmB;AAC1E,QAAK;AAAG,IAAA;AAAH,MAAoB,GAAG,CAAS,OAAZ,IAAmB,EAA5C;SACO,WAAW,GACd,OAAO,CAAC,IAAR,CACG,MADS,IACU,WAAW,CAAC,WAAZ,OAA8B,MAAM,CAAC,WAAP,EADpD,CADc,GAId,S;AACL","sourcesContent":["import { IncomingMessage } from 'http'\n\nexport function detectLocaleCookie(req: IncomingMessage, locales: string[]) {\n  const { NEXT_LOCALE } = (req as any).cookies || {}\n  return NEXT_LOCALE\n    ? locales.find(\n        (locale: string) => NEXT_LOCALE.toLowerCase() === locale.toLowerCase()\n      )\n    : undefined\n}\n"]},"metadata":{},"sourceType":"script"}