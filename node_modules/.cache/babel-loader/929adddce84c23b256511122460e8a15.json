{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apiResolver = apiResolver;\nexports.parseBody = parseBody;\nexports.getCookieParser = getCookieParser;\nexports.sendStatusCode = sendStatusCode;\nexports.redirect = redirect;\nexports.sendData = sendData;\nexports.sendJson = sendJson;\nexports.tryGetPreviewData = tryGetPreviewData;\nexports.sendError = sendError;\nexports.setLazyProp = setLazyProp;\nexports.SYMBOL_PREVIEW_DATA = void 0;\n\nvar _contentType = require(\"next/dist/compiled/content-type\");\n\nvar _rawBody = _interopRequireDefault(require(\"raw-body\"));\n\nvar _stream = require(\"stream\");\n\nvar _utils = require(\"../shared/lib/utils\");\n\nvar _cryptoUtils = require(\"./crypto-utils\");\n\nvar _loadComponents = require(\"./load-components\");\n\nvar _sendPayload = require(\"./send-payload\");\n\nvar _etag = _interopRequireDefault(require(\"etag\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nasync function apiResolver(req, res, query, resolverModule, apiContext, propagateError, dev, page) {\n  const apiReq = req;\n  const apiRes = res;\n\n  try {\n    var ref, ref1;\n\n    if (!resolverModule) {\n      res.statusCode = 404;\n      res.end('Not Found');\n      return;\n    }\n\n    const config = resolverModule.config || {};\n    const bodyParser = ((ref = config.api) === null || ref === void 0 ? void 0 : ref.bodyParser) !== false;\n    const externalResolver = ((ref1 = config.api) === null || ref1 === void 0 ? void 0 : ref1.externalResolver) || false; // Parsing of cookies\n\n    setLazyProp({\n      req: apiReq\n    }, 'cookies', getCookieParser(req.headers)); // Parsing query string\n\n    apiReq.query = query; // Parsing preview data\n\n    setLazyProp({\n      req: apiReq\n    }, 'previewData', () => tryGetPreviewData(req, res, apiContext)); // Checking if preview mode is enabled\n\n    setLazyProp({\n      req: apiReq\n    }, 'preview', () => apiReq.previewData !== false ? true : undefined); // Parsing of body\n\n    if (bodyParser && !apiReq.body) {\n      apiReq.body = await parseBody(apiReq, config.api && config.api.bodyParser && config.api.bodyParser.sizeLimit ? config.api.bodyParser.sizeLimit : '1mb');\n    }\n\n    let contentLength = 0;\n    const writeData = apiRes.write;\n    const endResponse = apiRes.end;\n\n    apiRes.write = (...args) => {\n      contentLength += Buffer.byteLength(args[0]);\n      return writeData.apply(apiRes, args);\n    };\n\n    apiRes.end = (...args) => {\n      if (args.length && typeof args[0] !== 'function') {\n        contentLength += Buffer.byteLength(args[0]);\n      }\n\n      if (contentLength >= 4 * 1024 * 1024) {\n        console.warn(`API response for ${req.url} exceeds 4MB. This will cause the request to fail in a future version. https://nextjs.org/docs/messages/api-routes-body-size-limit`);\n      }\n\n      endResponse.apply(apiRes, args);\n    };\n\n    apiRes.status = statusCode => sendStatusCode(apiRes, statusCode);\n\n    apiRes.send = data => sendData(apiReq, apiRes, data);\n\n    apiRes.json = data => sendJson(apiRes, data);\n\n    apiRes.redirect = (statusOrUrl, url) => redirect(apiRes, statusOrUrl, url);\n\n    apiRes.setPreviewData = (data, options = {}) => setPreviewData(apiRes, data, Object.assign({}, apiContext, options));\n\n    apiRes.clearPreviewData = () => clearPreviewData(apiRes);\n\n    const resolver = (0, _loadComponents).interopDefault(resolverModule);\n    let wasPiped = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      // listen for pipe event and don't show resolve warning\n      res.once('pipe', () => wasPiped = true);\n    } // Call API route method\n\n\n    await resolver(req, res);\n\n    if (process.env.NODE_ENV !== 'production' && !externalResolver && !(0, _utils).isResSent(res) && !wasPiped) {\n      console.warn(`API resolved without sending a response for ${req.url}, this may result in stalled requests.`);\n    }\n  } catch (err) {\n    if (err instanceof ApiError) {\n      sendError(apiRes, err.statusCode, err.message);\n    } else {\n      if (dev) {\n        if (err) {\n          err.page = page;\n        }\n\n        throw err;\n      }\n\n      console.error(err);\n\n      if (propagateError) {\n        throw err;\n      }\n\n      sendError(apiRes, 500, 'Internal Server Error');\n    }\n  }\n}\n\nasync function parseBody(req, limit) {\n  let contentType;\n\n  try {\n    contentType = (0, _contentType).parse(req.headers['content-type'] || 'text/plain');\n  } catch {\n    contentType = (0, _contentType).parse('text/plain');\n  }\n\n  const {\n    type,\n    parameters\n  } = contentType;\n  const encoding = parameters.charset || 'utf-8';\n  let buffer;\n\n  try {\n    buffer = await (0, _rawBody).default(req, {\n      encoding,\n      limit\n    });\n  } catch (e) {\n    if (e.type === 'entity.too.large') {\n      throw new ApiError(413, `Body exceeded ${limit} limit`);\n    } else {\n      throw new ApiError(400, 'Invalid body');\n    }\n  }\n\n  const body = buffer.toString();\n\n  if (type === 'application/json' || type === 'application/ld+json') {\n    return parseJson(body);\n  } else if (type === 'application/x-www-form-urlencoded') {\n    const qs = require('querystring');\n\n    return qs.decode(body);\n  } else {\n    return body;\n  }\n}\n/**\n * Parse `JSON` and handles invalid `JSON` strings\n * @param str `JSON` string\n */\n\n\nfunction parseJson(str) {\n  if (str.length === 0) {\n    // special-case empty json body, as it's a common client-side mistake\n    return {};\n  }\n\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    throw new ApiError(400, 'Invalid JSON');\n  }\n}\n\nfunction getCookieParser(headers) {\n  return function parseCookie() {\n    const header = headers.cookie;\n\n    if (!header) {\n      return {};\n    }\n\n    const {\n      parse: parseCookieFn\n    } = require('next/dist/compiled/cookie');\n\n    return parseCookieFn(Array.isArray(header) ? header.join(';') : header);\n  };\n}\n\nfunction sendStatusCode(res, statusCode) {\n  res.statusCode = statusCode;\n  return res;\n}\n\nfunction redirect(res, statusOrUrl, url) {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl;\n    statusOrUrl = 307;\n  }\n\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n  }\n\n  res.writeHead(statusOrUrl, {\n    Location: url\n  });\n  res.write(url);\n  res.end();\n  return res;\n}\n\nfunction sendData(req, res, body) {\n  if (body === null || body === undefined) {\n    res.end();\n    return;\n  } // strip irrelevant headers/body\n\n\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    res.removeHeader('Content-Type');\n    res.removeHeader('Content-Length');\n    res.removeHeader('Transfer-Encoding');\n\n    if (process.env.NODE_ENV === 'development' && body) {\n      console.warn(`A body was attempted to be set with a 204 statusCode for ${req.url}, this is invalid and the body was ignored.\\n` + `See more info here https://nextjs.org/docs/messages/invalid-api-status-body`);\n    }\n\n    res.end();\n    return;\n  }\n\n  const contentType = res.getHeader('Content-Type');\n\n  if (body instanceof _stream.Stream) {\n    if (!contentType) {\n      res.setHeader('Content-Type', 'application/octet-stream');\n    }\n\n    body.pipe(res);\n    return;\n  }\n\n  const isJSONLike = ['object', 'number', 'boolean'].includes(typeof body);\n  const stringifiedBody = isJSONLike ? JSON.stringify(body) : body;\n  const etag = (0, _etag).default(stringifiedBody);\n\n  if ((0, _sendPayload).sendEtagResponse(req, res, etag)) {\n    return;\n  }\n\n  if (Buffer.isBuffer(body)) {\n    if (!contentType) {\n      res.setHeader('Content-Type', 'application/octet-stream');\n    }\n\n    res.setHeader('Content-Length', body.length);\n    res.end(body);\n    return;\n  }\n\n  if (isJSONLike) {\n    res.setHeader('Content-Type', 'application/json; charset=utf-8');\n  }\n\n  res.setHeader('Content-Length', Buffer.byteLength(stringifiedBody));\n  res.end(stringifiedBody);\n}\n\nfunction sendJson(res, jsonBody) {\n  // Set header to application/json\n  res.setHeader('Content-Type', 'application/json; charset=utf-8'); // Use send to handle request\n\n  res.send(jsonBody);\n}\n\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexports.SYMBOL_PREVIEW_DATA = SYMBOL_PREVIEW_DATA;\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\n\nfunction tryGetPreviewData(req, res, options) {\n  // Read cached preview data if present\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return req[SYMBOL_PREVIEW_DATA];\n  }\n\n  const getCookies = getCookieParser(req.headers);\n  let cookies;\n\n  try {\n    cookies = getCookies();\n  } catch {\n    // TODO: warn\n    return false;\n  }\n\n  const hasBypass = (COOKIE_NAME_PRERENDER_BYPASS in cookies);\n  const hasData = (COOKIE_NAME_PRERENDER_DATA in cookies); // Case: neither cookie is set.\n\n  if (!(hasBypass || hasData)) {\n    return false;\n  } // Case: one cookie is set, but not the other.\n\n\n  if (hasBypass !== hasData) {\n    clearPreviewData(res);\n    return false;\n  } // Case: preview session is for an old build.\n\n\n  if (cookies[COOKIE_NAME_PRERENDER_BYPASS] !== options.previewModeId) {\n    clearPreviewData(res);\n    return false;\n  }\n\n  const tokenPreviewData = cookies[COOKIE_NAME_PRERENDER_DATA];\n\n  const jsonwebtoken = require('next/dist/compiled/jsonwebtoken');\n\n  let encryptedPreviewData;\n\n  try {\n    encryptedPreviewData = jsonwebtoken.verify(tokenPreviewData, options.previewModeSigningKey);\n  } catch {\n    // TODO: warn\n    clearPreviewData(res);\n    return false;\n  }\n\n  const decryptedPreviewData = (0, _cryptoUtils).decryptWithSecret(Buffer.from(options.previewModeEncryptionKey), encryptedPreviewData.data);\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData); // Cache lookup\n\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false\n    });\n    return data;\n  } catch {\n    return false;\n  }\n}\n\nfunction isNotValidData(str) {\n  return typeof str !== 'string' || str.length < 16;\n}\n\nfunction setPreviewData(res, data, options) {\n  if (isNotValidData(options.previewModeId)) {\n    throw new Error('invariant: invalid previewModeId');\n  }\n\n  if (isNotValidData(options.previewModeEncryptionKey)) {\n    throw new Error('invariant: invalid previewModeEncryptionKey');\n  }\n\n  if (isNotValidData(options.previewModeSigningKey)) {\n    throw new Error('invariant: invalid previewModeSigningKey');\n  }\n\n  const jsonwebtoken = require('next/dist/compiled/jsonwebtoken');\n\n  const payload = jsonwebtoken.sign({\n    data: (0, _cryptoUtils).encryptWithSecret(Buffer.from(options.previewModeEncryptionKey), JSON.stringify(data))\n  }, options.previewModeSigningKey, {\n    algorithm: 'HS256',\n    ...(options.maxAge !== undefined ? {\n      expiresIn: options.maxAge\n    } : undefined)\n  }); // limit preview mode cookie to 2KB since we shouldn't store too much\n  // data here and browsers drop cookies over 4KB\n\n  if (payload.length > 2048) {\n    throw new Error(`Preview data is limited to 2KB currently, reduce how much data you are storing as preview data to continue`);\n  }\n\n  const {\n    serialize\n  } = require('next/dist/compiled/cookie');\n\n  const previous = res.getHeader('Set-Cookie');\n  res.setHeader(`Set-Cookie`, [...(typeof previous === 'string' ? [previous] : Array.isArray(previous) ? previous : []), serialize(COOKIE_NAME_PRERENDER_BYPASS, options.previewModeId, {\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n    secure: process.env.NODE_ENV !== 'development',\n    path: '/',\n    ...(options.maxAge !== undefined ? {\n      maxAge: options.maxAge\n    } : undefined)\n  }), serialize(COOKIE_NAME_PRERENDER_DATA, payload, {\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n    secure: process.env.NODE_ENV !== 'development',\n    path: '/',\n    ...(options.maxAge !== undefined ? {\n      maxAge: options.maxAge\n    } : undefined)\n  })]);\n  return res;\n}\n\nfunction clearPreviewData(res) {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res;\n  }\n\n  const {\n    serialize\n  } = require('next/dist/compiled/cookie');\n\n  const previous = res.getHeader('Set-Cookie');\n  res.setHeader(`Set-Cookie`, [...(typeof previous === 'string' ? [previous] : Array.isArray(previous) ? previous : []), serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    expires: new Date(0),\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n    secure: process.env.NODE_ENV !== 'development',\n    path: '/'\n  }), serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    expires: new Date(0),\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n    secure: process.env.NODE_ENV !== 'development',\n    path: '/'\n  })]);\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false\n  });\n  return res;\n}\n\nclass ApiError extends Error {\n  constructor(statusCode, message) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n\n}\n\nexports.ApiError = ApiError;\n\nfunction sendError(res, statusCode1, message1) {\n  res.statusCode = statusCode1;\n  res.statusMessage = message1;\n  res.end(message1);\n}\n\nfunction setLazyProp({\n  req\n}, prop, getter) {\n  const opts = {\n    configurable: true,\n    enumerable: true\n  };\n  const optsReset = { ...opts,\n    writable: true\n  };\n  Object.defineProperty(req, prop, { ...opts,\n    get: () => {\n      const value = getter(); // we set the property on the object to avoid recalculating it\n\n      Object.defineProperty(req, prop, { ...optsReset,\n        value\n      });\n      return value;\n    },\n    set: value => {\n      Object.defineProperty(req, prop, { ...optsReset,\n        value\n      });\n    }\n  });\n}","map":{"version":3,"sources":["../../server/api-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport { parse } from 'next/dist/compiled/content-type'\nimport { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport getRawBody from 'raw-body'\nimport { PageConfig, PreviewData } from 'next/types'\nimport { Stream } from 'stream'\nimport { isResSent, NextApiRequest, NextApiResponse } from '../shared/lib/utils'\nimport { decryptWithSecret, encryptWithSecret } from './crypto-utils'\nimport { interopDefault } from './load-components'\nimport { sendEtagResponse } from './send-payload'\nimport generateETag from 'etag'\n\nexport type NextApiRequestCookies = { [key: string]: string }\nexport type NextApiRequestQuery = { [key: string]: string | string[] }\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport async function apiResolver(\n  req: IncomingMessage,\n  res: ServerResponse,\n  query: any,\n  resolverModule: any,\n  apiContext: __ApiPreviewProps,\n  propagateError: boolean,\n  dev?: boolean,\n  page?: string\n): Promise<void> {\n  const apiReq = req as NextApiRequest\n  const apiRes = res as NextApiResponse\n\n  try {\n    if (!resolverModule) {\n      res.statusCode = 404\n      res.end('Not Found')\n      return\n    }\n    const config: PageConfig = resolverModule.config || {}\n    const bodyParser = config.api?.bodyParser !== false\n    const externalResolver = config.api?.externalResolver || false\n\n    // Parsing of cookies\n    setLazyProp({ req: apiReq }, 'cookies', getCookieParser(req.headers))\n    // Parsing query string\n    apiReq.query = query\n    // Parsing preview data\n    setLazyProp({ req: apiReq }, 'previewData', () =>\n      tryGetPreviewData(req, res, apiContext)\n    )\n    // Checking if preview mode is enabled\n    setLazyProp({ req: apiReq }, 'preview', () =>\n      apiReq.previewData !== false ? true : undefined\n    )\n\n    // Parsing of body\n    if (bodyParser && !apiReq.body) {\n      apiReq.body = await parseBody(\n        apiReq,\n        config.api && config.api.bodyParser && config.api.bodyParser.sizeLimit\n          ? config.api.bodyParser.sizeLimit\n          : '1mb'\n      )\n    }\n\n    let contentLength = 0\n    const writeData = apiRes.write\n    const endResponse = apiRes.end\n    apiRes.write = (...args: any[2]) => {\n      contentLength += Buffer.byteLength(args[0])\n      return writeData.apply(apiRes, args)\n    }\n    apiRes.end = (...args: any[2]) => {\n      if (args.length && typeof args[0] !== 'function') {\n        contentLength += Buffer.byteLength(args[0])\n      }\n\n      if (contentLength >= 4 * 1024 * 1024) {\n        console.warn(\n          `API response for ${req.url} exceeds 4MB. This will cause the request to fail in a future version. https://nextjs.org/docs/messages/api-routes-body-size-limit`\n        )\n      }\n\n      endResponse.apply(apiRes, args)\n    }\n    apiRes.status = (statusCode) => sendStatusCode(apiRes, statusCode)\n    apiRes.send = (data) => sendData(apiReq, apiRes, data)\n    apiRes.json = (data) => sendJson(apiRes, data)\n    apiRes.redirect = (statusOrUrl: number | string, url?: string) =>\n      redirect(apiRes, statusOrUrl, url)\n    apiRes.setPreviewData = (data, options = {}) =>\n      setPreviewData(apiRes, data, Object.assign({}, apiContext, options))\n    apiRes.clearPreviewData = () => clearPreviewData(apiRes)\n\n    const resolver = interopDefault(resolverModule)\n    let wasPiped = false\n\n    if (process.env.NODE_ENV !== 'production') {\n      // listen for pipe event and don't show resolve warning\n      res.once('pipe', () => (wasPiped = true))\n    }\n\n    // Call API route method\n    await resolver(req, res)\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !externalResolver &&\n      !isResSent(res) &&\n      !wasPiped\n    ) {\n      console.warn(\n        `API resolved without sending a response for ${req.url}, this may result in stalled requests.`\n      )\n    }\n  } catch (err) {\n    if (err instanceof ApiError) {\n      sendError(apiRes, err.statusCode, err.message)\n    } else {\n      if (dev) {\n        if (err) {\n          err.page = page\n        }\n        throw err\n      }\n\n      console.error(err)\n      if (propagateError) {\n        throw err\n      }\n      sendError(apiRes, 500, 'Internal Server Error')\n    }\n  }\n}\n\n/**\n * Parse incoming message like `json` or `urlencoded`\n * @param req request object\n */\nexport async function parseBody(\n  req: NextApiRequest,\n  limit: string | number\n): Promise<any> {\n  let contentType\n  try {\n    contentType = parse(req.headers['content-type'] || 'text/plain')\n  } catch {\n    contentType = parse('text/plain')\n  }\n  const { type, parameters } = contentType\n  const encoding = parameters.charset || 'utf-8'\n\n  let buffer\n\n  try {\n    buffer = await getRawBody(req, { encoding, limit })\n  } catch (e) {\n    if (e.type === 'entity.too.large') {\n      throw new ApiError(413, `Body exceeded ${limit} limit`)\n    } else {\n      throw new ApiError(400, 'Invalid body')\n    }\n  }\n\n  const body = buffer.toString()\n\n  if (type === 'application/json' || type === 'application/ld+json') {\n    return parseJson(body)\n  } else if (type === 'application/x-www-form-urlencoded') {\n    const qs = require('querystring')\n    return qs.decode(body)\n  } else {\n    return body\n  }\n}\n\n/**\n * Parse `JSON` and handles invalid `JSON` strings\n * @param str `JSON` string\n */\nfunction parseJson(str: string): object {\n  if (str.length === 0) {\n    // special-case empty json body, as it's a common client-side mistake\n    return {}\n  }\n\n  try {\n    return JSON.parse(str)\n  } catch (e) {\n    throw new ApiError(400, 'Invalid JSON')\n  }\n}\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\nexport function getCookieParser(headers: {\n  [key: string]: undefined | string | string[]\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const header: undefined | string | string[] = headers.cookie\n\n    if (!header) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } = require('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(header) ? header.join(';') : header)\n  }\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\n/**\n * Send `any` body to response\n * @param req request object\n * @param res response object\n * @param body of response\n */\nexport function sendData(\n  req: NextApiRequest,\n  res: NextApiResponse,\n  body: any\n): void {\n  if (body === null || body === undefined) {\n    res.end()\n    return\n  }\n\n  // strip irrelevant headers/body\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    res.removeHeader('Content-Type')\n    res.removeHeader('Content-Length')\n    res.removeHeader('Transfer-Encoding')\n\n    if (process.env.NODE_ENV === 'development' && body) {\n      console.warn(\n        `A body was attempted to be set with a 204 statusCode for ${req.url}, this is invalid and the body was ignored.\\n` +\n          `See more info here https://nextjs.org/docs/messages/invalid-api-status-body`\n      )\n    }\n    res.end()\n    return\n  }\n\n  const contentType = res.getHeader('Content-Type')\n\n  if (body instanceof Stream) {\n    if (!contentType) {\n      res.setHeader('Content-Type', 'application/octet-stream')\n    }\n    body.pipe(res)\n    return\n  }\n\n  const isJSONLike = ['object', 'number', 'boolean'].includes(typeof body)\n  const stringifiedBody = isJSONLike ? JSON.stringify(body) : body\n  const etag = generateETag(stringifiedBody)\n  if (sendEtagResponse(req, res, etag)) {\n    return\n  }\n\n  if (Buffer.isBuffer(body)) {\n    if (!contentType) {\n      res.setHeader('Content-Type', 'application/octet-stream')\n    }\n    res.setHeader('Content-Length', body.length)\n    res.end(body)\n    return\n  }\n\n  if (isJSONLike) {\n    res.setHeader('Content-Type', 'application/json; charset=utf-8')\n  }\n\n  res.setHeader('Content-Length', Buffer.byteLength(stringifiedBody))\n  res.end(stringifiedBody)\n}\n\n/**\n * Send `JSON` object\n * @param res response object\n * @param jsonBody of data\n */\nexport function sendJson(res: NextApiResponse, jsonBody: any): void {\n  // Set header to application/json\n  res.setHeader('Content-Type', 'application/json; charset=utf-8')\n\n  // Use send to handle request\n  res.send(jsonBody)\n}\n\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function tryGetPreviewData(\n  req: IncomingMessage,\n  res: ServerResponse,\n  options: __ApiPreviewProps\n): PreviewData {\n  // Read cached preview data if present\n  if (SYMBOL_PREVIEW_DATA in req) {\n    return (req as any)[SYMBOL_PREVIEW_DATA] as any\n  }\n\n  const getCookies = getCookieParser(req.headers)\n  let cookies: NextApiRequestCookies\n  try {\n    cookies = getCookies()\n  } catch {\n    // TODO: warn\n    return false\n  }\n\n  const hasBypass = COOKIE_NAME_PRERENDER_BYPASS in cookies\n  const hasData = COOKIE_NAME_PRERENDER_DATA in cookies\n\n  // Case: neither cookie is set.\n  if (!(hasBypass || hasData)) {\n    return false\n  }\n\n  // Case: one cookie is set, but not the other.\n  if (hasBypass !== hasData) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  // Case: preview session is for an old build.\n  if (cookies[COOKIE_NAME_PRERENDER_BYPASS] !== options.previewModeId) {\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const tokenPreviewData = cookies[COOKIE_NAME_PRERENDER_DATA]\n\n  const jsonwebtoken =\n    require('next/dist/compiled/jsonwebtoken') as typeof import('jsonwebtoken')\n  let encryptedPreviewData: {\n    data: string\n  }\n  try {\n    encryptedPreviewData = jsonwebtoken.verify(\n      tokenPreviewData,\n      options.previewModeSigningKey\n    ) as typeof encryptedPreviewData\n  } catch {\n    // TODO: warn\n    clearPreviewData(res as NextApiResponse)\n    return false\n  }\n\n  const decryptedPreviewData = decryptWithSecret(\n    Buffer.from(options.previewModeEncryptionKey),\n    encryptedPreviewData.data\n  )\n\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData)\n    // Cache lookup\n    Object.defineProperty(req, SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false,\n    })\n    return data\n  } catch {\n    return false\n  }\n}\n\nfunction isNotValidData(str: string): boolean {\n  return typeof str !== 'string' || str.length < 16\n}\n\nfunction setPreviewData<T>(\n  res: NextApiResponse<T>,\n  data: object | string, // TODO: strict runtime type checking\n  options: {\n    maxAge?: number\n  } & __ApiPreviewProps\n): NextApiResponse<T> {\n  if (isNotValidData(options.previewModeId)) {\n    throw new Error('invariant: invalid previewModeId')\n  }\n  if (isNotValidData(options.previewModeEncryptionKey)) {\n    throw new Error('invariant: invalid previewModeEncryptionKey')\n  }\n  if (isNotValidData(options.previewModeSigningKey)) {\n    throw new Error('invariant: invalid previewModeSigningKey')\n  }\n\n  const jsonwebtoken =\n    require('next/dist/compiled/jsonwebtoken') as typeof import('jsonwebtoken')\n\n  const payload = jsonwebtoken.sign(\n    {\n      data: encryptWithSecret(\n        Buffer.from(options.previewModeEncryptionKey),\n        JSON.stringify(data)\n      ),\n    },\n    options.previewModeSigningKey,\n    {\n      algorithm: 'HS256',\n      ...(options.maxAge !== undefined\n        ? { expiresIn: options.maxAge }\n        : undefined),\n    }\n  )\n\n  // limit preview mode cookie to 2KB since we shouldn't store too much\n  // data here and browsers drop cookies over 4KB\n  if (payload.length > 2048) {\n    throw new Error(\n      `Preview data is limited to 2KB currently, reduce how much data you are storing as preview data to continue`\n    )\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n      ? previous\n      : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, options.previewModeId, {\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.maxAge !== undefined\n        ? ({ maxAge: options.maxAge } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, payload, {\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.maxAge !== undefined\n        ? ({ maxAge: options.maxAge } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n  return res\n}\n\nfunction clearPreviewData<T>(res: NextApiResponse<T>): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n      ? previous\n      : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: NextApiRequest\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}