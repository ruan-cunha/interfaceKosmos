{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst idToName = new Map();\n\nconst reportToConsole = (spanName, duration, _timestamp, id, parentId, attrs) => {\n  idToName.set(id, spanName);\n  const parentStr = parentId && idToName.has(parentId) ? `, parent: ${idToName.get(parentId)}` : '';\n  const attrsStr = attrs ? `, ${Object.entries(attrs).map(([key, val]) => `${key}: ${val}`).join(', ')}` : '';\n  console.log(`[trace] ${spanName} took ${duration} μs${parentStr}${attrsStr}`);\n};\n\nvar _default = {\n  flushAll: () => {},\n  report: reportToConsole\n};\nexports.default = _default;","map":{"version":3,"sources":["../../../../telemetry/trace/report/to-console.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,QAAQ,GAAG,IAAI,GAAJ,EAAjB;;AAEA,MAAM,eAAe,GAAA,CACnB,QADmB,EAEnB,QAFmB,EAGnB,UAHmB,EAInB,EAJmB,EAKnB,QALmB,EAMnB,KANmB,KAOhB;AACH,EAAA,QAAQ,CAAC,GAAT,CAAa,EAAb,EAAiB,QAAjB;AAEA,QAAM,SAAS,GACb,QAAQ,IAAI,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAZ,GACK,aAAY,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAqB,EADtC,GACsC,EAFxC;AAIA,QAAM,QAAQ,GAAG,KAAK,GACjB,KAAI,MAAM,CAAC,OAAP,CAAe,KAAf,EACF,GADE,CACC,CAAA,CAAG,GAAH,EAAQ,GAAR,CAAA,KAAW,GAAS,GAAI,KAAI,GAAG,EADhC,EAEF,IAFE,CAEE,IAFF,CAEO,EAHM,GAGN,EAHhB;AAMA,EAAA,OAAO,CAAC,GAAR,CAAa,WAAU,QAAS,SAAQ,QAAS,MAAG,SAAW,GAAA,QAAW,EAA1E;AACD,CArBD;;;AAwBE,EAAA,QAAQ,EAAA,MAAQ,CAAE,C;AAClB,EAAA,MAAM,EAAE","sourcesContent":["const idToName = new Map<string, string>()\n\nconst reportToConsole = (\n  spanName: string,\n  duration: number,\n  _timestamp: number,\n  id: string,\n  parentId?: string,\n  attrs?: Object\n) => {\n  idToName.set(id, spanName)\n\n  const parentStr =\n    parentId && idToName.has(parentId)\n      ? `, parent: ${idToName.get(parentId)}`\n      : ''\n  const attrsStr = attrs\n    ? `, ${Object.entries(attrs)\n        .map(([key, val]) => `${key}: ${val}`)\n        .join(', ')}`\n    : ''\n\n  console.log(`[trace] ${spanName} took ${duration} μs${parentStr}${attrsStr}`)\n}\n\nexport default {\n  flushAll: () => {},\n  report: reportToConsole,\n}\n"]},"metadata":{},"sourceType":"script"}