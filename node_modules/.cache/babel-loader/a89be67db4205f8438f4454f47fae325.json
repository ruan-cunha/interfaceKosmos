{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DomainLocale\", {\n  enumerable: true,\n  get: function () {\n    return _configShared.DomainLocale;\n  }\n});\nObject.defineProperty(exports, \"NextConfig\", {\n  enumerable: true,\n  get: function () {\n    return _configShared.NextConfig;\n  }\n});\nObject.defineProperty(exports, \"normalizeConfig\", {\n  enumerable: true,\n  get: function () {\n    return _configShared.normalizeConfig;\n  }\n});\nexports.default = loadConfig;\nexports.isTargetLikeServerless = isTargetLikeServerless;\nexports.setHttpAgentOptions = setHttpAgentOptions;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _findUp = _interopRequireDefault(require(\"next/dist/compiled/find-up\"));\n\nvar _path = require(\"path\");\n\nvar _http = require(\"http\");\n\nvar _https = require(\"https\");\n\nvar Log = _interopRequireWildcard(require(\"../build/output/log\"));\n\nvar _constants = require(\"../shared/lib/constants\");\n\nvar _utils = require(\"../shared/lib/utils\");\n\nvar _configShared = require(\"./config-shared\");\n\nvar _configUtils = require(\"./config-utils\");\n\nvar _imageConfig = require(\"./image-config\");\n\nvar _env = require(\"@next/env\");\n\nvar _ciInfo = require(\"../telemetry/ci-info\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nconst targets = ['server', 'serverless', 'experimental-serverless-trace'];\nconst experimentalWarning = (0, _utils).execOnce(() => {\n  Log.warn(_chalk.default.bold('You have enabled experimental feature(s).'));\n  Log.warn(`Experimental features are not covered by semver, and may cause unexpected or broken application behavior. ` + `Use them at your own risk.`);\n  console.warn();\n});\n\nfunction assignDefaults(userConfig) {\n  var ref;\n\n  if (typeof userConfig.exportTrailingSlash !== 'undefined') {\n    console.warn(_chalk.default.yellow.bold('Warning: ') + 'The \"exportTrailingSlash\" option has been renamed to \"trailingSlash\". Please update your next.config.js.');\n\n    if (typeof userConfig.trailingSlash === 'undefined') {\n      userConfig.trailingSlash = userConfig.exportTrailingSlash;\n    }\n\n    delete userConfig.exportTrailingSlash;\n  }\n\n  if (typeof ((ref = userConfig.experimental) === null || ref === void 0 ? void 0 : ref.reactMode) !== 'undefined') {\n    var ref1;\n    console.warn(_chalk.default.yellow.bold('Warning: ') + 'The experimental \"reactMode\" option has been replaced with \"reactRoot\". Please update your next.config.js.');\n\n    if (typeof ((ref1 = userConfig.experimental) === null || ref1 === void 0 ? void 0 : ref1.reactRoot) === 'undefined') {\n      userConfig.experimental.reactRoot = ['concurrent', 'blocking'].includes(userConfig.experimental.reactMode);\n    }\n\n    delete userConfig.experimental.reactMode;\n  }\n\n  const config = Object.keys(userConfig).reduce((currentConfig, key) => {\n    const value = userConfig[key];\n\n    if (value === undefined || value === null) {\n      return currentConfig;\n    }\n\n    if (key === 'experimental' && value !== undefined && value !== _configShared.defaultConfig[key]) {\n      experimentalWarning();\n    }\n\n    if (key === 'distDir') {\n      if (typeof value !== 'string') {\n        throw new Error(`Specified distDir is not a string, found type \"${typeof value}\"`);\n      }\n\n      const userDistDir = value.trim(); // don't allow public as the distDir as this is a reserved folder for\n      // public files\n\n      if (userDistDir === 'public') {\n        throw new Error(`The 'public' directory is reserved in Next.js and can not be set as the 'distDir'. https://nextjs.org/docs/messages/can-not-output-to-public`);\n      } // make sure distDir isn't an empty string as it can result in the provided\n      // directory being deleted in development mode\n\n\n      if (userDistDir.length === 0) {\n        throw new Error(`Invalid distDir provided, distDir can not be an empty string. Please remove this config or set it to undefined`);\n      }\n    }\n\n    if (key === 'pageExtensions') {\n      if (!Array.isArray(value)) {\n        throw new Error(`Specified pageExtensions is not an array of strings, found \"${value}\". Please update this config or remove it.`);\n      }\n\n      if (!value.length) {\n        throw new Error(`Specified pageExtensions is an empty array. Please update it with the relevant extensions or remove it.`);\n      }\n\n      value.forEach(ext => {\n        if (typeof ext !== 'string') {\n          throw new Error(`Specified pageExtensions is not an array of strings, found \"${ext}\" of type \"${typeof ext}\". Please update this config or remove it.`);\n        }\n      });\n    }\n\n    if (!!value && value.constructor === Object) {\n      currentConfig[key] = { ..._configShared.defaultConfig[key],\n        ...Object.keys(value).reduce((c, k) => {\n          const v = value[k];\n\n          if (v !== undefined && v !== null) {\n            c[k] = v;\n          }\n\n          return c;\n        }, {})\n      };\n    } else {\n      currentConfig[key] = value;\n    }\n\n    return currentConfig;\n  }, {});\n  const result = { ..._configShared.defaultConfig,\n    ...config\n  };\n\n  if (typeof result.assetPrefix !== 'string') {\n    throw new Error(`Specified assetPrefix is not a string, found type \"${typeof result.assetPrefix}\" https://nextjs.org/docs/messages/invalid-assetprefix`);\n  }\n\n  if (typeof result.basePath !== 'string') {\n    throw new Error(`Specified basePath is not a string, found type \"${typeof result.basePath}\"`);\n  }\n\n  if (result.basePath !== '') {\n    if (result.basePath === '/') {\n      throw new Error(`Specified basePath /. basePath has to be either an empty string or a path prefix\"`);\n    }\n\n    if (!result.basePath.startsWith('/')) {\n      throw new Error(`Specified basePath has to start with a /, found \"${result.basePath}\"`);\n    }\n\n    if (result.basePath !== '/') {\n      var ref2;\n\n      if (result.basePath.endsWith('/')) {\n        throw new Error(`Specified basePath should not end with /, found \"${result.basePath}\"`);\n      }\n\n      if (result.assetPrefix === '') {\n        result.assetPrefix = result.basePath;\n      }\n\n      if (((ref2 = result.amp) === null || ref2 === void 0 ? void 0 : ref2.canonicalBase) === '') {\n        result.amp.canonicalBase = result.basePath;\n      }\n    }\n  }\n\n  if (result === null || result === void 0 ? void 0 : result.images) {\n    const images = result.images;\n\n    if (typeof images !== 'object') {\n      throw new Error(`Specified images should be an object received ${typeof images}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n    }\n\n    if (images.domains) {\n      if (!Array.isArray(images.domains)) {\n        throw new Error(`Specified images.domains should be an Array received ${typeof images.domains}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      if (images.domains.length > 50) {\n        throw new Error(`Specified images.domains exceeds length of 50, received length (${images.domains.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      const invalid = images.domains.filter(d => typeof d !== 'string');\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.domains should be an Array of strings received invalid values (${invalid.join(', ')}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n    }\n\n    if (images.deviceSizes) {\n      const {\n        deviceSizes\n      } = images;\n\n      if (!Array.isArray(deviceSizes)) {\n        throw new Error(`Specified images.deviceSizes should be an Array received ${typeof deviceSizes}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      if (deviceSizes.length > 25) {\n        throw new Error(`Specified images.deviceSizes exceeds length of 25, received length (${deviceSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      const invalid = deviceSizes.filter(d => {\n        return typeof d !== 'number' || d < 1 || d > 10000;\n      });\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.deviceSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(', ')}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n    }\n\n    if (images.imageSizes) {\n      const {\n        imageSizes\n      } = images;\n\n      if (!Array.isArray(imageSizes)) {\n        throw new Error(`Specified images.imageSizes should be an Array received ${typeof imageSizes}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      if (imageSizes.length > 25) {\n        throw new Error(`Specified images.imageSizes exceeds length of 25, received length (${imageSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n\n      const invalid = imageSizes.filter(d => {\n        return typeof d !== 'number' || d < 1 || d > 10000;\n      });\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.imageSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(', ')}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n      }\n    }\n\n    if (!images.loader) {\n      images.loader = 'default';\n    }\n\n    if (!_imageConfig.VALID_LOADERS.includes(images.loader)) {\n      throw new Error(`Specified images.loader should be one of (${_imageConfig.VALID_LOADERS.join(', ')}), received invalid value (${images.loader}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n    } // Append trailing slash for non-default loaders\n\n\n    if (images.path) {\n      if (images.loader !== 'default' && images.path[images.path.length - 1] !== '/') {\n        images.path += '/';\n      }\n    }\n\n    if (images.path === _imageConfig.imageConfigDefault.path && result.basePath) {\n      images.path = `${result.basePath}${images.path}`;\n    }\n\n    if (images.minimumCacheTTL && (!Number.isInteger(images.minimumCacheTTL) || images.minimumCacheTTL < 0)) {\n      throw new Error(`Specified images.minimumCacheTTL should be an integer 0 or more\n          ', '\n        )}), received  (${images.minimumCacheTTL}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`);\n    }\n  } // TODO: Change defaultConfig type to NextConfigComplete\n  // so we don't need \"!\" here.\n\n\n  setHttpAgentOptions(result.httpAgentOptions || _configShared.defaultConfig.httpAgentOptions);\n\n  if (result.i18n) {\n    const {\n      i18n\n    } = result;\n    const i18nType = typeof i18n;\n\n    if (i18nType !== 'object') {\n      throw new Error(`Specified i18n should be an object received ${i18nType}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(`Specified i18n.locales should be an Array received ${typeof i18n.locales}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n\n    if (i18n.locales.length > 100) {\n      Log.warn(`Received ${i18n.locales.length} i18n.locales items which exceeds the recommended max of 100.\\nSee more info here: https://nextjs.org/docs/advanced-features/i18n-routing#how-does-this-work-with-static-generation`);\n    }\n\n    const defaultLocaleType = typeof i18n.defaultLocale;\n\n    if (!i18n.defaultLocale || defaultLocaleType !== 'string') {\n      throw new Error(`Specified i18n.defaultLocale should be a string.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n\n    if (typeof i18n.domains !== 'undefined' && !Array.isArray(i18n.domains)) {\n      throw new Error(`Specified i18n.domains must be an array of domain objects e.g. [ { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] } ] received ${typeof i18n.domains}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n\n    if (i18n.domains) {\n      const invalidDomainItems = i18n.domains.filter(item => {\n        var ref3;\n        if (!item || typeof item !== 'object') return true;\n        if (!item.defaultLocale) return true;\n        if (!item.domain || typeof item.domain !== 'string') return true;\n        const defaultLocaleDuplicate = (ref3 = i18n.domains) === null || ref3 === void 0 ? void 0 : ref3.find(altItem => altItem.defaultLocale === item.defaultLocale && altItem.domain !== item.domain);\n\n        if (defaultLocaleDuplicate) {\n          console.warn(`Both ${item.domain} and ${defaultLocaleDuplicate.domain} configured the defaultLocale ${item.defaultLocale} but only one can. Change one item's default locale to continue`);\n          return true;\n        }\n\n        let hasInvalidLocale = false;\n\n        if (Array.isArray(item.locales)) {\n          for (const locale of item.locales) {\n            if (typeof locale !== 'string') hasInvalidLocale = true;\n\n            for (const domainItem of i18n.domains || []) {\n              if (domainItem === item) continue;\n\n              if (domainItem.locales && domainItem.locales.includes(locale)) {\n                console.warn(`Both ${item.domain} and ${domainItem.domain} configured the locale (${locale}) but only one can. Remove it from one i18n.domains config to continue`);\n                hasInvalidLocale = true;\n                break;\n              }\n            }\n          }\n        }\n\n        return hasInvalidLocale;\n      });\n\n      if (invalidDomainItems.length > 0) {\n        throw new Error(`Invalid i18n.domains values:\\n${invalidDomainItems.map(item => JSON.stringify(item)).join('\\n')}\\n\\ndomains value must follow format { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] }.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n      }\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(`Specified i18n.locales must be an array of locale strings e.g. [\"en-US\", \"nl-NL\"] received ${typeof i18n.locales}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n\n    const invalidLocales = i18n.locales.filter(locale => typeof locale !== 'string');\n\n    if (invalidLocales.length > 0) {\n      throw new Error(`Specified i18n.locales contains invalid values (${invalidLocales.map(String).join(', ')}), locales must be valid locale tags provided as strings e.g. \"en-US\".\\n` + `See here for list of valid language sub-tags: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry`);\n    }\n\n    if (!i18n.locales.includes(i18n.defaultLocale)) {\n      throw new Error(`Specified i18n.defaultLocale should be included in i18n.locales.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    } // make sure default Locale is at the front\n\n\n    i18n.locales = [i18n.defaultLocale, ...i18n.locales.filter(locale => locale !== i18n.defaultLocale)];\n    const localeDetectionType = typeof i18n.localeDetection;\n\n    if (localeDetectionType !== 'boolean' && localeDetectionType !== 'undefined') {\n      throw new Error(`Specified i18n.localeDetection should be undefined or a boolean received ${localeDetectionType}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`);\n    }\n  }\n\n  return result;\n}\n\nasync function loadConfig(phase, dir, customConfig) {\n  await (0, _env).loadEnvConfig(dir, phase === _constants.PHASE_DEVELOPMENT_SERVER, Log);\n  await (0, _configUtils).loadWebpackHook(phase, dir);\n\n  if (customConfig) {\n    return assignDefaults({\n      configOrigin: 'server',\n      ...customConfig\n    });\n  }\n\n  const path = await (0, _findUp).default(_constants.CONFIG_FILE, {\n    cwd: dir\n  }); // If config file was found\n\n  if (path === null || path === void 0 ? void 0 : path.length) {\n    var ref4;\n    let userConfigModule;\n\n    try {\n      userConfigModule = require(path);\n    } catch (err) {\n      console.error(_chalk.default.red('Error:') + ' failed to load next.config.js, see more info here https://nextjs.org/docs/messages/next-config-error');\n      throw err;\n    }\n\n    const userConfig = (0, _configShared).normalizeConfig(phase, userConfigModule.default || userConfigModule);\n\n    if (Object.keys(userConfig).length === 0) {\n      Log.warn('Detected next.config.js, no exported configuration found. https://nextjs.org/docs/messages/empty-configuration');\n    }\n\n    if (userConfig.target && !targets.includes(userConfig.target)) {\n      throw new Error(`Specified target is invalid. Provided: \"${userConfig.target}\" should be one of ${targets.join(', ')}`);\n    }\n\n    if ((ref4 = userConfig.amp) === null || ref4 === void 0 ? void 0 : ref4.canonicalBase) {\n      const {\n        canonicalBase\n      } = userConfig.amp || {};\n      userConfig.amp = userConfig.amp || {};\n      userConfig.amp.canonicalBase = (canonicalBase.endsWith('/') ? canonicalBase.slice(0, -1) : canonicalBase) || '';\n    }\n\n    if (process.env.NEXT_PRIVATE_TARGET || _ciInfo.hasNextSupport) {\n      userConfig.target = process.env.NEXT_PRIVATE_TARGET || 'server';\n    }\n\n    return assignDefaults({\n      configOrigin: _constants.CONFIG_FILE,\n      configFile: path,\n      ...userConfig\n    });\n  } else {\n    const configBaseName = (0, _path).basename(_constants.CONFIG_FILE, (0, _path).extname(_constants.CONFIG_FILE));\n\n    const nonJsPath = _findUp.default.sync([`${configBaseName}.jsx`, `${configBaseName}.ts`, `${configBaseName}.tsx`, `${configBaseName}.json`], {\n      cwd: dir\n    });\n\n    if (nonJsPath === null || nonJsPath === void 0 ? void 0 : nonJsPath.length) {\n      throw new Error(`Configuring Next.js via '${(0, _path).basename(nonJsPath)}' is not supported. Please replace the file with 'next.config.js'.`);\n    }\n  }\n\n  const completeConfig = _configShared.defaultConfig;\n  setHttpAgentOptions(completeConfig.httpAgentOptions);\n  return completeConfig;\n}\n\nfunction isTargetLikeServerless(target) {\n  const isServerless = target === 'serverless';\n  const isServerlessTrace = target === 'experimental-serverless-trace';\n  return isServerless || isServerlessTrace;\n}\n\nfunction setHttpAgentOptions(options) {\n  if (global.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to resuse the same agent for all requests.\n    return;\n  }\n\n  if (!options) {\n    throw new Error('Expected config.httpAgentOptions to be an object');\n  }\n\n  global.__NEXT_HTTP_AGENT = new _http.Agent(options);\n  global.__NEXT_HTTPS_AGENT = new _https.Agent(options);\n}","map":{"version":3,"sources":["../../server/config.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport findUp from 'next/dist/compiled/find-up'\nimport { basename, extname } from 'path'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\nimport * as Log from '../build/output/log'\nimport { CONFIG_FILE, PHASE_DEVELOPMENT_SERVER } from '../shared/lib/constants'\nimport { execOnce } from '../shared/lib/utils'\nimport {\n  defaultConfig,\n  NextConfigComplete,\n  normalizeConfig,\n} from './config-shared'\nimport { loadWebpackHook } from './config-utils'\nimport { ImageConfig, imageConfigDefault, VALID_LOADERS } from './image-config'\nimport { loadEnvConfig } from '@next/env'\nimport { hasNextSupport } from '../telemetry/ci-info'\n\nexport { DomainLocale, NextConfig, normalizeConfig } from './config-shared'\n\nconst targets = ['server', 'serverless', 'experimental-serverless-trace']\n\nconst experimentalWarning = execOnce(() => {\n  Log.warn(chalk.bold('You have enabled experimental feature(s).'))\n  Log.warn(\n    `Experimental features are not covered by semver, and may cause unexpected or broken application behavior. ` +\n      `Use them at your own risk.`\n  )\n  console.warn()\n})\n\nfunction assignDefaults(userConfig: { [key: string]: any }) {\n  if (typeof userConfig.exportTrailingSlash !== 'undefined') {\n    console.warn(\n      chalk.yellow.bold('Warning: ') +\n        'The \"exportTrailingSlash\" option has been renamed to \"trailingSlash\". Please update your next.config.js.'\n    )\n    if (typeof userConfig.trailingSlash === 'undefined') {\n      userConfig.trailingSlash = userConfig.exportTrailingSlash\n    }\n    delete userConfig.exportTrailingSlash\n  }\n\n  if (typeof userConfig.experimental?.reactMode !== 'undefined') {\n    console.warn(\n      chalk.yellow.bold('Warning: ') +\n        'The experimental \"reactMode\" option has been replaced with \"reactRoot\". Please update your next.config.js.'\n    )\n    if (typeof userConfig.experimental?.reactRoot === 'undefined') {\n      userConfig.experimental.reactRoot = ['concurrent', 'blocking'].includes(\n        userConfig.experimental.reactMode\n      )\n    }\n    delete userConfig.experimental.reactMode\n  }\n\n  const config = Object.keys(userConfig).reduce<{ [key: string]: any }>(\n    (currentConfig, key) => {\n      const value = userConfig[key]\n\n      if (value === undefined || value === null) {\n        return currentConfig\n      }\n\n      if (\n        key === 'experimental' &&\n        value !== undefined &&\n        value !== defaultConfig[key]\n      ) {\n        experimentalWarning()\n      }\n\n      if (key === 'distDir') {\n        if (typeof value !== 'string') {\n          throw new Error(\n            `Specified distDir is not a string, found type \"${typeof value}\"`\n          )\n        }\n        const userDistDir = value.trim()\n\n        // don't allow public as the distDir as this is a reserved folder for\n        // public files\n        if (userDistDir === 'public') {\n          throw new Error(\n            `The 'public' directory is reserved in Next.js and can not be set as the 'distDir'. https://nextjs.org/docs/messages/can-not-output-to-public`\n          )\n        }\n        // make sure distDir isn't an empty string as it can result in the provided\n        // directory being deleted in development mode\n        if (userDistDir.length === 0) {\n          throw new Error(\n            `Invalid distDir provided, distDir can not be an empty string. Please remove this config or set it to undefined`\n          )\n        }\n      }\n\n      if (key === 'pageExtensions') {\n        if (!Array.isArray(value)) {\n          throw new Error(\n            `Specified pageExtensions is not an array of strings, found \"${value}\". Please update this config or remove it.`\n          )\n        }\n\n        if (!value.length) {\n          throw new Error(\n            `Specified pageExtensions is an empty array. Please update it with the relevant extensions or remove it.`\n          )\n        }\n\n        value.forEach((ext) => {\n          if (typeof ext !== 'string') {\n            throw new Error(\n              `Specified pageExtensions is not an array of strings, found \"${ext}\" of type \"${typeof ext}\". Please update this config or remove it.`\n            )\n          }\n        })\n      }\n\n      if (!!value && value.constructor === Object) {\n        currentConfig[key] = {\n          ...defaultConfig[key],\n          ...Object.keys(value).reduce<any>((c, k) => {\n            const v = value[k]\n            if (v !== undefined && v !== null) {\n              c[k] = v\n            }\n            return c\n          }, {}),\n        }\n      } else {\n        currentConfig[key] = value\n      }\n\n      return currentConfig\n    },\n    {}\n  )\n\n  const result = { ...defaultConfig, ...config }\n\n  if (typeof result.assetPrefix !== 'string') {\n    throw new Error(\n      `Specified assetPrefix is not a string, found type \"${typeof result.assetPrefix}\" https://nextjs.org/docs/messages/invalid-assetprefix`\n    )\n  }\n\n  if (typeof result.basePath !== 'string') {\n    throw new Error(\n      `Specified basePath is not a string, found type \"${typeof result.basePath}\"`\n    )\n  }\n\n  if (result.basePath !== '') {\n    if (result.basePath === '/') {\n      throw new Error(\n        `Specified basePath /. basePath has to be either an empty string or a path prefix\"`\n      )\n    }\n\n    if (!result.basePath.startsWith('/')) {\n      throw new Error(\n        `Specified basePath has to start with a /, found \"${result.basePath}\"`\n      )\n    }\n\n    if (result.basePath !== '/') {\n      if (result.basePath.endsWith('/')) {\n        throw new Error(\n          `Specified basePath should not end with /, found \"${result.basePath}\"`\n        )\n      }\n\n      if (result.assetPrefix === '') {\n        result.assetPrefix = result.basePath\n      }\n\n      if (result.amp?.canonicalBase === '') {\n        result.amp.canonicalBase = result.basePath\n      }\n    }\n  }\n\n  if (result?.images) {\n    const images: Partial<ImageConfig> = result.images\n\n    if (typeof images !== 'object') {\n      throw new Error(\n        `Specified images should be an object received ${typeof images}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n      )\n    }\n\n    if (images.domains) {\n      if (!Array.isArray(images.domains)) {\n        throw new Error(\n          `Specified images.domains should be an Array received ${typeof images.domains}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      if (images.domains.length > 50) {\n        throw new Error(\n          `Specified images.domains exceeds length of 50, received length (${images.domains.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      const invalid = images.domains.filter(\n        (d: unknown) => typeof d !== 'string'\n      )\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.domains should be an Array of strings received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n    }\n    if (images.deviceSizes) {\n      const { deviceSizes } = images\n      if (!Array.isArray(deviceSizes)) {\n        throw new Error(\n          `Specified images.deviceSizes should be an Array received ${typeof deviceSizes}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      if (deviceSizes.length > 25) {\n        throw new Error(\n          `Specified images.deviceSizes exceeds length of 25, received length (${deviceSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      const invalid = deviceSizes.filter((d: unknown) => {\n        return typeof d !== 'number' || d < 1 || d > 10000\n      })\n\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.deviceSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n    }\n    if (images.imageSizes) {\n      const { imageSizes } = images\n      if (!Array.isArray(imageSizes)) {\n        throw new Error(\n          `Specified images.imageSizes should be an Array received ${typeof imageSizes}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      if (imageSizes.length > 25) {\n        throw new Error(\n          `Specified images.imageSizes exceeds length of 25, received length (${imageSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n\n      const invalid = imageSizes.filter((d: unknown) => {\n        return typeof d !== 'number' || d < 1 || d > 10000\n      })\n\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.imageSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n        )\n      }\n    }\n\n    if (!images.loader) {\n      images.loader = 'default'\n    }\n\n    if (!VALID_LOADERS.includes(images.loader)) {\n      throw new Error(\n        `Specified images.loader should be one of (${VALID_LOADERS.join(\n          ', '\n        )}), received invalid value (${\n          images.loader\n        }).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n      )\n    }\n\n    // Append trailing slash for non-default loaders\n    if (images.path) {\n      if (\n        images.loader !== 'default' &&\n        images.path[images.path.length - 1] !== '/'\n      ) {\n        images.path += '/'\n      }\n    }\n\n    if (images.path === imageConfigDefault.path && result.basePath) {\n      images.path = `${result.basePath}${images.path}`\n    }\n\n    if (\n      images.minimumCacheTTL &&\n      (!Number.isInteger(images.minimumCacheTTL) || images.minimumCacheTTL < 0)\n    ) {\n      throw new Error(\n        `Specified images.minimumCacheTTL should be an integer 0 or more\n          ', '\n        )}), received  (${images.minimumCacheTTL}).\\nSee more info here: https://nextjs.org/docs/messages/invalid-images-config`\n      )\n    }\n  }\n\n  // TODO: Change defaultConfig type to NextConfigComplete\n  // so we don't need \"!\" here.\n  setHttpAgentOptions(\n    result.httpAgentOptions || defaultConfig.httpAgentOptions!\n  )\n\n  if (result.i18n) {\n    const { i18n } = result\n    const i18nType = typeof i18n\n\n    if (i18nType !== 'object') {\n      throw new Error(\n        `Specified i18n should be an object received ${i18nType}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(\n        `Specified i18n.locales should be an Array received ${typeof i18n.locales}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    if (i18n.locales.length > 100) {\n      Log.warn(\n        `Received ${i18n.locales.length} i18n.locales items which exceeds the recommended max of 100.\\nSee more info here: https://nextjs.org/docs/advanced-features/i18n-routing#how-does-this-work-with-static-generation`\n      )\n    }\n\n    const defaultLocaleType = typeof i18n.defaultLocale\n\n    if (!i18n.defaultLocale || defaultLocaleType !== 'string') {\n      throw new Error(\n        `Specified i18n.defaultLocale should be a string.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    if (typeof i18n.domains !== 'undefined' && !Array.isArray(i18n.domains)) {\n      throw new Error(\n        `Specified i18n.domains must be an array of domain objects e.g. [ { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] } ] received ${typeof i18n.domains}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    if (i18n.domains) {\n      const invalidDomainItems = i18n.domains.filter((item) => {\n        if (!item || typeof item !== 'object') return true\n        if (!item.defaultLocale) return true\n        if (!item.domain || typeof item.domain !== 'string') return true\n\n        const defaultLocaleDuplicate = i18n.domains?.find(\n          (altItem) =>\n            altItem.defaultLocale === item.defaultLocale &&\n            altItem.domain !== item.domain\n        )\n\n        if (defaultLocaleDuplicate) {\n          console.warn(\n            `Both ${item.domain} and ${defaultLocaleDuplicate.domain} configured the defaultLocale ${item.defaultLocale} but only one can. Change one item's default locale to continue`\n          )\n          return true\n        }\n\n        let hasInvalidLocale = false\n\n        if (Array.isArray(item.locales)) {\n          for (const locale of item.locales) {\n            if (typeof locale !== 'string') hasInvalidLocale = true\n\n            for (const domainItem of i18n.domains || []) {\n              if (domainItem === item) continue\n              if (domainItem.locales && domainItem.locales.includes(locale)) {\n                console.warn(\n                  `Both ${item.domain} and ${domainItem.domain} configured the locale (${locale}) but only one can. Remove it from one i18n.domains config to continue`\n                )\n                hasInvalidLocale = true\n                break\n              }\n            }\n          }\n        }\n\n        return hasInvalidLocale\n      })\n\n      if (invalidDomainItems.length > 0) {\n        throw new Error(\n          `Invalid i18n.domains values:\\n${invalidDomainItems\n            .map((item: any) => JSON.stringify(item))\n            .join(\n              '\\n'\n            )}\\n\\ndomains value must follow format { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] }.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n        )\n      }\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(\n        `Specified i18n.locales must be an array of locale strings e.g. [\"en-US\", \"nl-NL\"] received ${typeof i18n.locales}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    const invalidLocales = i18n.locales.filter(\n      (locale: any) => typeof locale !== 'string'\n    )\n\n    if (invalidLocales.length > 0) {\n      throw new Error(\n        `Specified i18n.locales contains invalid values (${invalidLocales\n          .map(String)\n          .join(\n            ', '\n          )}), locales must be valid locale tags provided as strings e.g. \"en-US\".\\n` +\n          `See here for list of valid language sub-tags: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry`\n      )\n    }\n\n    if (!i18n.locales.includes(i18n.defaultLocale)) {\n      throw new Error(\n        `Specified i18n.defaultLocale should be included in i18n.locales.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n\n    // make sure default Locale is at the front\n    i18n.locales = [\n      i18n.defaultLocale,\n      ...i18n.locales.filter((locale) => locale !== i18n.defaultLocale),\n    ]\n\n    const localeDetectionType = typeof i18n.localeDetection\n\n    if (\n      localeDetectionType !== 'boolean' &&\n      localeDetectionType !== 'undefined'\n    ) {\n      throw new Error(\n        `Specified i18n.localeDetection should be undefined or a boolean received ${localeDetectionType}.\\nSee more info here: https://nextjs.org/docs/messages/invalid-i18n-config`\n      )\n    }\n  }\n\n  return result\n}\n\nexport default async function loadConfig(\n  phase: string,\n  dir: string,\n  customConfig?: object | null\n): Promise<NextConfigComplete> {\n  await loadEnvConfig(dir, phase === PHASE_DEVELOPMENT_SERVER, Log)\n  await loadWebpackHook(phase, dir)\n\n  if (customConfig) {\n    return assignDefaults({\n      configOrigin: 'server',\n      ...customConfig,\n    }) as NextConfigComplete\n  }\n\n  const path = await findUp(CONFIG_FILE, { cwd: dir })\n\n  // If config file was found\n  if (path?.length) {\n    let userConfigModule: any\n\n    try {\n      userConfigModule = require(path)\n    } catch (err) {\n      console.error(\n        chalk.red('Error:') +\n          ' failed to load next.config.js, see more info here https://nextjs.org/docs/messages/next-config-error'\n      )\n      throw err\n    }\n    const userConfig = normalizeConfig(\n      phase,\n      userConfigModule.default || userConfigModule\n    )\n\n    if (Object.keys(userConfig).length === 0) {\n      Log.warn(\n        'Detected next.config.js, no exported configuration found. https://nextjs.org/docs/messages/empty-configuration'\n      )\n    }\n\n    if (userConfig.target && !targets.includes(userConfig.target)) {\n      throw new Error(\n        `Specified target is invalid. Provided: \"${\n          userConfig.target\n        }\" should be one of ${targets.join(', ')}`\n      )\n    }\n\n    if (userConfig.amp?.canonicalBase) {\n      const { canonicalBase } = userConfig.amp || ({} as any)\n      userConfig.amp = userConfig.amp || {}\n      userConfig.amp.canonicalBase =\n        (canonicalBase.endsWith('/')\n          ? canonicalBase.slice(0, -1)\n          : canonicalBase) || ''\n    }\n\n    if (process.env.NEXT_PRIVATE_TARGET || hasNextSupport) {\n      userConfig.target = process.env.NEXT_PRIVATE_TARGET || 'server'\n    }\n\n    return assignDefaults({\n      configOrigin: CONFIG_FILE,\n      configFile: path,\n      ...userConfig,\n    }) as NextConfigComplete\n  } else {\n    const configBaseName = basename(CONFIG_FILE, extname(CONFIG_FILE))\n    const nonJsPath = findUp.sync(\n      [\n        `${configBaseName}.jsx`,\n        `${configBaseName}.ts`,\n        `${configBaseName}.tsx`,\n        `${configBaseName}.json`,\n      ],\n      { cwd: dir }\n    )\n    if (nonJsPath?.length) {\n      throw new Error(\n        `Configuring Next.js via '${basename(\n          nonJsPath\n        )}' is not supported. Please replace the file with 'next.config.js'.`\n      )\n    }\n  }\n\n  const completeConfig = defaultConfig as NextConfigComplete\n  setHttpAgentOptions(completeConfig.httpAgentOptions)\n  return completeConfig\n}\n\nexport function isTargetLikeServerless(target: string) {\n  const isServerless = target === 'serverless'\n  const isServerlessTrace = target === 'experimental-serverless-trace'\n  return isServerless || isServerlessTrace\n}\n\nexport function setHttpAgentOptions(\n  options: NextConfigComplete['httpAgentOptions']\n) {\n  if ((global as any).__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to resuse the same agent for all requests.\n    return\n  }\n\n  if (!options) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  ;(global as any).__NEXT_HTTP_AGENT = new HttpAgent(options)\n  ;(global as any).__NEXT_HTTPS_AGENT = new HttpsAgent(options)\n}\n"]},"metadata":{},"sourceType":"script"}