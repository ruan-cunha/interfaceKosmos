{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseUrl = parseUrl;\n\nvar _querystring = require(\"./querystring\");\n\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\n\nfunction parseUrl(url) {\n  if (url.startsWith('/')) {\n    return (0, _parseRelativeUrl).parseRelativeUrl(url);\n  }\n\n  const parsedURL = new URL(url);\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search\n  };\n}","map":{"version":3,"sources":["../../../../../shared/lib/router/utils/parse-url.ts"],"names":[],"mappings":";;;;;QAegB,Q,GAAA,Q;;AAduB,IAAA,YAAe,GAAA,OAAA,CAAA,eAAA,CAAf;;AACN,IAAA,iBAAsB,GAAA,OAAA,CAAA,sBAAA,CAAtB;;SAajB,Q,CAAS,G,EAAwB;AAC/C,MAAI,GAAG,CAAC,UAAJ,CAAc,GAAd,CAAJ,EAAyB;eAdM,iB,EAAsB,gB,CAe3B,G;AACzB;;AAED,QAAM,SAAS,GAAG,IAAI,GAAJ,CAAQ,GAAR,CAAlB;;AAEE,IAAA,IAAI,EAAE,SAAS,CAAC,I;AAChB,IAAA,QAAQ,EAAE,SAAS,CAAC,Q;AACpB,IAAA,IAAI,EAAE,SAAS,CAAC,I;AAChB,IAAA,QAAQ,EAAE,SAAS,CAAC,Q;AACpB,IAAA,IAAI,EAAE,SAAS,CAAC,I;AAChB,IAAA,QAAQ,EAAE,SAAS,CAAC,Q;AACpB,IAAA,KAAK,EAAA,CAAA,GA3B8B,YA2B9B,EA3B6C,sBA2B7C,CAAyB,SAAS,CAAC,YAAnC,C;AACL,IAAA,MAAM,EAAE,SAAS,CAAC;;AAErB","sourcesContent":["import type { ParsedUrlQuery } from 'querystring'\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}